ARM GAS  /var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccGMqppg.s 			page 1


   1              		.cpu cortex-m7
   2              		.arch armv7e-m
   3              		.fpu fpv5-d16
   4              		.eabi_attribute 28, 1
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 4
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.file	"AudioProcessor.cpp"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text._ZN13VoiceEnvelope13SetAttackTimeEf,"axG",%progbits,_ZN13VoiceEnvelope13SetAttackTi
  19              		.align	1
  20              		.weak	_ZN13VoiceEnvelope13SetAttackTimeEf
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  25              	_ZN13VoiceEnvelope13SetAttackTimeEf:
  26              	.LVL0:
  27              	.LFB5036:
  28              		.file 1 "VoiceEnvelope.h"
   1:VoiceEnvelope.h **** #pragma once
   2:VoiceEnvelope.h **** #include <algorithm>
   3:VoiceEnvelope.h **** 
   4:VoiceEnvelope.h **** // Simple envelope for each polyphonic voice
   5:VoiceEnvelope.h **** class VoiceEnvelope {
   6:VoiceEnvelope.h **** public:
   7:VoiceEnvelope.h ****     enum EnvState {
   8:VoiceEnvelope.h ****         ENV_IDLE,
   9:VoiceEnvelope.h ****         ENV_ATTACK,
  10:VoiceEnvelope.h ****         ENV_SUSTAIN,
  11:VoiceEnvelope.h ****         ENV_DECAY,
  12:VoiceEnvelope.h ****         ENV_RESET
  13:VoiceEnvelope.h ****     };
  14:VoiceEnvelope.h **** 
  15:VoiceEnvelope.h ****     enum EnvMode {
  16:VoiceEnvelope.h ****         MODE_AR,   // Attack-Release
  17:VoiceEnvelope.h ****         MODE_ASR   // Attack-Sustain-Release
  18:VoiceEnvelope.h ****     };
  19:VoiceEnvelope.h **** 
  20:VoiceEnvelope.h ****     VoiceEnvelope() :
  21:VoiceEnvelope.h ****         current_state(ENV_IDLE),
  22:VoiceEnvelope.h ****         current_value(0.0f),
  23:VoiceEnvelope.h ****         mode(MODE_ASR),
  24:VoiceEnvelope.h ****         attack_curve_coefficient(0.5f),
  25:VoiceEnvelope.h ****         release_curve_coefficient(0.5f),
  26:VoiceEnvelope.h ****         phase(0),
  27:VoiceEnvelope.h ****         decay_start_level(0.0f)
  28:VoiceEnvelope.h ****     {}
  29:VoiceEnvelope.h **** 
  30:VoiceEnvelope.h ****     void Init(float sample_rate) {
ARM GAS  /var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccGMqppg.s 			page 2


  31:VoiceEnvelope.h ****         time_range_2x = 2.0f * 4.0f * sample_rate;  // 4s max time
  32:VoiceEnvelope.h ****         min_attack_time = 0.0002f * sample_rate;    // 0.2ms min attack (much faster for punchiness
  33:VoiceEnvelope.h ****         min_decay_time_a = 0.4f * sample_rate;      // 400ms min decay A
  34:VoiceEnvelope.h ****         min_decay_time_b = 0.01f * sample_rate;     // 10ms min decay B
  35:VoiceEnvelope.h ****         reset_time = 0.008f * sample_rate;          // 8ms reset time
  36:VoiceEnvelope.h ****         reset_coefficient = 1.0f / reset_time;
  37:VoiceEnvelope.h ****         
  38:VoiceEnvelope.h ****         // Default curves
  39:VoiceEnvelope.h ****         SetAttackCurve(0.5f);
  40:VoiceEnvelope.h ****         SetReleaseCurve(0.5f);
  41:VoiceEnvelope.h ****     }
  42:VoiceEnvelope.h **** 
  43:VoiceEnvelope.h ****     void SetMode(EnvMode new_mode) {
  44:VoiceEnvelope.h ****         mode = new_mode;
  45:VoiceEnvelope.h ****     }
  46:VoiceEnvelope.h **** 
  47:VoiceEnvelope.h ****     // Original combined shape method for backward compatibility
  48:VoiceEnvelope.h ****     void SetShape(float value) {
  49:VoiceEnvelope.h ****         float curve;
  50:VoiceEnvelope.h ****         if (value < 0.5f) {
  51:VoiceEnvelope.h ****             attack_time = min_attack_time;
  52:VoiceEnvelope.h ****             decay_time = static_cast<size_t>(time_range_2x * value * value) + min_decay_time_a;
  53:VoiceEnvelope.h ****             curve = value * 0.15f;
  54:VoiceEnvelope.h ****         } else {
  55:VoiceEnvelope.h ****             float norm_val = 2.0f * value - 1.0f;
  56:VoiceEnvelope.h ****             attack_time = static_cast<size_t>(time_range_2x * norm_val * norm_val) + min_attack_tim
  57:VoiceEnvelope.h ****             decay_time = static_cast<size_t>(time_range_2x * (1.0f - value * value)) + min_decay_ti
  58:VoiceEnvelope.h ****             curve = 0.5f;
  59:VoiceEnvelope.h ****         }
  60:VoiceEnvelope.h ****         attack_coefficient = 1.0f / attack_time;
  61:VoiceEnvelope.h ****         decay_coefficient = 1.0f / decay_time;
  62:VoiceEnvelope.h ****         SetAttackCurve(curve);
  63:VoiceEnvelope.h ****         SetReleaseCurve(curve);
  64:VoiceEnvelope.h ****     }
  65:VoiceEnvelope.h ****     
  66:VoiceEnvelope.h ****     // New methods for separate attack and release control
  67:VoiceEnvelope.h ****     void SetAttackTime(float value) {
  29              		.loc 1 67 10 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		@ link register save eliminated.
  68:VoiceEnvelope.h ****         // Map 0-1 value to attack time (exponential scaling)
  69:VoiceEnvelope.h ****         // value³ for finer control at shorter settings
  70:VoiceEnvelope.h ****         float value_cubed = value * value * value;
  34              		.loc 1 70 9 view .LVU1
  71:VoiceEnvelope.h ****         
  72:VoiceEnvelope.h ****         // Special handling for super punchy attacks at low values
  73:VoiceEnvelope.h ****         if (value < 0.1f) {
  35              		.loc 1 73 9 view .LVU2
  36 0000 9FED286A 		vldr.32	s12, .L13
  37 0004 B4EEC60A 		vcmpe.f32	s0, s12
  38 0008 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
  39 000c 31D5     		bpl	.L10
  74:VoiceEnvelope.h ****             // Extra fast attacks at the beginning of the range
  75:VoiceEnvelope.h ****             attack_time = static_cast<size_t>(min_attack_time + 
  40              		.loc 1 75 13 view .LVU3
ARM GAS  /var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccGMqppg.s 			page 3


  76:VoiceEnvelope.h ****                                            (min_attack_time * 9.0f * value / 0.1f));
  41              		.loc 1 76 61 is_stmt 0 view .LVU4
  42 000e B2EE027A 		vmov.f32	s14, #9.0e+0
  75:VoiceEnvelope.h ****                                            (min_attack_time * 9.0f * value / 0.1f));
  43              		.loc 1 75 47 view .LVU5
  44 0012 D0ED056A 		vldr.32	s13, [r0, #20]
  45              		.loc 1 76 61 view .LVU6
  46 0016 26EE877A 		vmul.f32	s14, s13, s14
  47              		.loc 1 76 68 view .LVU7
  48 001a 27EE007A 		vmul.f32	s14, s14, s0
  49              		.loc 1 76 76 view .LVU8
  50 001e C7EE067A 		vdiv.f32	s15, s14, s12
  75:VoiceEnvelope.h ****                                            (min_attack_time * 9.0f * value / 0.1f));
  51              		.loc 1 75 63 view .LVU9
  52 0022 77EEA67A 		vadd.f32	s15, s15, s13
  53              	.L12:
  77:VoiceEnvelope.h ****         } else {
  78:VoiceEnvelope.h ****             // Normal range from 2ms to 4 seconds
  79:VoiceEnvelope.h ****             attack_time = static_cast<size_t>(0.002f * time_range_2x/8.0f + 
  54              		.loc 1 79 27 view .LVU10
  55 0026 FCEEE77A 		vcvt.u32.f32	s15, s15
  80:VoiceEnvelope.h ****                                            (time_range_2x * 0.5f * value_cubed));
  81:VoiceEnvelope.h ****         }
  82:VoiceEnvelope.h ****         
  83:VoiceEnvelope.h ****         attack_coefficient = 1.0f / attack_time;
  56              		.loc 1 83 35 view .LVU11
  57 002a F7EE006A 		vmov.f32	s13, #1.0e+0
  58 002e C0ED0D7A 		vstr.32	s15, [r0, #52]	@ int
  59              		.loc 1 83 9 is_stmt 1 view .LVU12
  60              		.loc 1 83 35 is_stmt 0 view .LVU13
  61 0032 F8EE677A 		vcvt.f32.u32	s15, s15
  62 0036 86EEA77A 		vdiv.f32	s14, s13, s15
  63              		.loc 1 83 28 view .LVU14
  64 003a 80ED0B7A 		vstr.32	s14, [r0, #44]
  84:VoiceEnvelope.h ****         
  85:VoiceEnvelope.h ****         // Make curve more exponential for faster attacks
  86:VoiceEnvelope.h ****         if (value < 0.3f) {
  65              		.loc 1 86 9 is_stmt 1 view .LVU15
  66 003e 9FED1A7A 		vldr.32	s14, .L13+4
  67 0042 B4EEC70A 		vcmpe.f32	s0, s14
  68 0046 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
  69 004a 27D5     		bpl	.L11
  70              	.LVL1:
  71              	.LBB115:
  72              	.LBI115:
  67:VoiceEnvelope.h ****         // Map 0-1 value to attack time (exponential scaling)
  73              		.loc 1 67 10 view .LVU16
  74              	.LBB116:
  87:VoiceEnvelope.h ****             // More exponential curve for punchy attacks
  88:VoiceEnvelope.h ****             SetAttackCurve(0.7f + (0.3f - value)); // 0.7 to 1.0 range for punchier curve
  75              		.loc 1 88 13 view .LVU17
  76              	.LBB117:
  77              	.LBI117:
  89:VoiceEnvelope.h ****         } else {
  90:VoiceEnvelope.h ****             // Normal curve
  91:VoiceEnvelope.h ****             SetAttackCurve(0.5f);
  92:VoiceEnvelope.h ****         }
ARM GAS  /var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccGMqppg.s 			page 4


  93:VoiceEnvelope.h ****     }
  94:VoiceEnvelope.h ****     
  95:VoiceEnvelope.h ****     void SetReleaseTime(float value) {
  96:VoiceEnvelope.h ****         // Map 0-1 value to release time (exponential scaling)
  97:VoiceEnvelope.h ****         // value³ for finer control at shorter settings
  98:VoiceEnvelope.h ****         float value_cubed = value * value * value;
  99:VoiceEnvelope.h ****         
 100:VoiceEnvelope.h ****         // Release time ranges from min_decay_time_b to 8 seconds
 101:VoiceEnvelope.h ****         decay_time = static_cast<size_t>(min_decay_time_b + 
 102:VoiceEnvelope.h ****                                         (time_range_2x * value_cubed));
 103:VoiceEnvelope.h ****         decay_coefficient = 1.0f / decay_time;
 104:VoiceEnvelope.h ****         
 105:VoiceEnvelope.h ****         // Use consistent release curve regardless of release time
 106:VoiceEnvelope.h ****         SetReleaseCurve(0.5f);
 107:VoiceEnvelope.h ****     }
 108:VoiceEnvelope.h ****     
 109:VoiceEnvelope.h ****     void SetAttackCurve(float value) {
  78              		.loc 1 109 10 view .LVU18
  79              	.LBB118:
 110:VoiceEnvelope.h ****         float cu = value - 0.5f;
  80              		.loc 1 110 9 view .LVU19
  81              	.LBE118:
  82              	.LBE117:
  88:VoiceEnvelope.h ****         } else {
  83              		.loc 1 88 41 is_stmt 0 view .LVU20
  84 004c 77EE407A 		vsub.f32	s15, s14, s0
  88:VoiceEnvelope.h ****         } else {
  85              		.loc 1 88 27 view .LVU21
  86 0050 9FED167A 		vldr.32	s14, .L13+8
  87 0054 77EE877A 		vadd.f32	s15, s15, s14
  88              	.LVL2:
  89              	.LBB120:
  90              	.LBB119:
  91              		.loc 1 110 15 view .LVU22
  92 0058 B6EE007A 		vmov.f32	s14, #5.0e-1
  93 005c 77EEC77A 		vsub.f32	s15, s15, s14
  94              	.LVL3:
 111:VoiceEnvelope.h ****         attack_curve_coefficient = 128.0f * cu * cu;
  95              		.loc 1 111 9 is_stmt 1 view .LVU23
  96              		.loc 1 111 43 is_stmt 0 view .LVU24
  97 0060 9FED137A 		vldr.32	s14, .L13+12
  98 0064 27EE877A 		vmul.f32	s14, s15, s14
  99              		.loc 1 111 48 view .LVU25
 100 0068 67EE277A 		vmul.f32	s15, s14, s15
 101              	.LVL4:
 102              	.L5:
 103              		.loc 1 111 48 view .LVU26
 104 006c C0ED027A 		vstr.32	s15, [r0, #8]
 105              	.LBE119:
 106              	.LBE120:
 107              	.LBE116:
 108              	.LBE115:
  93:VoiceEnvelope.h ****     
 109              		.loc 1 93 5 view .LVU27
 110 0070 7047     		bx	lr
 111              	.L10:
  79:VoiceEnvelope.h ****                                            (time_range_2x * 0.5f * value_cubed));
ARM GAS  /var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccGMqppg.s 			page 5


 112              		.loc 1 79 13 is_stmt 1 view .LVU28
  70:VoiceEnvelope.h ****         
 113              		.loc 1 70 35 is_stmt 0 view .LVU29
 114 0072 60EE007A 		vmul.f32	s15, s0, s0
  79:VoiceEnvelope.h ****                                            (time_range_2x * 0.5f * value_cubed));
 115              		.loc 1 79 56 view .LVU30
 116 0076 90ED047A 		vldr.32	s14, [r0, #16]
  80:VoiceEnvelope.h ****         }
 117              		.loc 1 80 59 view .LVU31
 118 007a B6EE006A 		vmov.f32	s12, #5.0e-1
  79:VoiceEnvelope.h ****                                            (time_range_2x * 0.5f * value_cubed));
 119              		.loc 1 79 54 view .LVU32
 120 007e DFED0D6A 		vldr.32	s13, .L13+16
  70:VoiceEnvelope.h ****         
 121              		.loc 1 70 15 view .LVU33
 122 0082 67EE807A 		vmul.f32	s15, s15, s0
  79:VoiceEnvelope.h ****                                            (time_range_2x * 0.5f * value_cubed));
 123              		.loc 1 79 54 view .LVU34
 124 0086 67EE266A 		vmul.f32	s13, s14, s13
  80:VoiceEnvelope.h ****         }
 125              		.loc 1 80 59 view .LVU35
 126 008a 27EE067A 		vmul.f32	s14, s14, s12
  80:VoiceEnvelope.h ****         }
 127              		.loc 1 80 66 view .LVU36
 128 008e 67EE877A 		vmul.f32	s15, s15, s14
  79:VoiceEnvelope.h ****                                            (time_range_2x * 0.5f * value_cubed));
 129              		.loc 1 79 75 view .LVU37
 130 0092 B4EE007A 		vmov.f32	s14, #1.25e-1
 131 0096 E6EE877A 		vfma.f32	s15, s13, s14
 132 009a C4E7     		b	.L12
 133              	.L11:
 134              	.LBB121:
 135              	.LBB122:
 136              		.loc 1 111 34 view .LVU38
 137 009c DFED067A 		vldr.32	s15, .L13+20
 138 00a0 E4E7     		b	.L5
 139              	.L14:
 140 00a2 00BF     		.align	2
 141              	.L13:
 142 00a4 CDCCCC3D 		.word	1036831949
 143 00a8 9A99993E 		.word	1050253722
 144 00ac 3333333F 		.word	1060320051
 145 00b0 00000043 		.word	1124073472
 146 00b4 6F12033B 		.word	990057071
 147 00b8 00000000 		.word	0
 148              	.LBE122:
 149              	.LBE121:
 150              		.cfi_endproc
 151              	.LFE5036:
 153              		.section	.text._ZN13VoiceEnvelope14SetReleaseTimeEf,"axG",%progbits,_ZN13VoiceEnvelope14SetRelease
 154              		.align	1
 155              		.weak	_ZN13VoiceEnvelope14SetReleaseTimeEf
 156              		.syntax unified
 157              		.thumb
 158              		.thumb_func
 160              	_ZN13VoiceEnvelope14SetReleaseTimeEf:
 161              	.LVL5:
ARM GAS  /var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccGMqppg.s 			page 6


 162              	.LFB5037:
  95:VoiceEnvelope.h ****         // Map 0-1 value to release time (exponential scaling)
 163              		.loc 1 95 10 is_stmt 1 view -0
 164              		.cfi_startproc
 165              		@ args = 0, pretend = 0, frame = 0
 166              		@ frame_needed = 0, uses_anonymous_args = 0
 167              		@ link register save eliminated.
  98:VoiceEnvelope.h ****         
 168              		.loc 1 98 9 view .LVU40
 101:VoiceEnvelope.h ****                                         (time_range_2x * value_cubed));
 169              		.loc 1 101 9 view .LVU41
  98:VoiceEnvelope.h ****         
 170              		.loc 1 98 35 is_stmt 0 view .LVU42
 171 0000 60EE007A 		vmul.f32	s15, s0, s0
 101:VoiceEnvelope.h ****                                         (time_range_2x * value_cubed));
 172              		.loc 1 101 59 view .LVU43
 173 0004 90ED047A 		vldr.32	s14, [r0, #16]
 103:VoiceEnvelope.h ****         
 174              		.loc 1 103 34 view .LVU44
 175 0008 F7EE006A 		vmov.f32	s13, #1.0e+0
 176              	.LBB123:
 177              	.LBB124:
 112:VoiceEnvelope.h ****     }
 113:VoiceEnvelope.h ****     
 114:VoiceEnvelope.h ****     void SetReleaseCurve(float value) {
 115:VoiceEnvelope.h ****         float cu = value - 0.5f;
 116:VoiceEnvelope.h ****         release_curve_coefficient = 128.0f * cu * cu;
 178              		.loc 1 116 35 view .LVU45
 179 000c 0023     		movs	r3, #0
 180              	.LBE124:
 181              	.LBE123:
  98:VoiceEnvelope.h ****         
 182              		.loc 1 98 15 view .LVU46
 183 000e 27EE800A 		vmul.f32	s0, s15, s0
 184              	.LVL6:
 101:VoiceEnvelope.h ****                                         (time_range_2x * value_cubed));
 185              		.loc 1 101 59 view .LVU47
 186 0012 D0ED077A 		vldr.32	s15, [r0, #28]
 187              	.LBB127:
 188              	.LBB125:
 189              		.loc 1 116 35 view .LVU48
 190 0016 C360     		str	r3, [r0, #12]	@ float
 191              	.LBE125:
 192              	.LBE127:
 101:VoiceEnvelope.h ****                                         (time_range_2x * value_cubed));
 193              		.loc 1 101 59 view .LVU49
 194 0018 E7EE007A 		vfma.f32	s15, s14, s0
 101:VoiceEnvelope.h ****                                         (time_range_2x * value_cubed));
 195              		.loc 1 101 22 view .LVU50
 196 001c FCEEE77A 		vcvt.u32.f32	s15, s15
 101:VoiceEnvelope.h ****                                         (time_range_2x * value_cubed));
 197              		.loc 1 101 20 view .LVU51
 198 0020 C0ED0E7A 		vstr.32	s15, [r0, #56]	@ int
 103:VoiceEnvelope.h ****         
 199              		.loc 1 103 9 is_stmt 1 view .LVU52
 103:VoiceEnvelope.h ****         
 200              		.loc 1 103 34 is_stmt 0 view .LVU53
ARM GAS  /var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccGMqppg.s 			page 7


 201 0024 F8EE677A 		vcvt.f32.u32	s15, s15
 202 0028 86EEA77A 		vdiv.f32	s14, s13, s15
 103:VoiceEnvelope.h ****         
 203              		.loc 1 103 27 view .LVU54
 204 002c 80ED0C7A 		vstr.32	s14, [r0, #48]
 106:VoiceEnvelope.h ****     }
 205              		.loc 1 106 9 is_stmt 1 view .LVU55
 206              	.LVL7:
 207              	.LBB128:
 208              	.LBI123:
 114:VoiceEnvelope.h ****         float cu = value - 0.5f;
 209              		.loc 1 114 10 view .LVU56
 210              	.LBB126:
 115:VoiceEnvelope.h ****         release_curve_coefficient = 128.0f * cu * cu;
 211              		.loc 1 115 9 view .LVU57
 212              		.loc 1 116 9 view .LVU58
 213              		.loc 1 116 9 is_stmt 0 view .LVU59
 214              	.LBE126:
 215              	.LBE128:
 107:VoiceEnvelope.h ****     
 216              		.loc 1 107 5 view .LVU60
 217 0030 7047     		bx	lr
 218              		.cfi_endproc
 219              	.LFE5037:
 221              		.section	.text._ZN13VoiceEnvelope7ProcessEv,"axG",%progbits,_ZN13VoiceEnvelope7ProcessEv,comdat
 222              		.align	1
 223              		.weak	_ZN13VoiceEnvelope7ProcessEv
 224              		.syntax unified
 225              		.thumb
 226              		.thumb_func
 228              	_ZN13VoiceEnvelope7ProcessEv:
 229              	.LVL8:
 230              	.LFB5042:
 117:VoiceEnvelope.h ****     }
 118:VoiceEnvelope.h **** 
 119:VoiceEnvelope.h ****     void Trigger() {
 120:VoiceEnvelope.h ****         switch (current_state) {
 121:VoiceEnvelope.h ****             case ENV_IDLE:
 122:VoiceEnvelope.h ****                 current_state = ENV_ATTACK;
 123:VoiceEnvelope.h ****                 phase = 0;
 124:VoiceEnvelope.h ****                 break;
 125:VoiceEnvelope.h ****             case ENV_DECAY:
 126:VoiceEnvelope.h ****                 current_state = ENV_ATTACK;
 127:VoiceEnvelope.h ****                 phase = CalculateAttackPhase(current_value);
 128:VoiceEnvelope.h ****                 break;
 129:VoiceEnvelope.h ****             default:
 130:VoiceEnvelope.h ****                 break;
 131:VoiceEnvelope.h ****         }
 132:VoiceEnvelope.h ****     }
 133:VoiceEnvelope.h **** 
 134:VoiceEnvelope.h ****     void Release() {
 135:VoiceEnvelope.h ****         switch (current_state) {
 136:VoiceEnvelope.h ****             case ENV_ATTACK:
 137:VoiceEnvelope.h ****                 // Preserve the attack curve character when transitioning to release
 138:VoiceEnvelope.h ****                 // This decouples release time from affecting attack punchiness
 139:VoiceEnvelope.h ****                 current_value = CalculateAttackAmplitude(static_cast<float>(phase) * attack_coeffic
 140:VoiceEnvelope.h ****                 phase = 0; // Always start release from beginning, preserving the current level
ARM GAS  /var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccGMqppg.s 			page 8


 141:VoiceEnvelope.h ****                 current_state = ENV_DECAY;
 142:VoiceEnvelope.h ****                 break;
 143:VoiceEnvelope.h ****             case ENV_SUSTAIN:
 144:VoiceEnvelope.h ****                 phase = 0;
 145:VoiceEnvelope.h ****                 current_state = ENV_DECAY;
 146:VoiceEnvelope.h ****                 break;
 147:VoiceEnvelope.h ****             default:
 148:VoiceEnvelope.h ****                 break;
 149:VoiceEnvelope.h ****         }
 150:VoiceEnvelope.h ****     }
 151:VoiceEnvelope.h **** 
 152:VoiceEnvelope.h ****     float Process() {
 231              		.loc 1 152 11 is_stmt 1 view -0
 232              		.cfi_startproc
 233              		@ args = 0, pretend = 0, frame = 8
 234              		@ frame_needed = 0, uses_anonymous_args = 0
 235              		@ link register save eliminated.
 153:VoiceEnvelope.h ****         float ph;
 236              		.loc 1 153 9 view .LVU62
 154:VoiceEnvelope.h ****         switch (current_state) {
 237              		.loc 1 154 9 view .LVU63
 238 0000 0378     		ldrb	r3, [r0]	@ zero_extendqisi2
 239 0002 F7EE007A 		vmov.f32	s15, #1.0e+0
 152:VoiceEnvelope.h ****         float ph;
 240              		.loc 1 152 11 is_stmt 0 view .LVU64
 241 0006 82B0     		sub	sp, sp, #8
 242              		.cfi_def_cfa_offset 8
 243 0008 0022     		movs	r2, #0
 244              		.loc 1 154 9 view .LVU65
 245 000a 042B     		cmp	r3, #4
 246 000c 05D8     		bhi	.L17
 247 000e DFE803F0 		tbb	[pc, r3]
 248              	.L19:
 249 0012 03       		.byte	(.L23-.L19)/2
 250 0013 1C       		.byte	(.L22-.L19)/2
 251 0014 3D       		.byte	(.L21-.L19)/2
 252 0015 40       		.byte	(.L20-.L19)/2
 253 0016 62       		.byte	(.L18-.L19)/2
 254 0017 00       		.p2align 1
 255              	.L23:
 155:VoiceEnvelope.h ****             case ENV_IDLE:
 256              		.loc 1 155 13 is_stmt 1 view .LVU66
 156:VoiceEnvelope.h ****                 current_value = 0.0f;
 257              		.loc 1 156 17 view .LVU67
 258              		.loc 1 156 31 is_stmt 0 view .LVU68
 259 0018 4260     		str	r2, [r0, #4]	@ float
 157:VoiceEnvelope.h ****                 break;
 260              		.loc 1 157 17 is_stmt 1 view .LVU69
 261              	.L17:
 158:VoiceEnvelope.h **** 
 159:VoiceEnvelope.h ****             case ENV_ATTACK:
 160:VoiceEnvelope.h ****                 ph = static_cast<float>(phase) * attack_coefficient;
 161:VoiceEnvelope.h ****                 current_value = CalculateAttackAmplitude(ph);
 162:VoiceEnvelope.h ****                 if (phase >= attack_time) {
 163:VoiceEnvelope.h ****                     current_state = (mode == MODE_AR) ? ENV_DECAY : ENV_SUSTAIN;
 164:VoiceEnvelope.h ****                     phase = 0;
 165:VoiceEnvelope.h ****                 } else {
ARM GAS  /var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccGMqppg.s 			page 9


 166:VoiceEnvelope.h ****                     phase++;
 167:VoiceEnvelope.h ****                 }
 168:VoiceEnvelope.h ****                 break;
 169:VoiceEnvelope.h **** 
 170:VoiceEnvelope.h ****             case ENV_SUSTAIN:
 171:VoiceEnvelope.h ****                 current_value = 1.0f;
 172:VoiceEnvelope.h ****                 break;
 173:VoiceEnvelope.h **** 
 174:VoiceEnvelope.h ****             case ENV_DECAY:
 175:VoiceEnvelope.h ****                 // Use current_value as starting point for decay
 176:VoiceEnvelope.h ****                 // This preserves the correct level from attack phase
 177:VoiceEnvelope.h ****                 ph = static_cast<float>(phase) * decay_coefficient;
 178:VoiceEnvelope.h ****                 if (phase == 0) {
 179:VoiceEnvelope.h ****                     // On first frame, use current value
 180:VoiceEnvelope.h ****                     decay_start_level = current_value;
 181:VoiceEnvelope.h ****                 }
 182:VoiceEnvelope.h ****                 current_value = decay_start_level * (1.0f - ph) / (1.0f + release_curve_coefficient
 183:VoiceEnvelope.h ****                 
 184:VoiceEnvelope.h ****                 if (phase >= decay_time) {
 185:VoiceEnvelope.h ****                     current_state = ENV_IDLE;
 186:VoiceEnvelope.h ****                     phase = 0;
 187:VoiceEnvelope.h ****                 } else {
 188:VoiceEnvelope.h ****                     phase++;
 189:VoiceEnvelope.h ****                 }
 190:VoiceEnvelope.h ****                 break;
 191:VoiceEnvelope.h **** 
 192:VoiceEnvelope.h ****             case ENV_RESET:
 193:VoiceEnvelope.h ****                 current_value = reset_target - static_cast<float>(phase) * reset_coefficient;
 194:VoiceEnvelope.h ****                 if (phase >= reset_time) {
 195:VoiceEnvelope.h ****                     current_state = ENV_IDLE;
 196:VoiceEnvelope.h ****                     phase = 0;
 197:VoiceEnvelope.h ****                 } else {
 198:VoiceEnvelope.h ****                     phase++;
 199:VoiceEnvelope.h ****                 }
 200:VoiceEnvelope.h ****                 break;
 201:VoiceEnvelope.h ****         }
 202:VoiceEnvelope.h ****         return std::min(std::max(current_value, 0.0f), 1.0f);
 262              		.loc 1 202 9 view .LVU70
 263              	.LBB135:
 264              	.LBB136:
 265              		.file 2 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h"
   1:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** // Core algorithmic facilities -*- C++ -*-
   2:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
   3:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** // Copyright (C) 2001-2020 Free Software Foundation, Inc.
   4:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** //
   5:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** // software; you can redistribute it and/or modify it under the
   7:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** // terms of the GNU General Public License as published by the
   8:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** // any later version.
  10:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
  11:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** // This library is distributed in the hope that it will be useful,
  12:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** // GNU General Public License for more details.
  15:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
  16:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** // Under Section 7 of GPL version 3, you are granted additional
ARM GAS  /var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccGMqppg.s 			page 10


  17:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** // 3.1, as published by the Free Software Foundation.
  19:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
  20:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** // You should have received a copy of the GNU General Public License and
  21:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** // <http://www.gnu.org/licenses/>.
  24:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
  25:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** /*
  26:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****  *
  27:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****  * Copyright (c) 1994
  28:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****  * Hewlett-Packard Company
  29:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****  *
  30:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****  * Permission to use, copy, modify, distribute and sell this software
  31:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****  * and its documentation for any purpose is hereby granted without fee,
  32:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****  * provided that the above copyright notice appear in all copies and
  33:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****  * that both that copyright notice and this permission notice appear
  34:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****  * in supporting documentation.  Hewlett-Packard Company makes no
  35:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****  * representations about the suitability of this software for any
  36:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  37:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****  *
  38:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****  *
  39:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****  * Copyright (c) 1996-1998
  40:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****  * Silicon Graphics Computer Systems, Inc.
  41:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****  *
  42:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****  * Permission to use, copy, modify, distribute and sell this software
  43:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****  * and its documentation for any purpose is hereby granted without fee,
  44:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****  * provided that the above copyright notice appear in all copies and
  45:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****  * that both that copyright notice and this permission notice appear
  46:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****  * in supporting documentation.  Silicon Graphics makes no
  47:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****  * representations about the suitability of this software for any
  48:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  49:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****  */
  50:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
  51:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** /** @file bits/stl_algobase.h
  52:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****  *  This is an internal header file, included by other library headers.
  53:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****  *  Do not attempt to use it directly. @headername{algorithm}
  54:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****  */
  55:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
  56:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #ifndef _STL_ALGOBASE_H
  57:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #define _STL_ALGOBASE_H 1
  58:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
  59:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #include <bits/c++config.h>
  60:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #include <bits/functexcept.h>
  61:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #include <bits/cpp_type_traits.h>
  62:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #include <ext/type_traits.h>
  63:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #include <ext/numeric_traits.h>
  64:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #include <bits/stl_pair.h>
  65:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #include <bits/stl_iterator_base_types.h>
  66:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #include <bits/stl_iterator_base_funcs.h>
  67:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #include <bits/stl_iterator.h>
  68:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #include <bits/concept_check.h>
  69:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #include <debug/debug.h>
  70:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #include <bits/move.h> // For std::swap
  71:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #include <bits/predefined_ops.h>
  72:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #if __cplusplus >= 201103L
  73:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** # include <type_traits>
ARM GAS  /var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccGMqppg.s 			page 11


  74:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #endif
  75:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #if __cplusplus > 201703L
  76:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** # include <compare>
  77:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #endif
  78:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
  79:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** namespace std _GLIBCXX_VISIBILITY(default)
  80:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** {
  81:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  82:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
  83:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   /*
  84:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    * A constexpr wrapper for __builtin_memcmp.
  85:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    * @param __num The number of elements of type _Tp (not bytes).
  86:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    */
  87:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<typename _Tp, typename _Up>
  88:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     _GLIBCXX14_CONSTEXPR
  89:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     inline int
  90:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     __memcmp(const _Tp* __first1, const _Up* __first2, size_t __num)
  91:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     {
  92:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #if __cplusplus >= 201103L
  93:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       static_assert(sizeof(_Tp) == sizeof(_Up), "can be compared with memcmp");
  94:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #endif
  95:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #ifdef __cpp_lib_is_constant_evaluated
  96:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       if (std::is_constant_evaluated())
  97:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	{
  98:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	  for(; __num > 0; ++__first1, ++__first2, --__num)
  99:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	    if (*__first1 != *__first2)
 100:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	      return *__first1 < *__first2 ? -1 : 1;
 101:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	  return 0;
 102:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	}
 103:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       else
 104:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #endif
 105:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	return __builtin_memcmp(__first1, __first2, sizeof(_Tp) * __num);
 106:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     }
 107:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 108:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #if __cplusplus < 201103L
 109:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   // See http://gcc.gnu.org/ml/libstdc++/2004-08/msg00167.html: in a
 110:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   // nutshell, we are partially implementing the resolution of DR 187,
 111:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   // when it's safe, i.e., the value_types are equal.
 112:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<bool _BoolType>
 113:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     struct __iter_swap
 114:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     {
 115:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       template<typename _ForwardIterator1, typename _ForwardIterator2>
 116:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	static void
 117:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	iter_swap(_ForwardIterator1 __a, _ForwardIterator2 __b)
 118:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	{
 119:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	  typedef typename iterator_traits<_ForwardIterator1>::value_type
 120:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	    _ValueType1;
 121:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	  _ValueType1 __tmp = *__a;
 122:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	  *__a = *__b;
 123:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	  *__b = __tmp;
 124:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	}
 125:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     };
 126:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 127:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<>
 128:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     struct __iter_swap<true>
 129:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     {
 130:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       template<typename _ForwardIterator1, typename _ForwardIterator2>
ARM GAS  /var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccGMqppg.s 			page 12


 131:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	static void
 132:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	iter_swap(_ForwardIterator1 __a, _ForwardIterator2 __b)
 133:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	{
 134:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	  swap(*__a, *__b);
 135:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	}
 136:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     };
 137:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #endif // C++03
 138:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 139:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   /**
 140:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @brief Swaps the contents of two iterators.
 141:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @ingroup mutating_algorithms
 142:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @param  __a  An iterator.
 143:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @param  __b  Another iterator.
 144:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @return   Nothing.
 145:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *
 146:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  This function swaps the values pointed to by two iterators, not the
 147:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  iterators themselves.
 148:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   */
 149:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<typename _ForwardIterator1, typename _ForwardIterator2>
 150:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
 151:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     inline void
 152:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     iter_swap(_ForwardIterator1 __a, _ForwardIterator2 __b)
 153:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     {
 154:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       // concept requirements
 155:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       __glibcxx_function_requires(_Mutable_ForwardIteratorConcept<
 156:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 				  _ForwardIterator1>)
 157:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       __glibcxx_function_requires(_Mutable_ForwardIteratorConcept<
 158:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 				  _ForwardIterator2>)
 159:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 160:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #if __cplusplus < 201103L
 161:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       typedef typename iterator_traits<_ForwardIterator1>::value_type
 162:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	_ValueType1;
 163:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       typedef typename iterator_traits<_ForwardIterator2>::value_type
 164:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	_ValueType2;
 165:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 166:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       __glibcxx_function_requires(_ConvertibleConcept<_ValueType1,
 167:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 				  _ValueType2>)
 168:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       __glibcxx_function_requires(_ConvertibleConcept<_ValueType2,
 169:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 				  _ValueType1>)
 170:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 171:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       typedef typename iterator_traits<_ForwardIterator1>::reference
 172:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	_ReferenceType1;
 173:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       typedef typename iterator_traits<_ForwardIterator2>::reference
 174:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	_ReferenceType2;
 175:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       std::__iter_swap<__are_same<_ValueType1, _ValueType2>::__value
 176:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	&& __are_same<_ValueType1&, _ReferenceType1>::__value
 177:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	&& __are_same<_ValueType2&, _ReferenceType2>::__value>::
 178:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	iter_swap(__a, __b);
 179:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #else
 180:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 181:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       // 187. iter_swap underspecified
 182:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       swap(*__a, *__b);
 183:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #endif
 184:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     }
 185:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 186:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   /**
 187:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @brief Swap the elements of two sequences.
ARM GAS  /var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccGMqppg.s 			page 13


 188:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @ingroup mutating_algorithms
 189:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @param  __first1  A forward iterator.
 190:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @param  __last1   A forward iterator.
 191:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @param  __first2  A forward iterator.
 192:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @return   An iterator equal to @p first2+(last1-first1).
 193:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *
 194:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  Swaps each element in the range @p [first1,last1) with the
 195:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  corresponding element in the range @p [first2,(last1-first1)).
 196:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  The ranges must not overlap.
 197:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   */
 198:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<typename _ForwardIterator1, typename _ForwardIterator2>
 199:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
 200:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     _ForwardIterator2
 201:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     swap_ranges(_ForwardIterator1 __first1, _ForwardIterator1 __last1,
 202:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 		_ForwardIterator2 __first2)
 203:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     {
 204:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       // concept requirements
 205:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       __glibcxx_function_requires(_Mutable_ForwardIteratorConcept<
 206:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 				  _ForwardIterator1>)
 207:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       __glibcxx_function_requires(_Mutable_ForwardIteratorConcept<
 208:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 				  _ForwardIterator2>)
 209:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       __glibcxx_requires_valid_range(__first1, __last1);
 210:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 211:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       for (; __first1 != __last1; ++__first1, (void)++__first2)
 212:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	std::iter_swap(__first1, __first2);
 213:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       return __first2;
 214:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     }
 215:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 216:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   /**
 217:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @brief This does what you think it does.
 218:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @ingroup sorting_algorithms
 219:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @param  __a  A thing of arbitrary type.
 220:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @param  __b  Another thing of arbitrary type.
 221:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @return   The lesser of the parameters.
 222:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *
 223:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  This is the simple classic generic implementation.  It will work on
 224:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  temporary expressions, since they are only evaluated once, unlike a
 225:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  preprocessor macro.
 226:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   */
 227:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<typename _Tp>
 228:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     _GLIBCXX14_CONSTEXPR
 229:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     inline const _Tp&
 230:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     min(const _Tp& __a, const _Tp& __b)
 231:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     {
 232:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       // concept requirements
 233:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       __glibcxx_function_requires(_LessThanComparableConcept<_Tp>)
 234:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       //return __b < __a ? __b : __a;
 235:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       if (__b < __a)
 236:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	return __b;
 237:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       return __a;
 238:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     }
 239:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 240:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   /**
 241:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @brief This does what you think it does.
 242:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @ingroup sorting_algorithms
 243:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @param  __a  A thing of arbitrary type.
 244:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @param  __b  Another thing of arbitrary type.
ARM GAS  /var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccGMqppg.s 			page 14


 245:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @return   The greater of the parameters.
 246:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *
 247:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  This is the simple classic generic implementation.  It will work on
 248:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  temporary expressions, since they are only evaluated once, unlike a
 249:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  preprocessor macro.
 250:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   */
 251:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<typename _Tp>
 252:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     _GLIBCXX14_CONSTEXPR
 253:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     inline const _Tp&
 254:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     max(const _Tp& __a, const _Tp& __b)
 255:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     {
 256:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       // concept requirements
 257:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       __glibcxx_function_requires(_LessThanComparableConcept<_Tp>)
 258:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       //return  __a < __b ? __b : __a;
 259:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       if (__a < __b)
 266              		.loc 2 259 7 is_stmt 0 view .LVU71
 267 001a 90ED017A 		vldr.32	s14, [r0, #4]
 268              	.LBE136:
 269              	.LBE135:
 270              		.loc 1 202 49 view .LVU72
 271 001e 0092     		str	r2, [sp]	@ float
 272              	.LVL9:
 273              	.LBB140:
 274              	.LBI135:
 254:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     {
 275              		.loc 2 254 5 is_stmt 1 view .LVU73
 276              	.LBB137:
 277              		.loc 2 259 7 is_stmt 0 view .LVU74
 278 0020 B5EEC07A 		vcmpe.f32	s14, #0
 279              	.LBE137:
 280              	.LBE140:
 281              		.loc 1 202 56 view .LVU75
 282 0024 CDED017A 		vstr.32	s15, [sp, #4]
 283              	.LBB141:
 284              	.LBB138:
 285              		.loc 2 259 7 view .LVU76
 286 0028 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 287              	.LBE138:
 288              	.LBE141:
 289              		.loc 1 202 34 view .LVU77
 290 002c 54BF     		ite	pl
 291 002e 0430     		addpl	r0, r0, #4
 292              	.LVL10:
 293              	.LBB142:
 294              	.LBB139:
 260:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	return __b;
 295              		.loc 2 260 9 view .LVU78
 296 0030 6846     		movmi	r0, sp
 297              	.LVL11:
 298              		.loc 2 260 9 view .LVU79
 299              	.LBE139:
 300              	.LBE142:
 301              	.LBB143:
 302              	.LBI143:
 230:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     {
 303              		.loc 2 230 5 is_stmt 1 view .LVU80
 304              	.LBB144:
ARM GAS  /var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccGMqppg.s 			page 15


 235:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	return __b;
 305              		.loc 2 235 7 is_stmt 0 view .LVU81
 306 0032 90ED007A 		vldr.32	s14, [r0]
 307 0036 B4EEE77A 		vcmpe.f32	s14, s15
 308 003a F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 236:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       return __a;
 309              		.loc 2 236 9 view .LVU82
 310 003e C8BF     		it	gt
 311 0040 01A8     		addgt	r0, sp, #4
 312              	.LVL12:
 236:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       return __a;
 313              		.loc 2 236 9 view .LVU83
 314              	.LBE144:
 315              	.LBE143:
 203:VoiceEnvelope.h ****     }
 316              		.loc 1 203 5 view .LVU84
 317 0042 90ED000A 		vldr.32	s0, [r0]
 318 0046 02B0     		add	sp, sp, #8
 319              		.cfi_remember_state
 320              		.cfi_def_cfa_offset 0
 321              		@ sp needed
 322 0048 7047     		bx	lr
 323              	.LVL13:
 324              	.L22:
 325              		.cfi_restore_state
 159:VoiceEnvelope.h ****                 ph = static_cast<float>(phase) * attack_coefficient;
 326              		.loc 1 159 13 is_stmt 1 view .LVU85
 160:VoiceEnvelope.h ****                 current_value = CalculateAttackAmplitude(ph);
 327              		.loc 1 160 17 view .LVU86
 160:VoiceEnvelope.h ****                 current_value = CalculateAttackAmplitude(ph);
 328              		.loc 1 160 41 is_stmt 0 view .LVU87
 329 004a C36B     		ldr	r3, [r0, #60]
 330              	.LBB145:
 331              	.LBB146:
 204:VoiceEnvelope.h **** 
 205:VoiceEnvelope.h ****     void Reset() {
 206:VoiceEnvelope.h ****         if (current_state == ENV_IDLE) return;
 207:VoiceEnvelope.h ****         current_state = ENV_RESET;
 208:VoiceEnvelope.h ****         reset_target = current_value;
 209:VoiceEnvelope.h ****         phase = 0;
 210:VoiceEnvelope.h ****     }
 211:VoiceEnvelope.h **** 
 212:VoiceEnvelope.h ****     bool IsActive() const {
 213:VoiceEnvelope.h ****         return current_state != ENV_IDLE;
 214:VoiceEnvelope.h ****     }
 215:VoiceEnvelope.h **** 
 216:VoiceEnvelope.h **** private:
 217:VoiceEnvelope.h ****     float CalculateAttackAmplitude(float ph) {
 218:VoiceEnvelope.h ****         return ph / (1.0f + attack_curve_coefficient * (1.0f - ph));
 332              		.loc 1 218 27 view .LVU88
 333 004c B0EE676A 		vmov.f32	s12, s15
 334              	.LBE146:
 335              	.LBE145:
 160:VoiceEnvelope.h ****                 current_value = CalculateAttackAmplitude(ph);
 336              		.loc 1 160 20 view .LVU89
 337 0050 D0ED0B6A 		vldr.32	s13, [r0, #44]
 160:VoiceEnvelope.h ****                 current_value = CalculateAttackAmplitude(ph);
ARM GAS  /var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccGMqppg.s 			page 16


 338              		.loc 1 160 22 view .LVU90
 339 0054 07EE103A 		vmov	s14, r3	@ int
 340              	.LBB149:
 341              	.LBB147:
 342              		.loc 1 218 27 view .LVU91
 343 0058 D0ED025A 		vldr.32	s11, [r0, #8]
 344              	.LBE147:
 345              	.LBE149:
 162:VoiceEnvelope.h ****                     current_state = (mode == MODE_AR) ? ENV_DECAY : ENV_SUSTAIN;
 346              		.loc 1 162 17 view .LVU92
 347 005c 416B     		ldr	r1, [r0, #52]
 160:VoiceEnvelope.h ****                 current_value = CalculateAttackAmplitude(ph);
 348              		.loc 1 160 22 view .LVU93
 349 005e B8EE477A 		vcvt.f32.u32	s14, s14
 162:VoiceEnvelope.h ****                     current_state = (mode == MODE_AR) ? ENV_DECAY : ENV_SUSTAIN;
 350              		.loc 1 162 17 view .LVU94
 351 0062 8B42     		cmp	r3, r1
 160:VoiceEnvelope.h ****                 current_value = CalculateAttackAmplitude(ph);
 352              		.loc 1 160 20 view .LVU95
 353 0064 27EE267A 		vmul.f32	s14, s14, s13
 354              	.LVL14:
 161:VoiceEnvelope.h ****                 if (phase >= attack_time) {
 355              		.loc 1 161 17 is_stmt 1 view .LVU96
 356              	.LBB150:
 357              	.LBI145:
 217:VoiceEnvelope.h ****         return ph / (1.0f + attack_curve_coefficient * (1.0f - ph));
 358              		.loc 1 217 11 view .LVU97
 359              	.LBB148:
 360              		.loc 1 218 9 view .LVU98
 361              		.loc 1 218 62 is_stmt 0 view .LVU99
 362 0068 77EEC76A 		vsub.f32	s13, s15, s14
 363              		.loc 1 218 27 view .LVU100
 364 006c A5EEA66A 		vfma.f32	s12, s11, s13
 365              	.LVL15:
 366              		.loc 1 218 67 view .LVU101
 367 0070 C7EE066A 		vdiv.f32	s13, s14, s12
 368              	.LBE148:
 369              	.LBE150:
 161:VoiceEnvelope.h ****                 if (phase >= attack_time) {
 370              		.loc 1 161 31 view .LVU102
 371 0074 C0ED016A 		vstr.32	s13, [r0, #4]
 162:VoiceEnvelope.h ****                     current_state = (mode == MODE_AR) ? ENV_DECAY : ENV_SUSTAIN;
 372              		.loc 1 162 17 is_stmt 1 view .LVU103
 373 0078 41D3     		bcc	.L36
 163:VoiceEnvelope.h ****                     phase = 0;
 374              		.loc 1 163 21 view .LVU104
 163:VoiceEnvelope.h ****                     phase = 0;
 375              		.loc 1 163 55 is_stmt 0 view .LVU105
 376 007a 4378     		ldrb	r3, [r0, #1]	@ zero_extendqisi2
 377 007c 002B     		cmp	r3, #0
 378 007e 0CBF     		ite	eq
 379 0080 0323     		moveq	r3, #3
 380 0082 0223     		movne	r3, #2
 163:VoiceEnvelope.h ****                     phase = 0;
 381              		.loc 1 163 35 view .LVU106
 382 0084 0370     		strb	r3, [r0]
 164:VoiceEnvelope.h ****                 } else {
ARM GAS  /var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccGMqppg.s 			page 17


 383              		.loc 1 164 21 is_stmt 1 view .LVU107
 164:VoiceEnvelope.h ****                 } else {
 384              		.loc 1 164 27 is_stmt 0 view .LVU108
 385 0086 0023     		movs	r3, #0
 386              	.LVL16:
 387              	.L35:
 198:VoiceEnvelope.h ****                 }
 388              		.loc 1 198 26 view .LVU109
 389 0088 C363     		str	r3, [r0, #60]
 390 008a C6E7     		b	.L17
 391              	.L21:
 170:VoiceEnvelope.h ****                 current_value = 1.0f;
 392              		.loc 1 170 13 is_stmt 1 view .LVU110
 171:VoiceEnvelope.h ****                 break;
 393              		.loc 1 171 17 view .LVU111
 171:VoiceEnvelope.h ****                 break;
 394              		.loc 1 171 31 is_stmt 0 view .LVU112
 395 008c C0ED017A 		vstr.32	s15, [r0, #4]
 172:VoiceEnvelope.h **** 
 396              		.loc 1 172 17 is_stmt 1 view .LVU113
 397 0090 C3E7     		b	.L17
 398              	.L20:
 174:VoiceEnvelope.h ****                 // Use current_value as starting point for decay
 399              		.loc 1 174 13 view .LVU114
 177:VoiceEnvelope.h ****                 if (phase == 0) {
 400              		.loc 1 177 17 view .LVU115
 177:VoiceEnvelope.h ****                 if (phase == 0) {
 401              		.loc 1 177 41 is_stmt 0 view .LVU116
 402 0092 C36B     		ldr	r3, [r0, #60]
 177:VoiceEnvelope.h ****                 if (phase == 0) {
 403              		.loc 1 177 20 view .LVU117
 404 0094 D0ED0C6A 		vldr.32	s13, [r0, #48]
 177:VoiceEnvelope.h ****                 if (phase == 0) {
 405              		.loc 1 177 22 view .LVU118
 406 0098 07EE103A 		vmov	s14, r3	@ int
 407 009c B8EE477A 		vcvt.f32.u32	s14, s14
 177:VoiceEnvelope.h ****                 if (phase == 0) {
 408              		.loc 1 177 20 view .LVU119
 409 00a0 27EE267A 		vmul.f32	s14, s14, s13
 410              	.LVL17:
 178:VoiceEnvelope.h ****                     // On first frame, use current value
 411              		.loc 1 178 17 is_stmt 1 view .LVU120
 412 00a4 0BB9     		cbnz	r3, .L26
 180:VoiceEnvelope.h ****                 }
 413              		.loc 1 180 21 view .LVU121
 180:VoiceEnvelope.h ****                 }
 414              		.loc 1 180 39 is_stmt 0 view .LVU122
 415 00a6 4168     		ldr	r1, [r0, #4]	@ float
 416 00a8 0164     		str	r1, [r0, #64]	@ float
 417              	.L26:
 182:VoiceEnvelope.h ****                 
 418              		.loc 1 182 17 is_stmt 1 view .LVU123
 182:VoiceEnvelope.h ****                 
 419              		.loc 1 182 59 is_stmt 0 view .LVU124
 420 00aa 77EEC76A 		vsub.f32	s13, s15, s14
 182:VoiceEnvelope.h ****                 
 421              		.loc 1 182 51 view .LVU125
ARM GAS  /var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccGMqppg.s 			page 18


 422 00ae 90ED106A 		vldr.32	s12, [r0, #64]
 182:VoiceEnvelope.h ****                 
 423              		.loc 1 182 73 view .LVU126
 424 00b2 D0ED035A 		vldr.32	s11, [r0, #12]
 184:VoiceEnvelope.h ****                     current_state = ENV_IDLE;
 425              		.loc 1 184 17 view .LVU127
 426 00b6 816B     		ldr	r1, [r0, #56]
 182:VoiceEnvelope.h ****                 
 427              		.loc 1 182 51 view .LVU128
 428 00b8 66EE866A 		vmul.f32	s13, s13, s12
 182:VoiceEnvelope.h ****                 
 429              		.loc 1 182 73 view .LVU129
 430 00bc B0EE676A 		vmov.f32	s12, s15
 184:VoiceEnvelope.h ****                     current_state = ENV_IDLE;
 431              		.loc 1 184 17 view .LVU130
 432 00c0 8B42     		cmp	r3, r1
 182:VoiceEnvelope.h ****                 
 433              		.loc 1 182 73 view .LVU131
 434 00c2 A5EE876A 		vfma.f32	s12, s11, s14
 182:VoiceEnvelope.h ****                 
 435              		.loc 1 182 65 view .LVU132
 436 00c6 86EE867A 		vdiv.f32	s14, s13, s12
 437              	.LVL18:
 182:VoiceEnvelope.h ****                 
 438              		.loc 1 182 31 view .LVU133
 439 00ca 80ED017A 		vstr.32	s14, [r0, #4]
 184:VoiceEnvelope.h ****                     current_state = ENV_IDLE;
 440              		.loc 1 184 17 is_stmt 1 view .LVU134
 441 00ce 16D3     		bcc	.L36
 442              	.LVL19:
 443              	.L28:
 185:VoiceEnvelope.h ****                     phase = 0;
 444              		.loc 1 185 21 view .LVU135
 185:VoiceEnvelope.h ****                     phase = 0;
 445              		.loc 1 185 35 is_stmt 0 view .LVU136
 446 00d0 0023     		movs	r3, #0
 447 00d2 0370     		strb	r3, [r0]
 186:VoiceEnvelope.h ****                 } else {
 448              		.loc 1 186 21 is_stmt 1 view .LVU137
 449 00d4 D8E7     		b	.L35
 450              	.L18:
 192:VoiceEnvelope.h ****                 current_value = reset_target - static_cast<float>(phase) * reset_coefficient;
 451              		.loc 1 192 13 view .LVU138
 193:VoiceEnvelope.h ****                 if (phase >= reset_time) {
 452              		.loc 1 193 17 view .LVU139
 193:VoiceEnvelope.h ****                 if (phase >= reset_time) {
 453              		.loc 1 193 67 is_stmt 0 view .LVU140
 454 00d6 C36B     		ldr	r3, [r0, #60]
 193:VoiceEnvelope.h ****                 if (phase >= reset_time) {
 455              		.loc 1 193 46 view .LVU141
 456 00d8 90ED096A 		vldr.32	s12, [r0, #36]
 193:VoiceEnvelope.h ****                 if (phase >= reset_time) {
 457              		.loc 1 193 48 view .LVU142
 458 00dc 07EE103A 		vmov	s14, r3	@ int
 459 00e0 F8EE476A 		vcvt.f32.u32	s13, s14
 193:VoiceEnvelope.h ****                 if (phase >= reset_time) {
 460              		.loc 1 193 46 view .LVU143
ARM GAS  /var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccGMqppg.s 			page 19


 461 00e4 90ED0A7A 		vldr.32	s14, [r0, #40]
 462 00e8 A6EEC67A 		vfms.f32	s14, s13, s12
 193:VoiceEnvelope.h ****                 if (phase >= reset_time) {
 463              		.loc 1 193 31 view .LVU144
 464 00ec 80ED017A 		vstr.32	s14, [r0, #4]
 194:VoiceEnvelope.h ****                     current_state = ENV_IDLE;
 465              		.loc 1 194 17 is_stmt 1 view .LVU145
 466 00f0 90ED087A 		vldr.32	s14, [r0, #32]
 467 00f4 F4EEC76A 		vcmpe.f32	s13, s14
 468 00f8 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 469 00fc E8DA     		bge	.L28
 470              	.L36:
 198:VoiceEnvelope.h ****                 }
 471              		.loc 1 198 21 view .LVU146
 198:VoiceEnvelope.h ****                 }
 472              		.loc 1 198 26 is_stmt 0 view .LVU147
 473 00fe 0133     		adds	r3, r3, #1
 474 0100 C2E7     		b	.L35
 475              		.cfi_endproc
 476              	.LFE5042:
 478              		.section	.text._Z13ProcessVoicesv,"ax",%progbits
 479              		.align	1
 480              		.global	_Z13ProcessVoicesv
 481              		.syntax unified
 482              		.thumb
 483              		.thumb_func
 485              	_Z13ProcessVoicesv:
 486              	.LFB5057:
 487              		.file 3 "AudioProcessor.cpp"
   1:AudioProcessor.cpp **** #include "Amathia.h"
   2:AudioProcessor.cpp **** #include "mpr121_daisy.h"
   3:AudioProcessor.cpp **** #include <cmath>
   4:AudioProcessor.cpp **** #include <algorithm>
   5:AudioProcessor.cpp **** 
   6:AudioProcessor.cpp **** const float MASTER_VOLUME = 0.7f; // Master output level scaler
   7:AudioProcessor.cpp **** 
   8:AudioProcessor.cpp **** void ProcessControls();
   9:AudioProcessor.cpp **** void ReadKnobValues();
  10:AudioProcessor.cpp **** int  DetermineEngineSettings();
  11:AudioProcessor.cpp **** void HandleTouchInput(int engineIndex, bool poly_mode, int effective_num_voices);
  12:AudioProcessor.cpp **** void ConfigureDelaySettings();
  13:AudioProcessor.cpp **** void PrepareVoiceParameters(int engineIndex, bool poly_mode, int max_voice_idx);
  14:AudioProcessor.cpp **** void ProcessVoiceEnvelopes(bool poly_mode);
  15:AudioProcessor.cpp **** void ProcessAudioOutput(AudioHandle::InterleavingOutputBuffer out, size_t size, float dry_level);
  16:AudioProcessor.cpp **** void UpdatePerformanceMonitors(size_t size, AudioHandle::InterleavingOutputBuffer out);
  17:AudioProcessor.cpp **** void ResetVoiceStates();
  18:AudioProcessor.cpp **** 
  19:AudioProcessor.cpp **** // Global variables for data sharing between decomposed functions
  20:AudioProcessor.cpp **** float pitch_val, harm_knob_val, timbre_knob_val, decay_knob_val, morph_knob_val;
  21:AudioProcessor.cpp **** float delay_feedback_val, delay_time_val, delay_lag_val, delay_mix_val;
  22:AudioProcessor.cpp **** float env_attack_val, env_release_val;
  23:AudioProcessor.cpp **** float attack_time, release_time;
  24:AudioProcessor.cpp **** float mix_buffer_out[BLOCK_SIZE];
  25:AudioProcessor.cpp **** float mix_buffer_aux[BLOCK_SIZE];
  26:AudioProcessor.cpp **** 
  27:AudioProcessor.cpp **** extern VoiceEnvelope voice_envelopes[NUM_VOICES];
  28:AudioProcessor.cpp **** extern float voice_values[NUM_VOICES];
ARM GAS  /var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccGMqppg.s 			page 20


  29:AudioProcessor.cpp **** extern bool voice_active[NUM_VOICES];
  30:AudioProcessor.cpp **** extern Mpr121 touch_sensor;
  31:AudioProcessor.cpp **** extern AnalogControl env_attack_knob;
  32:AudioProcessor.cpp **** 
  33:AudioProcessor.cpp **** // Define the CpuLoadMeter instance
  34:AudioProcessor.cpp **** CpuLoadMeter cpu_meter;
  35:AudioProcessor.cpp **** 
  36:AudioProcessor.cpp **** void ProcessVoices() {
 488              		.loc 3 36 22 is_stmt 1 view -0
 489              		.cfi_startproc
 490              		@ args = 0, pretend = 0, frame = 0
 491              		@ frame_needed = 0, uses_anonymous_args = 0
  37:AudioProcessor.cpp ****     // Apply cubic response for better control at short settings
  38:AudioProcessor.cpp ****     // For punchier attack, use a stronger non-linear curve at lower attack values
  39:AudioProcessor.cpp ****     float attack_raw = env_attack_val;
 492              		.loc 3 39 5 view .LVU149
  36:AudioProcessor.cpp ****     // Apply cubic response for better control at short settings
 493              		.loc 3 36 22 is_stmt 0 view .LVU150
 494 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 495              		.cfi_def_cfa_offset 24
 496              		.cfi_offset 3, -24
 497              		.cfi_offset 4, -20
 498              		.cfi_offset 5, -16
 499              		.cfi_offset 6, -12
 500              		.cfi_offset 7, -8
 501              		.cfi_offset 14, -4
 502              		.loc 3 39 11 view .LVU151
 503 0002 1F4B     		ldr	r3, .L47
 504              	.LBB151:
  40:AudioProcessor.cpp ****     float attack_value;
  41:AudioProcessor.cpp ****     if (attack_raw < 0.2f) {
  42:AudioProcessor.cpp ****         // More exaggerated curve for very short attacks (extra punchy)
  43:AudioProcessor.cpp ****         attack_value = attack_raw * (attack_raw * 0.5f);
  44:AudioProcessor.cpp ****     } else {
  45:AudioProcessor.cpp ****         // Regular cubic response for longer attacks
  46:AudioProcessor.cpp ****         attack_value = attack_raw * attack_raw * attack_raw;
  47:AudioProcessor.cpp ****     }
  48:AudioProcessor.cpp ****     
  49:AudioProcessor.cpp ****     // Normal cubic curve for release
  50:AudioProcessor.cpp ****     float release_value = env_release_val * env_release_val * env_release_val;
  51:AudioProcessor.cpp ****     
  52:AudioProcessor.cpp ****     for(int i = 0; i < NUM_VOICES; i++) {
 505              		.loc 3 52 13 view .LVU152
 506 0004 0025     		movs	r5, #0
 507              	.LBE151:
  41:AudioProcessor.cpp ****         // More exaggerated curve for very short attacks (extra punchy)
 508              		.loc 3 41 5 view .LVU153
 509 0006 DFED1F7A 		vldr.32	s15, .L47+4
  39:AudioProcessor.cpp ****     float attack_value;
 510              		.loc 3 39 11 view .LVU154
 511 000a 93ED000A 		vldr.32	s0, [r3]
 512              	.LVL20:
  40:AudioProcessor.cpp ****     float attack_value;
 513              		.loc 3 40 5 is_stmt 1 view .LVU155
  41:AudioProcessor.cpp ****         // More exaggerated curve for very short attacks (extra punchy)
 514              		.loc 3 41 5 view .LVU156
  50:AudioProcessor.cpp ****     
ARM GAS  /var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccGMqppg.s 			page 21


 515              		.loc 3 50 43 is_stmt 0 view .LVU157
 516 000e 1E4B     		ldr	r3, .L47+8
  41:AudioProcessor.cpp ****         // More exaggerated curve for very short attacks (extra punchy)
 517              		.loc 3 41 5 view .LVU158
 518 0010 B4EEE70A 		vcmpe.f32	s0, s15
 519 0014 1D4C     		ldr	r4, .L47+12
  50:AudioProcessor.cpp ****     
 520              		.loc 3 50 43 view .LVU159
 521 0016 D3ED007A 		vldr.32	s15, [r3]
 522 001a 1D4E     		ldr	r6, .L47+16
  41:AudioProcessor.cpp ****         // More exaggerated curve for very short attacks (extra punchy)
 523              		.loc 3 41 5 view .LVU160
 524 001c F1EE10FA 		vmrs	APSR_nzcv, FPSCR
  43:AudioProcessor.cpp ****     } else {
 525              		.loc 3 43 9 is_stmt 1 view .LVU161
 526 0020 1C4F     		ldr	r7, .L47+20
  36:AudioProcessor.cpp ****     // Apply cubic response for better control at short settings
 527              		.loc 3 36 22 is_stmt 0 view .LVU162
 528 0022 2DED028B 		vpush.64	{d8}
 529              		.cfi_def_cfa_offset 32
 530              		.cfi_offset 80, -32
 531              		.cfi_offset 81, -28
  43:AudioProcessor.cpp ****     } else {
 532              		.loc 3 43 49 view .LVU163
 533 0026 4CBF     		ite	mi
 534 0028 B6EE008A 		vmovmi.f32	s16, #5.0e-1
  46:AudioProcessor.cpp ****     }
 535              		.loc 3 46 35 view .LVU164
 536 002c 20EE008A 		vmulpl.f32	s16, s0, s0
  50:AudioProcessor.cpp ****     
 537              		.loc 3 50 43 view .LVU165
 538 0030 67EEA78A 		vmul.f32	s17, s15, s15
  43:AudioProcessor.cpp ****     } else {
 539              		.loc 3 43 49 view .LVU166
 540 0034 48BF     		it	mi
 541 0036 20EE088A 		vmulmi.f32	s16, s0, s16
  46:AudioProcessor.cpp ****     }
 542              		.loc 3 46 9 is_stmt 1 view .LVU167
  50:AudioProcessor.cpp ****     
 543              		.loc 3 50 11 is_stmt 0 view .LVU168
 544 003a 68EEA78A 		vmul.f32	s17, s17, s15
  46:AudioProcessor.cpp ****     }
 545              		.loc 3 46 22 view .LVU169
 546 003e 28EE008A 		vmul.f32	s16, s16, s0
 547              	.LVL21:
  50:AudioProcessor.cpp ****     
 548              		.loc 3 50 5 is_stmt 1 view .LVU170
 549              		.loc 3 52 5 view .LVU171
 550              	.LBB154:
 551              		.loc 3 52 22 view .LVU172
 552              	.L42:
  53:AudioProcessor.cpp ****         // Update envelope parameters
  54:AudioProcessor.cpp ****         voice_envelopes[i].SetAttackTime(attack_value);
 553              		.loc 3 54 9 view .LVU173
 554              		.loc 3 54 41 is_stmt 0 view .LVU174
 555 0042 B0EE480A 		vmov.f32	s0, s16
 556 0046 2046     		mov	r0, r4
ARM GAS  /var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccGMqppg.s 			page 22


 557 0048 FFF7FEFF 		bl	_ZN13VoiceEnvelope13SetAttackTimeEf
 558              	.LVL22:
  55:AudioProcessor.cpp ****         voice_envelopes[i].SetReleaseTime(release_value);
 559              		.loc 3 55 9 is_stmt 1 view .LVU175
 560              		.loc 3 55 42 is_stmt 0 view .LVU176
 561 004c B0EE680A 		vmov.f32	s0, s17
 562 0050 2046     		mov	r0, r4
 563 0052 FFF7FEFF 		bl	_ZN13VoiceEnvelope14SetReleaseTimeEf
 564              	.LVL23:
  56:AudioProcessor.cpp ****         
  57:AudioProcessor.cpp ****         // Process envelope
  58:AudioProcessor.cpp ****         voice_values[i] = voice_envelopes[i].Process();
 565              		.loc 3 58 9 is_stmt 1 view .LVU177
 566              		.loc 3 58 53 is_stmt 0 view .LVU178
 567 0056 2046     		mov	r0, r4
 568 0058 FFF7FEFF 		bl	_ZN13VoiceEnvelope7ProcessEv
 569              	.LVL24:
  59:AudioProcessor.cpp ****         
  60:AudioProcessor.cpp ****         // Update voice activity based on envelope state
  61:AudioProcessor.cpp ****         if(!voice_active[i] && !voice_envelopes[i].IsActive()) {
 570              		.loc 3 61 27 view .LVU179
 571 005c 17F8013B 		ldrb	r3, [r7], #1	@ zero_extendqisi2
  58:AudioProcessor.cpp ****         
 572              		.loc 3 58 25 view .LVU180
 573 0060 A6EC010A 		vstmia.32	r6!, {s0}
 574              		.loc 3 61 9 is_stmt 1 view .LVU181
 575              		.loc 3 61 29 is_stmt 0 view .LVU182
 576 0064 23B9     		cbnz	r3, .L41
 577              	.LVL25:
 578              	.LBB152:
 579              	.LBI152:
 212:VoiceEnvelope.h ****         return current_state != ENV_IDLE;
 580              		.loc 1 212 10 is_stmt 1 discriminator 1 view .LVU183
 581              	.LBB153:
 213:VoiceEnvelope.h ****     }
 582              		.loc 1 213 9 discriminator 1 view .LVU184
 213:VoiceEnvelope.h ****     }
 583              		.loc 1 213 9 is_stmt 0 discriminator 1 view .LVU185
 584              	.LBE153:
 585              	.LBE152:
 586              		.loc 3 61 29 discriminator 1 view .LVU186
 587 0066 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 588 0068 13B9     		cbnz	r3, .L41
  62:AudioProcessor.cpp ****             voice_values[i] = 0.0f; // Ensure silence when inactive
 589              		.loc 3 62 13 is_stmt 1 view .LVU187
 590              		.loc 3 62 29 is_stmt 0 view .LVU188
 591 006a 0023     		movs	r3, #0
 592 006c 46F8043C 		str	r3, [r6, #-4]	@ float
 593              	.L41:
  52:AudioProcessor.cpp ****         // Update envelope parameters
 594              		.loc 3 52 5 is_stmt 1 discriminator 2 view .LVU189
 595 0070 0135     		adds	r5, r5, #1
 596              	.LVL26:
  52:AudioProcessor.cpp ****         // Update envelope parameters
 597              		.loc 3 52 22 discriminator 2 view .LVU190
 598 0072 4434     		adds	r4, r4, #68
 599 0074 042D     		cmp	r5, #4
ARM GAS  /var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccGMqppg.s 			page 23


 600 0076 E4D1     		bne	.L42
 601              	.LBE154:
  63:AudioProcessor.cpp ****         }
  64:AudioProcessor.cpp ****     }
  65:AudioProcessor.cpp **** }
 602              		.loc 3 65 1 is_stmt 0 view .LVU191
 603 0078 BDEC028B 		vldm	sp!, {d8}
 604              		.cfi_restore 80
 605              		.cfi_restore 81
 606              		.cfi_def_cfa_offset 24
 607              	.LVL27:
 608              		.loc 3 65 1 view .LVU192
 609 007c F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 610              	.LVL28:
 611              	.L48:
 612              		.loc 3 65 1 view .LVU193
 613 007e 00BF     		.align	2
 614              	.L47:
 615 0080 00000000 		.word	.LANCHOR0
 616 0084 CDCC4C3E 		.word	1045220557
 617 0088 00000000 		.word	.LANCHOR1
 618 008c 00000000 		.word	voice_envelopes
 619 0090 00000000 		.word	voice_values
 620 0094 00000000 		.word	voice_active
 621              		.cfi_endproc
 622              	.LFE5057:
 624              		.section	.text._Z12ProcessVoiceif,"ax",%progbits
 625              		.align	1
 626              		.global	_Z12ProcessVoiceif
 627              		.syntax unified
 628              		.thumb
 629              		.thumb_func
 631              	_Z12ProcessVoiceif:
 632              	.LVL29:
 633              	.LFB5058:
  66:AudioProcessor.cpp **** 
  67:AudioProcessor.cpp **** void ProcessVoice(int voice_idx, float envelope_value) {
 634              		.loc 3 67 56 is_stmt 1 view -0
 635              		.cfi_startproc
 636              		@ args = 0, pretend = 0, frame = 0
 637              		@ frame_needed = 0, uses_anonymous_args = 0
 638              		@ link register save eliminated.
  68:AudioProcessor.cpp ****     // Store voice value for LED display
  69:AudioProcessor.cpp ****     voice_values[voice_idx] = envelope_value;
 639              		.loc 3 69 5 view .LVU195
 640              		.loc 3 69 29 is_stmt 0 view .LVU196
 641 0000 024B     		ldr	r3, .L50
 642 0002 03EB8000 		add	r0, r3, r0, lsl #2
 643              	.LVL30:
 644              		.loc 3 69 29 view .LVU197
 645 0006 80ED000A 		vstr.32	s0, [r0]
  70:AudioProcessor.cpp **** }
 646              		.loc 3 70 1 view .LVU198
 647 000a 7047     		bx	lr
 648              	.L51:
 649              		.align	2
 650              	.L50:
ARM GAS  /var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccGMqppg.s 			page 24


 651 000c 00000000 		.word	voice_values
 652              		.cfi_endproc
 653              	.LFE5058:
 655              		.section	.text._Z15ProcessControlsv,"ax",%progbits
 656              		.align	1
 657              		.global	_Z15ProcessControlsv
 658              		.syntax unified
 659              		.thumb
 660              		.thumb_func
 662              	_Z15ProcessControlsv:
 663              	.LFB5060:
  71:AudioProcessor.cpp **** 
  72:AudioProcessor.cpp **** void AudioCallback(AudioHandle::InterleavingInputBuffer in,
  73:AudioProcessor.cpp ****                  AudioHandle::InterleavingOutputBuffer out,
  74:AudioProcessor.cpp ****                  size_t size) {
  75:AudioProcessor.cpp ****     cpu_meter.OnBlockStart(); // Mark the beginning of the audio block
  76:AudioProcessor.cpp ****     
  77:AudioProcessor.cpp ****     // Process controls & read values
  78:AudioProcessor.cpp ****     ProcessControls();
  79:AudioProcessor.cpp ****     ReadKnobValues();
  80:AudioProcessor.cpp ****     
  81:AudioProcessor.cpp ****     // Get touch control value from the shared volatile variable
  82:AudioProcessor.cpp ****     float touch_control = touch_cv_value; 
  83:AudioProcessor.cpp ****     
  84:AudioProcessor.cpp ****     // --- Apply Touch Control Modulation (Averaging knob + touch) ---
  85:AudioProcessor.cpp ****     // Apply touch modulation to selected parameters by averaging knob and touch values
  86:AudioProcessor.cpp ****     float intensity_factor = 0.5f; // 0.0 = knob only, 1.0 = touch only, 0.5 = average
  87:AudioProcessor.cpp **** 
  88:AudioProcessor.cpp ****     // harm_knob_val    = harm_knob_val    * (1.0f - intensity_factor) + touch_control * intensity_
  89:AudioProcessor.cpp ****     morph_knob_val   = morph_knob_val   * (1.0f - intensity_factor) + touch_control * intensity_fac
  90:AudioProcessor.cpp ****     // decay_knob_val   = decay_knob_val   * (1.0f - intensity_factor) + touch_control * intensity_
  91:AudioProcessor.cpp ****     delay_feedback_val = delay_feedback_val * (1.0f - intensity_factor) + touch_control * intensity
  92:AudioProcessor.cpp ****     // delay_time_val   = delay_time_val   * (1.0f - intensity_factor) + touch_control * intensity_
  93:AudioProcessor.cpp **** 
  94:AudioProcessor.cpp ****     // --- End Touch Control Modulation ---
  95:AudioProcessor.cpp **** 
  96:AudioProcessor.cpp ****     // Add panic button check (long press but not bootloader long)
  97:AudioProcessor.cpp ****     static uint32_t button_press_time = 0;
  98:AudioProcessor.cpp ****     if (button.RisingEdge()) {
  99:AudioProcessor.cpp ****         button_press_time = System::GetNow();
 100:AudioProcessor.cpp ****     }
 101:AudioProcessor.cpp ****     else if (button.Pressed() && button_press_time > 0) {
 102:AudioProcessor.cpp ****         uint32_t held_time = System::GetNow() - button_press_time;
 103:AudioProcessor.cpp ****         // If button held more than 1 second but less than bootloader time (3s)
 104:AudioProcessor.cpp ****         if (held_time > 1000 && held_time < 3000) {
 105:AudioProcessor.cpp ****             ResetVoiceStates();
 106:AudioProcessor.cpp ****             button_press_time = 0; // Reset so it only triggers once
 107:AudioProcessor.cpp ****         }
 108:AudioProcessor.cpp ****     }
 109:AudioProcessor.cpp ****     
 110:AudioProcessor.cpp ****     // Determine engine settings
 111:AudioProcessor.cpp ****     int engineIndex = DetermineEngineSettings();
 112:AudioProcessor.cpp ****     bool poly_mode = (engineIndex <= 3); // First 4 engines are poly
 113:AudioProcessor.cpp ****     int effective_num_voices = poly_mode ? NUM_VOICES : 1;
 114:AudioProcessor.cpp ****     
 115:AudioProcessor.cpp ****     // Process touch input for note handling
 116:AudioProcessor.cpp ****     HandleTouchInput(engineIndex, poly_mode, effective_num_voices);
ARM GAS  /var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccGMqppg.s 			page 25


 117:AudioProcessor.cpp ****     
 118:AudioProcessor.cpp ****     // Configure delay settings
 119:AudioProcessor.cpp ****     ConfigureDelaySettings();
 120:AudioProcessor.cpp ****     
 121:AudioProcessor.cpp ****     // Process voice parameters and render audio
 122:AudioProcessor.cpp ****     // Apply the touch control to modify a parameter (for example, morph)
 123:AudioProcessor.cpp ****     // morph_knob_val = morph_knob_val * 0.6f + touch_control * 0.4f; // OLD METHOD - REMOVED
 124:AudioProcessor.cpp **** 
 125:AudioProcessor.cpp ****     // Alternate options for applying touch control to different parameters:
 126:AudioProcessor.cpp ****     // Uncomment one of these to change which parameter the touch control affects
 127:AudioProcessor.cpp ****     // harm_knob_val = harm_knob_val * 0.6f + touch_control * 0.4f;   // Touch controls harmonics
 128:AudioProcessor.cpp ****     // decay_knob_val = decay_knob_val * 0.6f + touch_control * 0.4f; // Touch controls decay
 129:AudioProcessor.cpp ****     // delay_feedback_val = delay_feedback_val * 0.6f + touch_control * 0.4f; // Touch controls del
 130:AudioProcessor.cpp ****     // delay_time_val = delay_time_val * 0.6f + touch_control * 0.4f; // Touch controls delay time
 131:AudioProcessor.cpp **** 
 132:AudioProcessor.cpp ****     PrepareVoiceParameters(engineIndex, poly_mode, effective_num_voices - 1);
 133:AudioProcessor.cpp ****     
 134:AudioProcessor.cpp ****     // Process envelopes and mix audio
 135:AudioProcessor.cpp ****     ProcessVoiceEnvelopes(poly_mode);
 136:AudioProcessor.cpp ****     
 137:AudioProcessor.cpp ****     // Mix dry/wet and apply delay
 138:AudioProcessor.cpp ****     float dry_level = 1.0f - delay_mix_val;
 139:AudioProcessor.cpp ****     ProcessAudioOutput(out, size, dry_level);
 140:AudioProcessor.cpp ****     
 141:AudioProcessor.cpp ****     // Mark the end of the audio block
 142:AudioProcessor.cpp ****     cpu_meter.OnBlockEnd();
 143:AudioProcessor.cpp ****     
 144:AudioProcessor.cpp ****     // Update other performance monitors (like output level)
 145:AudioProcessor.cpp ****     UpdatePerformanceMonitors(size, out);
 146:AudioProcessor.cpp **** }
 147:AudioProcessor.cpp **** 
 148:AudioProcessor.cpp **** void ProcessControls() {
 664              		.loc 3 148 24 is_stmt 1 view -0
 665              		.cfi_startproc
 666              		@ args = 0, pretend = 0, frame = 0
 667              		@ frame_needed = 0, uses_anonymous_args = 0
 149:AudioProcessor.cpp ****     button.Debounce();
 668              		.loc 3 149 5 view .LVU200
 148:AudioProcessor.cpp ****     button.Debounce();
 669              		.loc 3 148 24 is_stmt 0 view .LVU201
 670 0000 08B5     		push	{r3, lr}
 671              		.cfi_def_cfa_offset 8
 672              		.cfi_offset 3, -8
 673              		.cfi_offset 14, -4
 674              		.loc 3 149 20 view .LVU202
 675 0002 1348     		ldr	r0, .L53
 676 0004 FFF7FEFF 		bl	_ZN5daisy6Switch8DebounceEv
 677              	.LVL31:
 150:AudioProcessor.cpp ****     pitch_knob.Process();         // ADC 0
 678              		.loc 3 150 5 is_stmt 1 view .LVU203
 679              		.loc 3 150 23 is_stmt 0 view .LVU204
 680 0008 1248     		ldr	r0, .L53+4
 681 000a FFF7FEFF 		bl	_ZN5daisy13AnalogControl7ProcessEv
 682              	.LVL32:
 151:AudioProcessor.cpp ****     harmonics_knob.Process();     // ADC 1
 683              		.loc 3 151 5 is_stmt 1 view .LVU205
 684              		.loc 3 151 27 is_stmt 0 view .LVU206
ARM GAS  /var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccGMqppg.s 			page 26


 685 000e 1248     		ldr	r0, .L53+8
 686 0010 FFF7FEFF 		bl	_ZN5daisy13AnalogControl7ProcessEv
 687              	.LVL33:
 152:AudioProcessor.cpp ****     timbre_knob.Process();        // ADC 2
 688              		.loc 3 152 5 is_stmt 1 view .LVU207
 689              		.loc 3 152 24 is_stmt 0 view .LVU208
 690 0014 1148     		ldr	r0, .L53+12
 691 0016 FFF7FEFF 		bl	_ZN5daisy13AnalogControl7ProcessEv
 692              	.LVL34:
 153:AudioProcessor.cpp ****     decay_knob.Process();         // ADC 3
 693              		.loc 3 153 5 is_stmt 1 view .LVU209
 694              		.loc 3 153 23 is_stmt 0 view .LVU210
 695 001a 1148     		ldr	r0, .L53+16
 696 001c FFF7FEFF 		bl	_ZN5daisy13AnalogControl7ProcessEv
 697              	.LVL35:
 154:AudioProcessor.cpp ****     morph_knob.Process();         // ADC 4
 698              		.loc 3 154 5 is_stmt 1 view .LVU211
 699              		.loc 3 154 23 is_stmt 0 view .LVU212
 700 0020 1048     		ldr	r0, .L53+20
 701 0022 FFF7FEFF 		bl	_ZN5daisy13AnalogControl7ProcessEv
 702              	.LVL36:
 155:AudioProcessor.cpp ****     delay_feedback_knob.Process(); // ADC 5
 703              		.loc 3 155 5 is_stmt 1 view .LVU213
 704              		.loc 3 155 32 is_stmt 0 view .LVU214
 705 0026 1048     		ldr	r0, .L53+24
 706 0028 FFF7FEFF 		bl	_ZN5daisy13AnalogControl7ProcessEv
 707              	.LVL37:
 156:AudioProcessor.cpp ****     delay_time_knob.Process();    // ADC 6
 708              		.loc 3 156 5 is_stmt 1 view .LVU215
 709              		.loc 3 156 28 is_stmt 0 view .LVU216
 710 002c 0F48     		ldr	r0, .L53+28
 711 002e FFF7FEFF 		bl	_ZN5daisy13AnalogControl7ProcessEv
 712              	.LVL38:
 157:AudioProcessor.cpp ****     delay_lag_knob.Process();     // ADC 7
 713              		.loc 3 157 5 is_stmt 1 view .LVU217
 714              		.loc 3 157 27 is_stmt 0 view .LVU218
 715 0032 0F48     		ldr	r0, .L53+32
 716 0034 FFF7FEFF 		bl	_ZN5daisy13AnalogControl7ProcessEv
 717              	.LVL39:
 158:AudioProcessor.cpp ****     delay_mix_knob.Process();     // ADC 8
 718              		.loc 3 158 5 is_stmt 1 view .LVU219
 719              		.loc 3 158 27 is_stmt 0 view .LVU220
 720 0038 0E48     		ldr	r0, .L53+36
 721 003a FFF7FEFF 		bl	_ZN5daisy13AnalogControl7ProcessEv
 722              	.LVL40:
 159:AudioProcessor.cpp ****     env_attack_knob.Process();    // ADC 9
 723              		.loc 3 159 5 is_stmt 1 view .LVU221
 724              		.loc 3 159 28 is_stmt 0 view .LVU222
 725 003e 0E48     		ldr	r0, .L53+40
 726 0040 FFF7FEFF 		bl	_ZN5daisy13AnalogControl7ProcessEv
 727              	.LVL41:
 160:AudioProcessor.cpp ****     env_release_knob.Process();   // ADC 10
 728              		.loc 3 160 5 is_stmt 1 view .LVU223
 729              		.loc 3 160 29 is_stmt 0 view .LVU224
 730 0044 0D48     		ldr	r0, .L53+44
 161:AudioProcessor.cpp **** }
 731              		.loc 3 161 1 view .LVU225
ARM GAS  /var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccGMqppg.s 			page 27


 732 0046 BDE80840 		pop	{r3, lr}
 733              		.cfi_restore 14
 734              		.cfi_restore 3
 735              		.cfi_def_cfa_offset 0
 160:AudioProcessor.cpp ****     env_release_knob.Process();   // ADC 10
 736              		.loc 3 160 29 view .LVU226
 737 004a FFF7FEBF 		b	_ZN5daisy13AnalogControl7ProcessEv
 738              	.LVL42:
 739              	.L54:
 740 004e 00BF     		.align	2
 741              	.L53:
 742 0050 00000000 		.word	button
 743 0054 00000000 		.word	pitch_knob
 744 0058 00000000 		.word	harmonics_knob
 745 005c 00000000 		.word	timbre_knob
 746 0060 00000000 		.word	decay_knob
 747 0064 00000000 		.word	morph_knob
 748 0068 00000000 		.word	delay_feedback_knob
 749 006c 00000000 		.word	delay_time_knob
 750 0070 00000000 		.word	delay_lag_knob
 751 0074 00000000 		.word	delay_mix_knob
 752 0078 00000000 		.word	env_attack_knob
 753 007c 00000000 		.word	env_release_knob
 754              		.cfi_endproc
 755              	.LFE5060:
 757              		.section	.text._Z14ReadKnobValuesv,"ax",%progbits
 758              		.align	1
 759              		.global	_Z14ReadKnobValuesv
 760              		.syntax unified
 761              		.thumb
 762              		.thumb_func
 764              	_Z14ReadKnobValuesv:
 765              	.LFB5061:
 162:AudioProcessor.cpp **** 
 163:AudioProcessor.cpp **** void ReadKnobValues() {
 766              		.loc 3 163 23 is_stmt 1 view -0
 767              		.cfi_startproc
 768              		@ args = 0, pretend = 0, frame = 0
 769              		@ frame_needed = 0, uses_anonymous_args = 0
 770              		@ link register save eliminated.
 164:AudioProcessor.cpp ****     pitch_val = pitch_knob.Value();           // ADC 0
 771              		.loc 3 164 5 view .LVU228
 772              	.LVL43:
 773              	.LBB155:
 774              	.LBI155:
 775              		.file 4 "lib/libdaisy/src/hid/ctrl.h"
   1:lib/libdaisy/src/hid/ctrl.h **** #pragma once
   2:lib/libdaisy/src/hid/ctrl.h **** #ifndef DSY_KNOB_H
   3:lib/libdaisy/src/hid/ctrl.h **** #define DSY_KNOB_H /**< & */
   4:lib/libdaisy/src/hid/ctrl.h **** #include <stdint.h>
   5:lib/libdaisy/src/hid/ctrl.h **** 
   6:lib/libdaisy/src/hid/ctrl.h **** #ifdef __cplusplus
   7:lib/libdaisy/src/hid/ctrl.h **** namespace daisy
   8:lib/libdaisy/src/hid/ctrl.h **** {
   9:lib/libdaisy/src/hid/ctrl.h **** /**
  10:lib/libdaisy/src/hid/ctrl.h ****     @brief Hardware Interface for control inputs \n 
  11:lib/libdaisy/src/hid/ctrl.h ****     Primarily designed for ADC input controls such as \n 
ARM GAS  /var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccGMqppg.s 			page 28


  12:lib/libdaisy/src/hid/ctrl.h ****     potentiometers, and control voltage. \n 
  13:lib/libdaisy/src/hid/ctrl.h ****     @author Stephen Hensley
  14:lib/libdaisy/src/hid/ctrl.h ****     @date November 2019
  15:lib/libdaisy/src/hid/ctrl.h ****     @ingroup controls
  16:lib/libdaisy/src/hid/ctrl.h **** */
  17:lib/libdaisy/src/hid/ctrl.h **** class AnalogControl
  18:lib/libdaisy/src/hid/ctrl.h **** {
  19:lib/libdaisy/src/hid/ctrl.h ****   public:
  20:lib/libdaisy/src/hid/ctrl.h ****     /** Constructor */
  21:lib/libdaisy/src/hid/ctrl.h ****     AnalogControl() {}
  22:lib/libdaisy/src/hid/ctrl.h ****     /** destructor */
  23:lib/libdaisy/src/hid/ctrl.h ****     ~AnalogControl() {}
  24:lib/libdaisy/src/hid/ctrl.h **** 
  25:lib/libdaisy/src/hid/ctrl.h ****     /** 
  26:lib/libdaisy/src/hid/ctrl.h ****     Initializes the control
  27:lib/libdaisy/src/hid/ctrl.h ****     \param *adcptr is a pointer to the raw adc read value -- This can be acquired with dsy_adc_get_
  28:lib/libdaisy/src/hid/ctrl.h ****     \param sr is the samplerate in Hz that the Process function will be called at.
  29:lib/libdaisy/src/hid/ctrl.h ****     \param flip determines whether the input is flipped (i.e. 1.f - input) or not before being proc
  30:lib/libdaisy/src/hid/ctrl.h ****     \param invert determines whether the input is inverted (i.e. -1.f * input) or note before being
  31:lib/libdaisy/src/hid/ctrl.h ****     \param slew_seconds is the slew time in seconds that it takes for the control to change to a ne
  32:lib/libdaisy/src/hid/ctrl.h ****     */
  33:lib/libdaisy/src/hid/ctrl.h ****     void Init(uint16_t *adcptr,
  34:lib/libdaisy/src/hid/ctrl.h ****               float     sr,
  35:lib/libdaisy/src/hid/ctrl.h ****               bool      flip         = false,
  36:lib/libdaisy/src/hid/ctrl.h ****               bool      invert       = false,
  37:lib/libdaisy/src/hid/ctrl.h ****               float     slew_seconds = 0.002f);
  38:lib/libdaisy/src/hid/ctrl.h **** 
  39:lib/libdaisy/src/hid/ctrl.h ****     /** 
  40:lib/libdaisy/src/hid/ctrl.h ****     This Initializes the AnalogControl for a -5V to 5V inverted input
  41:lib/libdaisy/src/hid/ctrl.h ****     All of the Init details are the same otherwise
  42:lib/libdaisy/src/hid/ctrl.h ****     \param *adcptr Pointer to analog digital converter
  43:lib/libdaisy/src/hid/ctrl.h ****     \param sr Audio engine sample rate
  44:lib/libdaisy/src/hid/ctrl.h ****     */
  45:lib/libdaisy/src/hid/ctrl.h ****     void InitBipolarCv(uint16_t *adcptr, float sr);
  46:lib/libdaisy/src/hid/ctrl.h **** 
  47:lib/libdaisy/src/hid/ctrl.h ****     /** 
  48:lib/libdaisy/src/hid/ctrl.h ****     Filters, and transforms a raw ADC read into a normalized range.
  49:lib/libdaisy/src/hid/ctrl.h ****     this should be called at the rate of specified by samplerate at Init time.   
  50:lib/libdaisy/src/hid/ctrl.h ****     Default Initializations will return 0.0 -> 1.0
  51:lib/libdaisy/src/hid/ctrl.h ****     Bi-polar CV inputs will return -1.0 -> 1.0
  52:lib/libdaisy/src/hid/ctrl.h ****     */
  53:lib/libdaisy/src/hid/ctrl.h ****     float Process();
  54:lib/libdaisy/src/hid/ctrl.h **** 
  55:lib/libdaisy/src/hid/ctrl.h ****     /** Returns the current stored value, without reprocessing */
  56:lib/libdaisy/src/hid/ctrl.h ****     inline float Value() const { return val_; }
 776              		.loc 4 56 18 view .LVU229
 777              	.LBB156:
 778              		.loc 4 56 34 view .LVU230
 779              		.loc 4 56 41 is_stmt 0 view .LVU231
 780 0000 164B     		ldr	r3, .L56
 781              	.LBE156:
 782              	.LBE155:
 783              		.loc 3 164 15 view .LVU232
 784 0002 DA68     		ldr	r2, [r3, #12]	@ float
 785 0004 164B     		ldr	r3, .L56+4
 786 0006 1A60     		str	r2, [r3]	@ float
 165:AudioProcessor.cpp ****     harm_knob_val = harmonics_knob.Value();     // ADC 1
ARM GAS  /var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccGMqppg.s 			page 29


 787              		.loc 3 165 5 is_stmt 1 view .LVU233
 788              	.LVL44:
 789              	.LBB157:
 790              	.LBI157:
 791              		.loc 4 56 18 view .LVU234
 792              	.LBB158:
 793              		.loc 4 56 34 view .LVU235
 794              		.loc 4 56 41 is_stmt 0 view .LVU236
 795 0008 164B     		ldr	r3, .L56+8
 796              	.LBE158:
 797              	.LBE157:
 798              		.loc 3 165 19 view .LVU237
 799 000a DA68     		ldr	r2, [r3, #12]	@ float
 800 000c 164B     		ldr	r3, .L56+12
 801 000e 1A60     		str	r2, [r3]	@ float
 166:AudioProcessor.cpp ****     timbre_knob_val = timbre_knob.Value();      // ADC 2
 802              		.loc 3 166 5 is_stmt 1 view .LVU238
 803              	.LVL45:
 804              	.LBB159:
 805              	.LBI159:
 806              		.loc 4 56 18 view .LVU239
 807              	.LBB160:
 808              		.loc 4 56 34 view .LVU240
 809              		.loc 4 56 41 is_stmt 0 view .LVU241
 810 0010 164B     		ldr	r3, .L56+16
 811              	.LBE160:
 812              	.LBE159:
 813              		.loc 3 166 21 view .LVU242
 814 0012 DA68     		ldr	r2, [r3, #12]	@ float
 815 0014 164B     		ldr	r3, .L56+20
 816 0016 1A60     		str	r2, [r3]	@ float
 167:AudioProcessor.cpp ****     decay_knob_val = decay_knob.Value();        // ADC 3
 817              		.loc 3 167 5 is_stmt 1 view .LVU243
 818              	.LVL46:
 819              	.LBB161:
 820              	.LBI161:
 821              		.loc 4 56 18 view .LVU244
 822              	.LBB162:
 823              		.loc 4 56 34 view .LVU245
 824              		.loc 4 56 41 is_stmt 0 view .LVU246
 825 0018 164B     		ldr	r3, .L56+24
 826              	.LBE162:
 827              	.LBE161:
 828              		.loc 3 167 20 view .LVU247
 829 001a DA68     		ldr	r2, [r3, #12]	@ float
 830 001c 164B     		ldr	r3, .L56+28
 831 001e 1A60     		str	r2, [r3]	@ float
 168:AudioProcessor.cpp ****     morph_knob_val = morph_knob.Value();        // ADC 4
 832              		.loc 3 168 5 is_stmt 1 view .LVU248
 833              	.LVL47:
 834              	.LBB163:
 835              	.LBI163:
 836              		.loc 4 56 18 view .LVU249
 837              	.LBB164:
 838              		.loc 4 56 34 view .LVU250
 839              		.loc 4 56 41 is_stmt 0 view .LVU251
 840 0020 164B     		ldr	r3, .L56+32
ARM GAS  /var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccGMqppg.s 			page 30


 841              	.LBE164:
 842              	.LBE163:
 843              		.loc 3 168 20 view .LVU252
 844 0022 DA68     		ldr	r2, [r3, #12]	@ float
 845 0024 164B     		ldr	r3, .L56+36
 846 0026 1A60     		str	r2, [r3]	@ float
 169:AudioProcessor.cpp ****     delay_feedback_val = delay_feedback_knob.Value(); // ADC 5
 847              		.loc 3 169 5 is_stmt 1 view .LVU253
 848              	.LVL48:
 849              	.LBB165:
 850              	.LBI165:
 851              		.loc 4 56 18 view .LVU254
 852              	.LBB166:
 853              		.loc 4 56 34 view .LVU255
 854              		.loc 4 56 41 is_stmt 0 view .LVU256
 855 0028 164B     		ldr	r3, .L56+40
 856              	.LBE166:
 857              	.LBE165:
 858              		.loc 3 169 24 view .LVU257
 859 002a DA68     		ldr	r2, [r3, #12]	@ float
 860 002c 164B     		ldr	r3, .L56+44
 861 002e 1A60     		str	r2, [r3]	@ float
 170:AudioProcessor.cpp ****     delay_time_val = delay_time_knob.Value();     // ADC 6
 862              		.loc 3 170 5 is_stmt 1 view .LVU258
 863              	.LVL49:
 864              	.LBB167:
 865              	.LBI167:
 866              		.loc 4 56 18 view .LVU259
 867              	.LBB168:
 868              		.loc 4 56 34 view .LVU260
 869              		.loc 4 56 41 is_stmt 0 view .LVU261
 870 0030 164B     		ldr	r3, .L56+48
 871              	.LBE168:
 872              	.LBE167:
 873              		.loc 3 170 20 view .LVU262
 874 0032 DA68     		ldr	r2, [r3, #12]	@ float
 875 0034 164B     		ldr	r3, .L56+52
 876 0036 1A60     		str	r2, [r3]	@ float
 171:AudioProcessor.cpp ****     delay_lag_val = delay_lag_knob.Value();       // ADC 7
 877              		.loc 3 171 5 is_stmt 1 view .LVU263
 878              	.LVL50:
 879              	.LBB169:
 880              	.LBI169:
 881              		.loc 4 56 18 view .LVU264
 882              	.LBB170:
 883              		.loc 4 56 34 view .LVU265
 884              		.loc 4 56 41 is_stmt 0 view .LVU266
 885 0038 164B     		ldr	r3, .L56+56
 886              	.LBE170:
 887              	.LBE169:
 888              		.loc 3 171 19 view .LVU267
 889 003a DA68     		ldr	r2, [r3, #12]	@ float
 890 003c 164B     		ldr	r3, .L56+60
 891 003e 1A60     		str	r2, [r3]	@ float
 172:AudioProcessor.cpp ****     delay_mix_val = delay_mix_knob.Value();       // ADC 8
 892              		.loc 3 172 5 is_stmt 1 view .LVU268
 893              	.LVL51:
ARM GAS  /var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccGMqppg.s 			page 31


 894              	.LBB171:
 895              	.LBI171:
 896              		.loc 4 56 18 view .LVU269
 897              	.LBB172:
 898              		.loc 4 56 34 view .LVU270
 899              		.loc 4 56 41 is_stmt 0 view .LVU271
 900 0040 164B     		ldr	r3, .L56+64
 901              	.LBE172:
 902              	.LBE171:
 903              		.loc 3 172 19 view .LVU272
 904 0042 DA68     		ldr	r2, [r3, #12]	@ float
 905 0044 164B     		ldr	r3, .L56+68
 906 0046 1A60     		str	r2, [r3]	@ float
 173:AudioProcessor.cpp ****     env_attack_val = env_attack_knob.Value();     // ADC 9
 907              		.loc 3 173 5 is_stmt 1 view .LVU273
 908              	.LVL52:
 909              	.LBB173:
 910              	.LBI173:
 911              		.loc 4 56 18 view .LVU274
 912              	.LBB174:
 913              		.loc 4 56 34 view .LVU275
 914              		.loc 4 56 41 is_stmt 0 view .LVU276
 915 0048 164B     		ldr	r3, .L56+72
 916              	.LBE174:
 917              	.LBE173:
 918              		.loc 3 173 20 view .LVU277
 919 004a DA68     		ldr	r2, [r3, #12]	@ float
 920 004c 164B     		ldr	r3, .L56+76
 921 004e 1A60     		str	r2, [r3]	@ float
 174:AudioProcessor.cpp ****     env_release_val = env_release_knob.Value();   // ADC 10
 922              		.loc 3 174 5 is_stmt 1 view .LVU278
 923              	.LVL53:
 924              	.LBB175:
 925              	.LBI175:
 926              		.loc 4 56 18 view .LVU279
 927              	.LBB176:
 928              		.loc 4 56 34 view .LVU280
 929              		.loc 4 56 41 is_stmt 0 view .LVU281
 930 0050 164B     		ldr	r3, .L56+80
 931              	.LBE176:
 932              	.LBE175:
 933              		.loc 3 174 21 view .LVU282
 934 0052 DA68     		ldr	r2, [r3, #12]	@ float
 935 0054 164B     		ldr	r3, .L56+84
 936 0056 1A60     		str	r2, [r3]	@ float
 175:AudioProcessor.cpp **** }
 937              		.loc 3 175 1 view .LVU283
 938 0058 7047     		bx	lr
 939              	.L57:
 940 005a 00BF     		.align	2
 941              	.L56:
 942 005c 00000000 		.word	pitch_knob
 943 0060 00000000 		.word	.LANCHOR2
 944 0064 00000000 		.word	harmonics_knob
 945 0068 00000000 		.word	.LANCHOR3
 946 006c 00000000 		.word	timbre_knob
 947 0070 00000000 		.word	.LANCHOR4
ARM GAS  /var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccGMqppg.s 			page 32


 948 0074 00000000 		.word	decay_knob
 949 0078 00000000 		.word	.LANCHOR5
 950 007c 00000000 		.word	morph_knob
 951 0080 00000000 		.word	.LANCHOR6
 952 0084 00000000 		.word	delay_feedback_knob
 953 0088 00000000 		.word	.LANCHOR7
 954 008c 00000000 		.word	delay_time_knob
 955 0090 00000000 		.word	.LANCHOR8
 956 0094 00000000 		.word	delay_lag_knob
 957 0098 00000000 		.word	.LANCHOR9
 958 009c 00000000 		.word	delay_mix_knob
 959 00a0 00000000 		.word	.LANCHOR10
 960 00a4 00000000 		.word	env_attack_knob
 961 00a8 00000000 		.word	.LANCHOR0
 962 00ac 00000000 		.word	env_release_knob
 963 00b0 00000000 		.word	.LANCHOR1
 964              		.cfi_endproc
 965              	.LFE5061:
 967              		.section	.text._Z16ResetVoiceStatesv,"ax",%progbits
 968              		.align	1
 969              		.global	_Z16ResetVoiceStatesv
 970              		.syntax unified
 971              		.thumb
 972              		.thumb_func
 974              	_Z16ResetVoiceStatesv:
 975              	.LFB5062:
 176:AudioProcessor.cpp **** 
 177:AudioProcessor.cpp **** void ResetVoiceStates() {
 976              		.loc 3 177 25 is_stmt 1 view -0
 977              		.cfi_startproc
 978              		@ args = 0, pretend = 0, frame = 0
 979              		@ frame_needed = 0, uses_anonymous_args = 0
 980              		@ link register save eliminated.
 178:AudioProcessor.cpp ****     // Force reset all voice states to prevent stuck notes
 179:AudioProcessor.cpp ****     for (int v = 0; v < NUM_VOICES; v++) {
 981              		.loc 3 179 5 view .LVU285
 982              	.LVL54:
 983              	.LBB182:
 984              		.loc 3 179 23 view .LVU286
 985 0000 0B4B     		ldr	r3, .L64
 986              		.loc 3 179 14 is_stmt 0 view .LVU287
 987 0002 0022     		movs	r2, #0
 988 0004 0B49     		ldr	r1, .L64+4
 989              	.LVL55:
 990              	.L61:
 180:AudioProcessor.cpp ****         // Reset the envelope to IDLE state
 181:AudioProcessor.cpp ****         voice_envelopes[v].Reset();
 991              		.loc 3 181 9 is_stmt 1 view .LVU288
 992              	.LBB183:
 993              	.LBI183:
 205:VoiceEnvelope.h ****         if (current_state == ENV_IDLE) return;
 994              		.loc 1 205 10 view .LVU289
 995              	.LBB184:
 206:VoiceEnvelope.h ****         current_state = ENV_RESET;
 996              		.loc 1 206 9 view .LVU290
 997 0006 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 998 0008 58B9     		cbnz	r0, .L59
ARM GAS  /var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccGMqppg.s 			page 33


 999              	.L62:
 1000              	.LVL56:
 206:VoiceEnvelope.h ****         current_state = ENV_RESET;
 1001              		.loc 1 206 9 is_stmt 0 view .LVU291
 1002              	.LBE184:
 1003              	.LBE183:
 182:AudioProcessor.cpp ****         
 183:AudioProcessor.cpp ****         // Clear active flag
 184:AudioProcessor.cpp ****         voice_active[v] = false;
 1004              		.loc 3 184 9 is_stmt 1 view .LVU292
 185:AudioProcessor.cpp ****         
 186:AudioProcessor.cpp ****         // Make sure triggers are off
 187:AudioProcessor.cpp ****         modulations[v].trigger = 0.0f;
 1005              		.loc 3 187 9 view .LVU293
 179:AudioProcessor.cpp ****         // Reset the envelope to IDLE state
 1006              		.loc 3 179 5 is_stmt 0 view .LVU294
 1007 000a 0132     		adds	r2, r2, #1
 1008              	.LVL57:
 1009              		.loc 3 187 32 view .LVU295
 1010 000c 0020     		movs	r0, #0
 179:AudioProcessor.cpp ****         // Reset the envelope to IDLE state
 1011              		.loc 3 179 23 view .LVU296
 1012 000e 4433     		adds	r3, r3, #68
 1013 0010 2831     		adds	r1, r1, #40
 1014 0012 042A     		cmp	r2, #4
 1015              		.loc 3 187 32 view .LVU297
 1016 0014 41F8100C 		str	r0, [r1, #-16]	@ float
 179:AudioProcessor.cpp ****         // Reset the envelope to IDLE state
 1017              		.loc 3 179 5 is_stmt 1 view .LVU298
 1018              	.LVL58:
 179:AudioProcessor.cpp ****         // Reset the envelope to IDLE state
 1019              		.loc 3 179 23 view .LVU299
 1020 0018 F5D1     		bne	.L61
 184:AudioProcessor.cpp ****         
 1021              		.loc 3 184 25 is_stmt 0 view .LVU300
 1022 001a 074B     		ldr	r3, .L64+8
 1023 001c 0022     		movs	r2, #0
 1024              	.LVL59:
 184:AudioProcessor.cpp ****         
 1025              		.loc 3 184 25 view .LVU301
 1026 001e 1A60     		str	r2, [r3]	@ unaligned
 184:AudioProcessor.cpp ****         
 1027              		.loc 3 184 25 view .LVU302
 1028              	.LBE182:
 188:AudioProcessor.cpp ****     }
 189:AudioProcessor.cpp **** }
 1029              		.loc 3 189 1 view .LVU303
 1030 0020 7047     		bx	lr
 1031              	.LVL60:
 1032              	.L59:
 1033              	.LBB189:
 1034              	.LBB188:
 1035              	.LBB187:
 1036              	.LBB185:
 1037              	.LBI185:
 205:VoiceEnvelope.h ****         if (current_state == ENV_IDLE) return;
 1038              		.loc 1 205 10 is_stmt 1 view .LVU304
ARM GAS  /var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccGMqppg.s 			page 34


 1039              	.LBB186:
 207:VoiceEnvelope.h ****         reset_target = current_value;
 1040              		.loc 1 207 9 view .LVU305
 207:VoiceEnvelope.h ****         reset_target = current_value;
 1041              		.loc 1 207 23 is_stmt 0 view .LVU306
 1042 0022 0420     		movs	r0, #4
 1043 0024 1870     		strb	r0, [r3]
 208:VoiceEnvelope.h ****         phase = 0;
 1044              		.loc 1 208 9 is_stmt 1 view .LVU307
 208:VoiceEnvelope.h ****         phase = 0;
 1045              		.loc 1 208 22 is_stmt 0 view .LVU308
 1046 0026 5868     		ldr	r0, [r3, #4]	@ float
 1047 0028 9862     		str	r0, [r3, #40]	@ float
 209:VoiceEnvelope.h ****     }
 1048              		.loc 1 209 9 is_stmt 1 view .LVU309
 209:VoiceEnvelope.h ****     }
 1049              		.loc 1 209 15 is_stmt 0 view .LVU310
 1050 002a 0020     		movs	r0, #0
 1051 002c D863     		str	r0, [r3, #60]
 1052 002e ECE7     		b	.L62
 1053              	.L65:
 1054              		.align	2
 1055              	.L64:
 1056 0030 00000000 		.word	voice_envelopes
 1057 0034 00000000 		.word	modulations
 1058 0038 00000000 		.word	voice_active
 1059              	.LBE186:
 1060              	.LBE185:
 1061              	.LBE187:
 1062              	.LBE188:
 1063              	.LBE189:
 1064              		.cfi_endproc
 1065              	.LFE5062:
 1067              		.section	.text._Z23DetermineEngineSettingsv,"ax",%progbits
 1068              		.align	1
 1069              		.global	_Z23DetermineEngineSettingsv
 1070              		.syntax unified
 1071              		.thumb
 1072              		.thumb_func
 1074              	_Z23DetermineEngineSettingsv:
 1075              	.LFB5063:
 190:AudioProcessor.cpp **** 
 191:AudioProcessor.cpp **** int DetermineEngineSettings() {
 1076              		.loc 3 191 31 is_stmt 1 view -0
 1077              		.cfi_startproc
 1078              		@ args = 0, pretend = 0, frame = 0
 1079              		@ frame_needed = 0, uses_anonymous_args = 0
 192:AudioProcessor.cpp ****     // --- Determine Dynamic Polyphony & Engine ---
 193:AudioProcessor.cpp ****     static int previous_engine_index = -1;
 1080              		.loc 3 193 5 view .LVU312
 194:AudioProcessor.cpp ****     
 195:AudioProcessor.cpp ****     // Calculate engine index from knob
 196:AudioProcessor.cpp ****     int engineIndex = static_cast<int>(timbre_knob_val * (MAX_ENGINE_INDEX + 1));
 1081              		.loc 3 196 5 view .LVU313
 1082              		.loc 3 196 59 is_stmt 0 view .LVU314
 1083 0000 134B     		ldr	r3, .L73
 1084 0002 1B68     		ldr	r3, [r3]
ARM GAS  /var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccGMqppg.s 			page 35


 1085              		.loc 3 196 76 view .LVU315
 1086 0004 5A1C     		adds	r2, r3, #1
 1087 0006 07EE902A 		vmov	s15, r2	@ int
 1088              		.loc 3 196 56 view .LVU316
 1089 000a 124A     		ldr	r2, .L73+4
 1090 000c F8EEE77A 		vcvt.f32.s32	s15, s15
 1091 0010 92ED007A 		vldr.32	s14, [r2]
 1092              	.LBB190:
 197:AudioProcessor.cpp ****     if (engineIndex > MAX_ENGINE_INDEX) engineIndex = MAX_ENGINE_INDEX;
 198:AudioProcessor.cpp ****     
 199:AudioProcessor.cpp ****     // Only check when engine index changes
 200:AudioProcessor.cpp ****     if (engineIndex != previous_engine_index) {
 1093              		.loc 3 200 21 view .LVU317
 1094 0014 104A     		ldr	r2, .L73+8
 1095              	.LBE190:
 196:AudioProcessor.cpp ****     if (engineIndex > MAX_ENGINE_INDEX) engineIndex = MAX_ENGINE_INDEX;
 1096              		.loc 3 196 56 view .LVU318
 1097 0016 67EE877A 		vmul.f32	s15, s15, s14
 1098              	.LBB195:
 1099              		.loc 3 200 21 view .LVU319
 1100 001a 1168     		ldr	r1, [r2]
 1101              	.LBE195:
 191:AudioProcessor.cpp ****     // --- Determine Dynamic Polyphony & Engine ---
 1102              		.loc 3 191 31 view .LVU320
 1103 001c 30B5     		push	{r4, r5, lr}
 1104              		.cfi_def_cfa_offset 12
 1105              		.cfi_offset 4, -12
 1106              		.cfi_offset 5, -8
 1107              		.cfi_offset 14, -4
 196:AudioProcessor.cpp ****     if (engineIndex > MAX_ENGINE_INDEX) engineIndex = MAX_ENGINE_INDEX;
 1108              		.loc 3 196 9 view .LVU321
 1109 001e FDEEE77A 		vcvt.s32.f32	s15, s15
 1110 0022 17EE900A 		vmov	r0, s15	@ int
 1111              	.LVL61:
 197:AudioProcessor.cpp ****     if (engineIndex > MAX_ENGINE_INDEX) engineIndex = MAX_ENGINE_INDEX;
 1112              		.loc 3 197 5 is_stmt 1 view .LVU322
 1113 0026 9842     		cmp	r0, r3
 1114 0028 A8BF     		it	ge
 1115 002a 1846     		movge	r0, r3
 1116              	.LVL62:
 1117              		.loc 3 200 5 view .LVU323
 1118              	.LBB196:
 1119 002c 8842     		cmp	r0, r1
 1120 002e 08D0     		beq	.L66
 1121              	.LBB191:
 1122              	.LBB192:
 201:AudioProcessor.cpp ****         // Reset stuck voices only when changing engines
 202:AudioProcessor.cpp ****         for (int v = 0; v < NUM_VOICES; v++) {
 1123              		.loc 3 202 18 is_stmt 0 view .LVU324
 1124 0030 0023     		movs	r3, #0
 1125              	.L71:
 1126              	.LVL63:
 203:AudioProcessor.cpp ****             // If changing engine types (poly to mono or mono to poly)
 204:AudioProcessor.cpp ****             if ((previous_engine_index <= 3 && engineIndex > 3) || 
 1127              		.loc 3 204 13 is_stmt 1 view .LVU325
 1128 0032 0329     		cmp	r1, #3
 1129 0034 06DC     		bgt	.L68
ARM GAS  /var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccGMqppg.s 			page 36


 1130              		.loc 3 204 45 is_stmt 0 discriminator 1 view .LVU326
 1131 0036 0328     		cmp	r0, #3
 1132 0038 06DC     		bgt	.L69
 1133              	.L70:
 202:AudioProcessor.cpp ****             // If changing engine types (poly to mono or mono to poly)
 1134              		.loc 3 202 9 is_stmt 1 discriminator 2 view .LVU327
 1135 003a 0133     		adds	r3, r3, #1
 1136              	.LVL64:
 202:AudioProcessor.cpp ****             // If changing engine types (poly to mono or mono to poly)
 1137              		.loc 3 202 27 discriminator 2 view .LVU328
 1138 003c 042B     		cmp	r3, #4
 1139 003e F8D1     		bne	.L71
 1140              	.LBE192:
 205:AudioProcessor.cpp ****                 (previous_engine_index > 3 && engineIndex <= 3)) {
 206:AudioProcessor.cpp ****                 // Only reset active flags, don't touch envelopes
 207:AudioProcessor.cpp ****                 voice_active[v] = false;
 208:AudioProcessor.cpp ****             }
 209:AudioProcessor.cpp ****         }
 210:AudioProcessor.cpp ****         
 211:AudioProcessor.cpp ****         previous_engine_index = engineIndex;
 1141              		.loc 3 211 9 view .LVU329
 1142              		.loc 3 211 31 is_stmt 0 view .LVU330
 1143 0040 1060     		str	r0, [r2]
 1144              	.LBE191:
 1145              	.LBE196:
 212:AudioProcessor.cpp ****     }
 213:AudioProcessor.cpp ****     
 214:AudioProcessor.cpp ****     return engineIndex;
 1146              		.loc 3 214 5 is_stmt 1 view .LVU331
 1147              	.LVL65:
 1148              	.L66:
 215:AudioProcessor.cpp **** }
 1149              		.loc 3 215 1 is_stmt 0 view .LVU332
 1150 0042 30BD     		pop	{r4, r5, pc}
 1151              	.LVL66:
 1152              	.L68:
 1153              	.LBB197:
 1154              	.LBB194:
 1155              	.LBB193:
 205:AudioProcessor.cpp ****                 (previous_engine_index > 3 && engineIndex <= 3)) {
 1156              		.loc 3 205 44 view .LVU333
 1157 0044 0328     		cmp	r0, #3
 1158 0046 F8DC     		bgt	.L70
 1159              	.L69:
 207:AudioProcessor.cpp ****             }
 1160              		.loc 3 207 17 is_stmt 1 view .LVU334
 207:AudioProcessor.cpp ****             }
 1161              		.loc 3 207 33 is_stmt 0 view .LVU335
 1162 0048 044C     		ldr	r4, .L73+12
 1163 004a 0025     		movs	r5, #0
 1164 004c 1D55     		strb	r5, [r3, r4]
 1165 004e F4E7     		b	.L70
 1166              	.L74:
 1167              		.align	2
 1168              	.L73:
 1169 0050 00000000 		.word	MAX_ENGINE_INDEX
 1170 0054 00000000 		.word	.LANCHOR4
ARM GAS  /var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccGMqppg.s 			page 37


 1171 0058 00000000 		.word	.LANCHOR11
 1172 005c 00000000 		.word	voice_active
 1173              	.LBE193:
 1174              	.LBE194:
 1175              	.LBE197:
 1176              		.cfi_endproc
 1177              	.LFE5063:
 1179              		.section	.text._Z16HandleTouchInputibi,"ax",%progbits
 1180              		.align	1
 1181              		.global	_Z16HandleTouchInputibi
 1182              		.syntax unified
 1183              		.thumb
 1184              		.thumb_func
 1186              	_Z16HandleTouchInputibi:
 1187              	.LVL67:
 1188              	.LFB5064:
 216:AudioProcessor.cpp **** 
 217:AudioProcessor.cpp **** void HandleTouchInput(int engineIndex, bool poly_mode, int effective_num_voices) {
 1189              		.loc 3 217 82 is_stmt 1 view -0
 1190              		.cfi_startproc
 1191              		@ args = 0, pretend = 0, frame = 0
 1192              		@ frame_needed = 0, uses_anonymous_args = 0
 218:AudioProcessor.cpp ****     // Use the shared volatile variable for current touch state
 219:AudioProcessor.cpp ****     uint16_t local_current_touch_state = current_touch_state;
 1193              		.loc 3 219 5 view .LVU337
 217:AudioProcessor.cpp ****     // Use the shared volatile variable for current touch state
 1194              		.loc 3 217 82 is_stmt 0 view .LVU338
 1195 0000 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
 1196              		.cfi_def_cfa_offset 32
 1197              		.cfi_offset 3, -32
 1198              		.cfi_offset 4, -28
 1199              		.cfi_offset 5, -24
 1200              		.cfi_offset 6, -20
 1201              		.cfi_offset 7, -16
 1202              		.cfi_offset 8, -12
 1203              		.cfi_offset 9, -8
 1204              		.cfi_offset 14, -4
 1205              		.loc 3 219 42 view .LVU339
 1206 0004 574B     		ldr	r3, .L103
 217:AudioProcessor.cpp ****     // Use the shared volatile variable for current touch state
 1207              		.loc 3 217 82 view .LVU340
 1208 0006 0C46     		mov	r4, r1
 1209 0008 1646     		mov	r6, r2
 1210              	.LBB218:
 220:AudioProcessor.cpp **** 
 221:AudioProcessor.cpp ****     for (int i = 0; i < 12; ++i) { 
 1211              		.loc 3 221 14 view .LVU341
 1212 000a 4FF00008 		mov	r8, #0
 1213              	.LBE218:
 219:AudioProcessor.cpp **** 
 1214              		.loc 3 219 42 view .LVU342
 1215 000e 1D88     		ldrh	r5, [r3]
 1216 0010 ADB2     		uxth	r5, r5
 1217              	.LVL68:
 1218              		.loc 3 221 5 is_stmt 1 view .LVU343
 1219              	.LBB260:
 1220              		.loc 3 221 23 view .LVU344
ARM GAS  /var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccGMqppg.s 			page 38


 1221              	.LBE260:
 217:AudioProcessor.cpp ****     // Use the shared volatile variable for current touch state
 1222              		.loc 3 217 82 is_stmt 0 view .LVU345
 1223 0012 2DED028B 		vpush.64	{d8}
 1224              		.cfi_def_cfa_offset 40
 1225              		.cfi_offset 80, -40
 1226              		.cfi_offset 81, -36
 1227              	.LVL69:
 1228              	.L88:
 1229              	.LBB261:
 1230              	.LBB219:
 222:AudioProcessor.cpp ****         bool pad_currently_pressed = (local_current_touch_state >> i) & 1;
 1231              		.loc 3 222 9 is_stmt 1 view .LVU346
 223:AudioProcessor.cpp ****         bool pad_was_pressed = (last_touch_state >> i) & 1;
 1232              		.loc 3 223 9 view .LVU347
 1233              		.loc 3 223 33 is_stmt 0 view .LVU348
 1234 0016 544F     		ldr	r7, .L103+4
 222:AudioProcessor.cpp ****         bool pad_currently_pressed = (local_current_touch_state >> i) & 1;
 1235              		.loc 3 222 65 view .LVU349
 1236 0018 45FA08F9 		asr	r9, r5, r8
 224:AudioProcessor.cpp ****         float note_for_pad = kTouchMidiNotes[i];
 1237              		.loc 3 224 15 view .LVU350
 1238 001c 534A     		ldr	r2, .L103+8
 223:AudioProcessor.cpp ****         bool pad_was_pressed = (last_touch_state >> i) & 1;
 1239              		.loc 3 223 33 view .LVU351
 1240 001e 3B88     		ldrh	r3, [r7]
 1241              	.LBB220:
 225:AudioProcessor.cpp **** 
 226:AudioProcessor.cpp ****         if (pad_currently_pressed && !pad_was_pressed) { 
 1242              		.loc 3 226 9 view .LVU352
 1243 0020 19F00109 		ands	r9, r9, #1
 1244              	.LBE220:
 224:AudioProcessor.cpp ****         float note_for_pad = kTouchMidiNotes[i];
 1245              		.loc 3 224 15 view .LVU353
 1246 0024 02EB8802 		add	r2, r2, r8, lsl #2
 223:AudioProcessor.cpp ****         float note_for_pad = kTouchMidiNotes[i];
 1247              		.loc 3 223 50 view .LVU354
 1248 0028 43FA08F3 		asr	r3, r3, r8
 224:AudioProcessor.cpp ****         float note_for_pad = kTouchMidiNotes[i];
 1249              		.loc 3 224 15 view .LVU355
 1250 002c 92ED008A 		vldr.32	s16, [r2]
 223:AudioProcessor.cpp ****         float note_for_pad = kTouchMidiNotes[i];
 1251              		.loc 3 223 56 view .LVU356
 1252 0030 03F00103 		and	r3, r3, #1
 1253              	.LVL70:
 224:AudioProcessor.cpp ****         float note_for_pad = kTouchMidiNotes[i];
 1254              		.loc 3 224 9 is_stmt 1 view .LVU357
 1255              		.loc 3 226 9 view .LVU358
 1256              	.LBB251:
 1257 0034 52D0     		beq	.L76
 1258              		.loc 3 226 35 is_stmt 0 discriminator 1 view .LVU359
 1259 0036 13BB     		cbnz	r3, .L78
 1260              	.LBE251:
 1261              	.LBE219:
 1262              	.LBE261:
 227:AudioProcessor.cpp ****             if (poly_mode) {
 1263              		.loc 3 227 13 is_stmt 1 view .LVU360
ARM GAS  /var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccGMqppg.s 			page 39


 1264              	.LBB262:
 1265              	.LBB256:
 1266              	.LBB252:
 1267              	.LBB221:
 1268 0038 002C     		cmp	r4, #0
 1269 003a 4AD0     		beq	.L79
 1270              	.LBB222:
 228:AudioProcessor.cpp ****                 int voice_idx = FindAvailableVoice(effective_num_voices); 
 1271              		.loc 3 228 17 view .LVU361
 1272              		.loc 3 228 51 is_stmt 0 view .LVU362
 1273 003c 3046     		mov	r0, r6
 1274 003e FFF7FEFF 		bl	_Z18FindAvailableVoicei
 1275              	.LVL71:
 229:AudioProcessor.cpp ****                 if (voice_idx != -1) {
 1276              		.loc 3 229 17 is_stmt 1 view .LVU363
 1277 0042 421C     		adds	r2, r0, #1
 1278 0044 1BD0     		beq	.L78
 230:AudioProcessor.cpp ****                     voice_note[voice_idx] = note_for_pad;
 1279              		.loc 3 230 21 view .LVU364
 1280              		.loc 3 230 43 is_stmt 0 view .LVU365
 1281 0046 4A4B     		ldr	r3, .L103+12
 231:AudioProcessor.cpp ****                     voice_active[voice_idx] = true;
 1282              		.loc 3 231 45 view .LVU366
 1283 0048 0121     		movs	r1, #1
 232:AudioProcessor.cpp ****                     modulations[voice_idx].trigger = 1.0f; // For initial transient
 1284              		.loc 3 232 52 view .LVU367
 1285 004a 2822     		movs	r2, #40
 1286 004c B7EE007A 		vmov.f32	s14, #1.0e+0
 230:AudioProcessor.cpp ****                     voice_note[voice_idx] = note_for_pad;
 1287              		.loc 3 230 43 view .LVU368
 1288 0050 03EB8003 		add	r3, r3, r0, lsl #2
 1289 0054 83ED008A 		vstr.32	s16, [r3]
 231:AudioProcessor.cpp ****                     voice_active[voice_idx] = true;
 1290              		.loc 3 231 21 is_stmt 1 view .LVU369
 231:AudioProcessor.cpp ****                     voice_active[voice_idx] = true;
 1291              		.loc 3 231 45 is_stmt 0 view .LVU370
 1292 0058 464B     		ldr	r3, .L103+16
 1293 005a 1954     		strb	r1, [r3, r0]
 1294              		.loc 3 232 21 is_stmt 1 view .LVU371
 1295              		.loc 3 232 52 is_stmt 0 view .LVU372
 1296 005c 464B     		ldr	r3, .L103+20
 1297 005e 02FB0033 		mla	r3, r2, r0, r3
 1298              	.LBB223:
 1299              	.LBB224:
 120:VoiceEnvelope.h ****             case ENV_IDLE:
 1300              		.loc 1 120 17 view .LVU373
 1301 0062 464A     		ldr	r2, .L103+24
 1302              	.LBE224:
 1303              	.LBE223:
 1304              		.loc 3 232 52 view .LVU374
 1305 0064 83ED067A 		vstr.32	s14, [r3, #24]
 233:AudioProcessor.cpp ****                     voice_envelopes[voice_idx].Trigger(); 
 1306              		.loc 3 233 21 is_stmt 1 view .LVU375
 1307              	.LVL72:
 1308              	.LBB233:
 1309              	.LBI223:
 119:VoiceEnvelope.h ****         switch (current_state) {
ARM GAS  /var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccGMqppg.s 			page 40


 1310              		.loc 1 119 10 view .LVU376
 1311              	.LBB231:
 120:VoiceEnvelope.h ****             case ENV_IDLE:
 1312              		.loc 1 120 9 view .LVU377
 120:VoiceEnvelope.h ****             case ENV_IDLE:
 1313              		.loc 1 120 17 is_stmt 0 view .LVU378
 1314 0068 4423     		movs	r3, #68
 1315 006a 5843     		muls	r0, r3, r0
 1316              	.LVL73:
 120:VoiceEnvelope.h ****             case ENV_IDLE:
 1317              		.loc 1 120 17 view .LVU379
 1318 006c 12F800C0 		ldrb	ip, [r2, r0]	@ zero_extendqisi2
 1319 0070 1318     		adds	r3, r2, r0
 1320              	.LVL74:
 120:VoiceEnvelope.h ****             case ENV_IDLE:
 1321              		.loc 1 120 9 view .LVU380
 1322 0072 BCF1000F 		cmp	ip, #0
 1323 0076 0CD0     		beq	.L81
 1324 0078 BCF1030F 		cmp	ip, #3
 1325 007c 0DD0     		beq	.L82
 1326              	.LVL75:
 1327              	.L78:
 120:VoiceEnvelope.h ****             case ENV_IDLE:
 1328              		.loc 1 120 9 view .LVU381
 1329              	.LBE231:
 1330              	.LBE233:
 1331              	.LBE222:
 1332              	.LBE221:
 1333              	.LBE252:
 1334              	.LBE256:
 221:AudioProcessor.cpp ****         bool pad_currently_pressed = (local_current_touch_state >> i) & 1;
 1335              		.loc 3 221 5 is_stmt 1 discriminator 2 view .LVU382
 1336 007e 08F10108 		add	r8, r8, #1
 1337              	.LVL76:
 221:AudioProcessor.cpp ****         bool pad_currently_pressed = (local_current_touch_state >> i) & 1;
 1338              		.loc 3 221 23 discriminator 2 view .LVU383
 1339 0082 B8F10C0F 		cmp	r8, #12
 1340 0086 C6D1     		bne	.L88
 1341              	.LBE262:
 234:AudioProcessor.cpp ****                 }
 235:AudioProcessor.cpp ****             } else { 
 236:AudioProcessor.cpp ****                 AssignMonoNote(note_for_pad);
 237:AudioProcessor.cpp ****             }
 238:AudioProcessor.cpp ****         } else if (!pad_currently_pressed && pad_was_pressed) { 
 239:AudioProcessor.cpp ****             if (poly_mode) {
 240:AudioProcessor.cpp ****                  int voice_idx = FindVoice(note_for_pad, effective_num_voices);
 241:AudioProcessor.cpp ****                  if (voice_idx != -1) {
 242:AudioProcessor.cpp ****                      voice_active[voice_idx] = false; // Mark inactive for release
 243:AudioProcessor.cpp ****                      voice_envelopes[voice_idx].Release(); // Start release phase
 244:AudioProcessor.cpp ****                  }
 245:AudioProcessor.cpp ****             } else { 
 246:AudioProcessor.cpp ****                 if (voice_active[0] && fabsf(voice_note[0] - note_for_pad) < 0.1f) {
 247:AudioProcessor.cpp ****                     voice_active[0] = false; // Mark voice 0 inactive
 248:AudioProcessor.cpp ****                 }
 249:AudioProcessor.cpp ****             }
 250:AudioProcessor.cpp ****         }
 251:AudioProcessor.cpp ****     }
ARM GAS  /var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccGMqppg.s 			page 41


 252:AudioProcessor.cpp ****     last_touch_state = local_current_touch_state; // Update last state with the value used in this 
 1342              		.loc 3 252 5 view .LVU384
 253:AudioProcessor.cpp **** }
 1343              		.loc 3 253 1 is_stmt 0 view .LVU385
 1344 0088 BDEC028B 		vldm	sp!, {d8}
 1345              		.cfi_remember_state
 1346              		.cfi_restore 80
 1347              		.cfi_restore 81
 1348              		.cfi_def_cfa_offset 32
 1349              	.LVL77:
 252:AudioProcessor.cpp **** }
 1350              		.loc 3 252 22 view .LVU386
 1351 008c 3D80     		strh	r5, [r7]	@ movhi
 1352              		.loc 3 253 1 view .LVU387
 1353 008e BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 1354              	.LVL78:
 1355              	.L81:
 1356              		.cfi_restore_state
 1357              	.LBB263:
 1358              	.LBB257:
 1359              	.LBB253:
 1360              	.LBB236:
 1361              	.LBB235:
 1362              	.LBB234:
 1363              	.LBB232:
 121:VoiceEnvelope.h ****                 current_state = ENV_ATTACK;
 1364              		.loc 1 121 13 is_stmt 1 view .LVU388
 122:VoiceEnvelope.h ****                 phase = 0;
 1365              		.loc 1 122 17 view .LVU389
 122:VoiceEnvelope.h ****                 phase = 0;
 1366              		.loc 1 122 31 is_stmt 0 view .LVU390
 1367 0092 1154     		strb	r1, [r2, r0]
 123:VoiceEnvelope.h ****                 break;
 1368              		.loc 1 123 17 is_stmt 1 view .LVU391
 123:VoiceEnvelope.h ****                 break;
 1369              		.loc 1 123 23 is_stmt 0 view .LVU392
 1370 0094 C3F83CC0 		str	ip, [r3, #60]
 124:VoiceEnvelope.h ****             case ENV_DECAY:
 1371              		.loc 1 124 17 is_stmt 1 view .LVU393
 1372 0098 F1E7     		b	.L78
 1373              	.L82:
 1374              	.LVL79:
 1375              	.LBB225:
 1376              	.LBI225:
 119:VoiceEnvelope.h ****         switch (current_state) {
 1377              		.loc 1 119 10 view .LVU394
 1378              	.LBB226:
 125:VoiceEnvelope.h ****                 current_state = ENV_ATTACK;
 1379              		.loc 1 125 13 view .LVU395
 126:VoiceEnvelope.h ****                 phase = CalculateAttackPhase(current_value);
 1380              		.loc 1 126 17 view .LVU396
 127:VoiceEnvelope.h ****                 break;
 1381              		.loc 1 127 45 is_stmt 0 view .LVU397
 1382 009a D3ED015A 		vldr.32	s11, [r3, #4]
 1383              	.LBB227:
 1384              	.LBB228:
 219:VoiceEnvelope.h ****     }
ARM GAS  /var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccGMqppg.s 			page 42


 220:VoiceEnvelope.h **** 
 221:VoiceEnvelope.h ****     float CalculateDecayAmplitude(float ph) {
 222:VoiceEnvelope.h ****         return (1.0f - ph) / (1.0f + release_curve_coefficient * ph);
 223:VoiceEnvelope.h ****     }
 224:VoiceEnvelope.h **** 
 225:VoiceEnvelope.h ****     size_t CalculateAttackPhase(float amp) {
 226:VoiceEnvelope.h ****         return static_cast<size_t>(roundf(attack_time * amp * (1.0f + attack_curve_coefficient) / (
 1385              		.loc 1 226 71 view .LVU398
 1386 009e 93ED026A 		vldr.32	s12, [r3, #8]
 1387              		.loc 1 226 55 view .LVU399
 1388 00a2 D3ED0D7A 		vldr.32	s15, [r3, #52]	@ int
 1389              		.loc 1 226 69 view .LVU400
 1390 00a6 76EE076A 		vadd.f32	s13, s12, s14
 1391              	.LBE228:
 1392              	.LBE227:
 126:VoiceEnvelope.h ****                 phase = CalculateAttackPhase(current_value);
 1393              		.loc 1 126 31 view .LVU401
 1394 00aa 1154     		strb	r1, [r2, r0]
 127:VoiceEnvelope.h ****                 break;
 1395              		.loc 1 127 17 is_stmt 1 view .LVU402
 1396              	.LVL80:
 1397              	.LBB230:
 1398              	.LBI227:
 225:VoiceEnvelope.h ****         return static_cast<size_t>(roundf(attack_time * amp * (1.0f + attack_curve_coefficient) / (
 1399              		.loc 1 225 12 view .LVU403
 1400              	.LBB229:
 1401              		.loc 1 226 9 view .LVU404
 1402              		.loc 1 226 105 is_stmt 0 view .LVU405
 1403 00ac A5EE867A 		vfma.f32	s14, s11, s12
 1404              		.loc 1 226 55 view .LVU406
 1405 00b0 F8EE677A 		vcvt.f32.u32	s15, s15
 1406 00b4 67EEA57A 		vmul.f32	s15, s15, s11
 1407              		.loc 1 226 61 view .LVU407
 1408 00b8 67EEA67A 		vmul.f32	s15, s15, s13
 1409              		.loc 1 226 105 view .LVU408
 1410 00bc F0EE476A 		vmov.f32	s13, s14
 1411              		.loc 1 226 42 view .LVU409
 1412 00c0 87EEA67A 		vdiv.f32	s14, s15, s13
 1413 00c4 F8FE477A 		vrinta.f32	s15, s14
 1414              	.LVL81:
 1415              		.loc 1 226 139 view .LVU410
 1416 00c8 FCEEE77A 		vcvt.u32.f32	s15, s15
 1417 00cc C3ED0F7A 		vstr.32	s15, [r3, #60]	@ int
 1418              	.LBE229:
 1419              	.LBE230:
 128:VoiceEnvelope.h ****             default:
 1420              		.loc 1 128 17 is_stmt 1 view .LVU411
 1421 00d0 D5E7     		b	.L78
 1422              	.LVL82:
 1423              	.L79:
 128:VoiceEnvelope.h ****             default:
 1424              		.loc 1 128 17 is_stmt 0 view .LVU412
 1425              	.LBE226:
 1426              	.LBE225:
 1427              	.LBE232:
 1428              	.LBE234:
 1429              	.LBE235:
ARM GAS  /var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccGMqppg.s 			page 43


 236:AudioProcessor.cpp ****             }
 1430              		.loc 3 236 17 is_stmt 1 view .LVU413
 236:AudioProcessor.cpp ****             }
 1431              		.loc 3 236 31 is_stmt 0 view .LVU414
 1432 00d2 B0EE480A 		vmov.f32	s0, s16
 1433 00d6 FFF7FEFF 		bl	_Z14AssignMonoNotef
 1434              	.LVL83:
 236:AudioProcessor.cpp ****             }
 1435              		.loc 3 236 31 view .LVU415
 1436 00da D0E7     		b	.L78
 1437              	.LVL84:
 1438              	.L76:
 236:AudioProcessor.cpp ****             }
 1439              		.loc 3 236 31 view .LVU416
 1440              	.LBE236:
 1441              	.LBE253:
 1442              	.LBE257:
 1443              	.LBE263:
 238:AudioProcessor.cpp ****             if (poly_mode) {
 1444              		.loc 3 238 16 is_stmt 1 discriminator 1 view .LVU417
 1445              	.LBB264:
 1446              	.LBB258:
 1447              	.LBB254:
 1448              	.LBB237:
 238:AudioProcessor.cpp ****             if (poly_mode) {
 1449              		.loc 3 238 43 is_stmt 0 discriminator 1 view .LVU418
 1450 00dc 002B     		cmp	r3, #0
 1451 00de CED0     		beq	.L78
 1452              	.LBE237:
 1453              	.LBE254:
 1454              	.LBE258:
 1455              	.LBE264:
 239:AudioProcessor.cpp ****                  int voice_idx = FindVoice(note_for_pad, effective_num_voices);
 1456              		.loc 3 239 13 is_stmt 1 view .LVU419
 1457              	.LBB265:
 1458              	.LBB259:
 1459              	.LBB255:
 1460              	.LBB250:
 1461              	.LBB238:
 1462 00e0 64B3     		cbz	r4, .L83
 1463              	.LBB239:
 240:AudioProcessor.cpp ****                  if (voice_idx != -1) {
 1464              		.loc 3 240 18 view .LVU420
 240:AudioProcessor.cpp ****                  if (voice_idx != -1) {
 1465              		.loc 3 240 43 is_stmt 0 view .LVU421
 1466 00e2 B0EE480A 		vmov.f32	s0, s16
 1467 00e6 3046     		mov	r0, r6
 1468 00e8 FFF7FEFF 		bl	_Z9FindVoicefi
 1469              	.LVL85:
 241:AudioProcessor.cpp ****                      voice_active[voice_idx] = false; // Mark inactive for release
 1470              		.loc 3 241 18 is_stmt 1 view .LVU422
 1471 00ec 431C     		adds	r3, r0, #1
 1472 00ee C6D0     		beq	.L78
 242:AudioProcessor.cpp ****                      voice_envelopes[voice_idx].Release(); // Start release phase
 1473              		.loc 3 242 22 view .LVU423
 242:AudioProcessor.cpp ****                      voice_envelopes[voice_idx].Release(); // Start release phase
 1474              		.loc 3 242 46 is_stmt 0 view .LVU424
ARM GAS  /var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccGMqppg.s 			page 44


 1475 00f0 204B     		ldr	r3, .L103+16
 1476              	.LBB240:
 1477              	.LBB241:
 135:VoiceEnvelope.h ****             case ENV_ATTACK:
 1478              		.loc 1 135 17 view .LVU425
 1479 00f2 2249     		ldr	r1, .L103+24
 1480              	.LBE241:
 1481              	.LBE240:
 242:AudioProcessor.cpp ****                      voice_envelopes[voice_idx].Release(); // Start release phase
 1482              		.loc 3 242 46 view .LVU426
 1483 00f4 03F80090 		strb	r9, [r3, r0]
 243:AudioProcessor.cpp ****                  }
 1484              		.loc 3 243 22 is_stmt 1 view .LVU427
 1485              	.LVL86:
 1486              	.LBB249:
 1487              	.LBI240:
 134:VoiceEnvelope.h ****         switch (current_state) {
 1488              		.loc 1 134 10 view .LVU428
 1489              	.LBB248:
 135:VoiceEnvelope.h ****             case ENV_ATTACK:
 1490              		.loc 1 135 9 view .LVU429
 135:VoiceEnvelope.h ****             case ENV_ATTACK:
 1491              		.loc 1 135 17 is_stmt 0 view .LVU430
 1492 00f8 4423     		movs	r3, #68
 1493 00fa 4343     		muls	r3, r0, r3
 1494 00fc C85C     		ldrb	r0, [r1, r3]	@ zero_extendqisi2
 1495              	.LVL87:
 135:VoiceEnvelope.h ****             case ENV_ATTACK:
 1496              		.loc 1 135 17 view .LVU431
 1497 00fe CA18     		adds	r2, r1, r3
 135:VoiceEnvelope.h ****             case ENV_ATTACK:
 1498              		.loc 1 135 9 view .LVU432
 1499 0100 0128     		cmp	r0, #1
 1500 0102 06D0     		beq	.L84
 1501 0104 0228     		cmp	r0, #2
 1502 0106 BAD1     		bne	.L78
 1503              	.L85:
 143:VoiceEnvelope.h ****                 phase = 0;
 1504              		.loc 1 143 13 is_stmt 1 view .LVU433
 144:VoiceEnvelope.h ****                 current_state = ENV_DECAY;
 1505              		.loc 1 144 17 view .LVU434
 144:VoiceEnvelope.h ****                 current_state = ENV_DECAY;
 1506              		.loc 1 144 23 is_stmt 0 view .LVU435
 1507 0108 C2F83C90 		str	r9, [r2, #60]
 145:VoiceEnvelope.h ****                 break;
 1508              		.loc 1 145 17 is_stmt 1 view .LVU436
 145:VoiceEnvelope.h ****                 break;
 1509              		.loc 1 145 31 is_stmt 0 view .LVU437
 1510 010c 0322     		movs	r2, #3
 1511 010e CA54     		strb	r2, [r1, r3]
 146:VoiceEnvelope.h ****             default:
 1512              		.loc 1 146 17 is_stmt 1 view .LVU438
 1513 0110 B5E7     		b	.L78
 1514              	.L84:
 1515              	.LVL88:
 1516              	.LBB242:
 1517              	.LBI242:
ARM GAS  /var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccGMqppg.s 			page 45


 134:VoiceEnvelope.h ****         switch (current_state) {
 1518              		.loc 1 134 10 view .LVU439
 1519              	.LBB243:
 136:VoiceEnvelope.h ****                 // Preserve the attack curve character when transitioning to release
 1520              		.loc 1 136 13 view .LVU440
 139:VoiceEnvelope.h ****                 phase = 0; // Always start release from beginning, preserving the current level
 1521              		.loc 1 139 17 view .LVU441
 139:VoiceEnvelope.h ****                 phase = 0; // Always start release from beginning, preserving the current level
 1522              		.loc 1 139 58 is_stmt 0 view .LVU442
 1523 0112 D2ED0F7A 		vldr.32	s15, [r2, #60]	@ int
 139:VoiceEnvelope.h ****                 phase = 0; // Always start release from beginning, preserving the current level
 1524              		.loc 1 139 57 view .LVU443
 1525 0116 92ED0B7A 		vldr.32	s14, [r2, #44]
 139:VoiceEnvelope.h ****                 phase = 0; // Always start release from beginning, preserving the current level
 1526              		.loc 1 139 58 view .LVU444
 1527 011a F8EE677A 		vcvt.f32.u32	s15, s15
 1528              	.LBB244:
 1529              	.LBB245:
 218:VoiceEnvelope.h ****     }
 1530              		.loc 1 218 27 view .LVU445
 1531 011e 92ED026A 		vldr.32	s12, [r2, #8]
 1532              	.LBE245:
 1533              	.LBE244:
 139:VoiceEnvelope.h ****                 phase = 0; // Always start release from beginning, preserving the current level
 1534              		.loc 1 139 57 view .LVU446
 1535 0122 67EE877A 		vmul.f32	s15, s15, s14
 1536              	.LVL89:
 1537              	.LBB247:
 1538              	.LBI244:
 217:VoiceEnvelope.h ****         return ph / (1.0f + attack_curve_coefficient * (1.0f - ph));
 1539              		.loc 1 217 11 is_stmt 1 view .LVU447
 1540              	.LBB246:
 218:VoiceEnvelope.h ****     }
 1541              		.loc 1 218 9 view .LVU448
 218:VoiceEnvelope.h ****     }
 1542              		.loc 1 218 62 is_stmt 0 view .LVU449
 1543 0126 B7EE007A 		vmov.f32	s14, #1.0e+0
 1544 012a 77EE676A 		vsub.f32	s13, s14, s15
 218:VoiceEnvelope.h ****     }
 1545              		.loc 1 218 27 view .LVU450
 1546 012e A6EE267A 		vfma.f32	s14, s12, s13
 1547              	.LVL90:
 218:VoiceEnvelope.h ****     }
 1548              		.loc 1 218 67 view .LVU451
 1549 0132 C7EE876A 		vdiv.f32	s13, s15, s14
 1550              	.LBE246:
 1551              	.LBE247:
 139:VoiceEnvelope.h ****                 phase = 0; // Always start release from beginning, preserving the current level
 1552              		.loc 1 139 31 view .LVU452
 1553 0136 C2ED016A 		vstr.32	s13, [r2, #4]
 140:VoiceEnvelope.h ****                 current_state = ENV_DECAY;
 1554              		.loc 1 140 17 is_stmt 1 view .LVU453
 1555 013a E5E7     		b	.L85
 1556              	.LVL91:
 1557              	.L83:
 140:VoiceEnvelope.h ****                 current_state = ENV_DECAY;
 1558              		.loc 1 140 17 is_stmt 0 view .LVU454
ARM GAS  /var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccGMqppg.s 			page 46


 1559              	.LBE243:
 1560              	.LBE242:
 1561              	.LBE248:
 1562              	.LBE249:
 1563              	.LBE239:
 246:AudioProcessor.cpp ****                     voice_active[0] = false; // Mark voice 0 inactive
 1564              		.loc 3 246 17 is_stmt 1 view .LVU455
 246:AudioProcessor.cpp ****                     voice_active[0] = false; // Mark voice 0 inactive
 1565              		.loc 3 246 35 is_stmt 0 view .LVU456
 1566 013c 0D4B     		ldr	r3, .L103+16
 1567              	.LVL92:
 246:AudioProcessor.cpp ****                     voice_active[0] = false; // Mark voice 0 inactive
 1568              		.loc 3 246 17 view .LVU457
 1569 013e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1570 0140 002A     		cmp	r2, #0
 1571 0142 9CD0     		beq	.L78
 246:AudioProcessor.cpp ****                     voice_active[0] = false; // Mark voice 0 inactive
 1572              		.loc 3 246 58 discriminator 1 view .LVU458
 1573 0144 0A4A     		ldr	r2, .L103+12
 246:AudioProcessor.cpp ****                     voice_active[0] = false; // Mark voice 0 inactive
 1574              		.loc 3 246 37 discriminator 1 view .LVU459
 1575 0146 9FED0E7A 		vldr.32	s14, .L103+28
 246:AudioProcessor.cpp ****                     voice_active[0] = false; // Mark voice 0 inactive
 1576              		.loc 3 246 60 discriminator 1 view .LVU460
 1577 014a D2ED007A 		vldr.32	s15, [r2]
 1578 014e 77EEC87A 		vsub.f32	s15, s15, s16
 246:AudioProcessor.cpp ****                     voice_active[0] = false; // Mark voice 0 inactive
 1579              		.loc 3 246 45 discriminator 1 view .LVU461
 1580 0152 F0EEE77A 		vabs.f32	s15, s15
 246:AudioProcessor.cpp ****                     voice_active[0] = false; // Mark voice 0 inactive
 1581              		.loc 3 246 37 discriminator 1 view .LVU462
 1582 0156 F4EEC77A 		vcmpe.f32	s15, s14
 1583 015a F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 247:AudioProcessor.cpp ****                 }
 1584              		.loc 3 247 21 is_stmt 1 discriminator 1 view .LVU463
 247:AudioProcessor.cpp ****                 }
 1585              		.loc 3 247 37 is_stmt 0 discriminator 1 view .LVU464
 1586 015e 48BF     		it	mi
 1587 0160 1C70     		strbmi	r4, [r3]
 1588 0162 8CE7     		b	.L78
 1589              	.L104:
 1590              		.align	2
 1591              	.L103:
 1592 0164 00000000 		.word	current_touch_state
 1593 0168 00000000 		.word	last_touch_state
 1594 016c 00000000 		.word	kTouchMidiNotes
 1595 0170 00000000 		.word	voice_note
 1596 0174 00000000 		.word	voice_active
 1597 0178 00000000 		.word	modulations
 1598 017c 00000000 		.word	voice_envelopes
 1599 0180 CDCCCC3D 		.word	1036831949
 1600              	.LBE238:
 1601              	.LBE250:
 1602              	.LBE255:
 1603              	.LBE259:
 1604              	.LBE265:
 1605              		.cfi_endproc
ARM GAS  /var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccGMqppg.s 			page 47


 1606              	.LFE5064:
 1608              		.section	.text._Z22ConfigureDelaySettingsv,"ax",%progbits
 1609              		.align	1
 1610              		.global	_Z22ConfigureDelaySettingsv
 1611              		.syntax unified
 1612              		.thumb
 1613              		.thumb_func
 1615              	_Z22ConfigureDelaySettingsv:
 1616              	.LFB5065:
 254:AudioProcessor.cpp **** 
 255:AudioProcessor.cpp **** void ConfigureDelaySettings() {
 1617              		.loc 3 255 31 is_stmt 1 view -0
 1618              		.cfi_startproc
 1619              		@ args = 0, pretend = 0, frame = 0
 1620              		@ frame_needed = 0, uses_anonymous_args = 0
 1621              		@ link register save eliminated.
 256:AudioProcessor.cpp ****     delay.SetFeedback(delay_feedback_val * 0.98f); // ADC 5
 1622              		.loc 3 256 5 view .LVU466
 1623              	.LVL93:
 1624              	.LBB276:
 1625              	.LBI276:
 1626              		.file 5 "Effects/EchoDelay.h"
   1:Effects/EchoDelay.h **** #pragma once
   2:Effects/EchoDelay.h **** #ifndef INFS_ECHODELAY_H
   3:Effects/EchoDelay.h **** #define INFS_ECHODELAY_H
   4:Effects/EchoDelay.h **** 
   5:Effects/EchoDelay.h **** #include <daisysp.h>
   6:Effects/EchoDelay.h **** #include "BiquadFilters.h"
   7:Effects/EchoDelay.h **** #include "DSPUtils.h"
   8:Effects/EchoDelay.h **** 
   9:Effects/EchoDelay.h **** namespace infrasonic {
  10:Effects/EchoDelay.h **** 
  11:Effects/EchoDelay.h **** /**
  12:Effects/EchoDelay.h ****  * @brief
  13:Effects/EchoDelay.h ****  * Tape-ish echo delay.
  14:Effects/EchoDelay.h ****  *   - Feedback is unbounded, but signal is soft-clipped
  15:Effects/EchoDelay.h ****  *   - Output is full-wet, should be mixed with dry signal externally
  16:Effects/EchoDelay.h ****  *
  17:Effects/EchoDelay.h ****  * @tparam MaxLength Max length of delay in samples
  18:Effects/EchoDelay.h ****  */
  19:Effects/EchoDelay.h **** template<size_t MaxLength>
  20:Effects/EchoDelay.h **** class EchoDelay {
  21:Effects/EchoDelay.h **** 
  22:Effects/EchoDelay.h ****     public:
  23:Effects/EchoDelay.h **** 
  24:Effects/EchoDelay.h ****         EchoDelay() {}
  25:Effects/EchoDelay.h ****         ~EchoDelay() {}
  26:Effects/EchoDelay.h **** 
  27:Effects/EchoDelay.h ****         void Init(float sample_rate)
  28:Effects/EchoDelay.h ****         {
  29:Effects/EchoDelay.h ****             sample_rate_ = sample_rate;
  30:Effects/EchoDelay.h ****             delayLine_.Init();
  31:Effects/EchoDelay.h ****             bpf_.Init(sample_rate);
  32:Effects/EchoDelay.h ****             bpf_.SetParams(800.0f, 1.0f);
  33:Effects/EchoDelay.h ****         }
  34:Effects/EchoDelay.h **** 
  35:Effects/EchoDelay.h ****         /**
ARM GAS  /var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccGMqppg.s 			page 48


  36:Effects/EchoDelay.h ****          * @brief Set the approximate lag time (smoothing) for delay time changes, in seconds
  37:Effects/EchoDelay.h ****          */
  38:Effects/EchoDelay.h ****         void SetLagTime(const float time_s)
  39:Effects/EchoDelay.h ****         {
  40:Effects/EchoDelay.h ****             delay_smooth_coef_ = onepole_coef(time_s, sample_rate_);
  41:Effects/EchoDelay.h ****         }
  42:Effects/EchoDelay.h **** 
  43:Effects/EchoDelay.h ****         /**
  44:Effects/EchoDelay.h ****          * @brief Set the Delay Time in seconds
  45:Effects/EchoDelay.h ****          *
  46:Effects/EchoDelay.h ****          * @param time_s Delay time in seconds. Will be truncated to MaxLength.
  47:Effects/EchoDelay.h ****          * @param immediately If true, sets delay time immediately with no smoothing.
  48:Effects/EchoDelay.h ****          */
  49:Effects/EchoDelay.h ****         void SetDelayTime(const float time_s, bool immediately = false)
  50:Effects/EchoDelay.h ****         {
  51:Effects/EchoDelay.h ****             delay_time_target_ = time_s;
  52:Effects/EchoDelay.h ****             if (immediately) delay_time_current_ = time_s;
  53:Effects/EchoDelay.h ****         }
  54:Effects/EchoDelay.h **** 
  55:Effects/EchoDelay.h ****         /**
  56:Effects/EchoDelay.h ****          * @brief
  57:Effects/EchoDelay.h ****          * Set the feedback amount (linear multiplier).
  58:Effects/EchoDelay.h ****          * This can be >1 in magnitude for saturated swells, or negative.
  59:Effects/EchoDelay.h ****          *
  60:Effects/EchoDelay.h ****          * NOTE: This is not internally smoothed. Use external smoothing if desired.
  61:Effects/EchoDelay.h ****          *
  62:Effects/EchoDelay.h ****          * @param feedback
  63:Effects/EchoDelay.h ****          */
  64:Effects/EchoDelay.h ****         void SetFeedback(const float feedback)
 1627              		.loc 5 64 14 view .LVU467
 1628              	.LBE276:
 1629              		.loc 3 256 22 is_stmt 0 view .LVU468
 1630 0000 194A     		ldr	r2, .L109
 1631 0002 9FED1A7A 		vldr.32	s14, .L109+4
 1632 0006 D2ED007A 		vldr.32	s15, [r2]
 1633              	.LBB279:
 1634              	.LBB277:
  65:Effects/EchoDelay.h ****         {
  66:Effects/EchoDelay.h ****             feedback_ = feedback;
 1635              		.loc 5 66 23 view .LVU469
 1636 000a 194B     		ldr	r3, .L109+8
 1637              	.LBE277:
 1638              	.LBE279:
 1639              		.loc 3 256 22 view .LVU470
 1640 000c 67EE877A 		vmul.f32	s15, s15, s14
 1641              	.LVL94:
 257:AudioProcessor.cpp ****     float delay_time_s = 0.01f + delay_time_val * 0.99f; // ADC 6
 1642              		.loc 3 257 49 view .LVU471
 1643 0010 184A     		ldr	r2, .L109+12
 1644              		.loc 3 257 11 view .LVU472
 1645 0012 9FED197A 		vldr.32	s14, .L109+16
 1646 0016 D2ED006A 		vldr.32	s13, [r2]
 1647              	.LBB280:
 1648              	.LBB278:
 1649              		.loc 5 66 23 view .LVU473
 1650 001a C3ED047A 		vstr.32	s15, [r3, #16]
 1651              	.LVL95:
ARM GAS  /var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccGMqppg.s 			page 49


 1652              		.loc 5 66 23 view .LVU474
 1653              	.LBE278:
 1654              	.LBE280:
 1655              		.loc 3 257 5 is_stmt 1 view .LVU475
 1656              		.loc 3 257 11 is_stmt 0 view .LVU476
 1657 001e DFED177A 		vldr.32	s15, .L109+20
 258:AudioProcessor.cpp ****     delay.SetDelayTime(delay_time_s);
 259:AudioProcessor.cpp ****     float lag_time_s = delay_lag_val * 0.2f; // ADC 7
 1658              		.loc 3 259 38 view .LVU477
 1659 0022 174A     		ldr	r2, .L109+24
 257:AudioProcessor.cpp ****     float delay_time_s = 0.01f + delay_time_val * 0.99f; // ADC 6
 1660              		.loc 3 257 11 view .LVU478
 1661 0024 E6EE877A 		vfma.f32	s15, s13, s14
 1662              	.LVL96:
 258:AudioProcessor.cpp ****     delay.SetDelayTime(delay_time_s);
 1663              		.loc 3 258 5 is_stmt 1 view .LVU479
 1664              	.LBB281:
 1665              	.LBI281:
  49:Effects/EchoDelay.h ****         {
 1666              		.loc 5 49 14 view .LVU480
 1667              	.LBE281:
 1668              	.LBB283:
 1669              	.LBB284:
  40:Effects/EchoDelay.h ****         }
 1670              		.loc 5 40 46 is_stmt 0 view .LVU481
 1671 0028 D3ED006A 		vldr.32	s13, [r3]
 1672              	.LBE284:
 1673              	.LBE283:
 1674              		.loc 3 259 11 view .LVU482
 1675 002c 92ED007A 		vldr.32	s14, [r2]
 1676              	.LBB292:
 1677              	.LBB282:
  51:Effects/EchoDelay.h ****             if (immediately) delay_time_current_ = time_s;
 1678              		.loc 5 51 32 view .LVU483
 1679 0030 C3ED027A 		vstr.32	s15, [r3, #8]
 1680              	.LVL97:
  51:Effects/EchoDelay.h ****             if (immediately) delay_time_current_ = time_s;
 1681              		.loc 5 51 32 view .LVU484
 1682              	.LBE282:
 1683              	.LBE292:
 1684              		.loc 3 259 5 is_stmt 1 view .LVU485
 1685              		.loc 3 259 11 is_stmt 0 view .LVU486
 1686 0034 DFED137A 		vldr.32	s15, .L109+28
 1687              	.LVL98:
 1688              		.loc 3 259 11 view .LVU487
 1689 0038 27EE277A 		vmul.f32	s14, s14, s15
 1690              	.LVL99:
 260:AudioProcessor.cpp ****     delay.SetLagTime(lag_time_s);
 1691              		.loc 3 260 5 is_stmt 1 view .LVU488
 1692              	.LBB293:
 1693              	.LBI283:
  38:Effects/EchoDelay.h ****         {
 1694              		.loc 5 38 14 view .LVU489
 1695              	.LBB291:
 1696              	.LBB285:
 1697              	.LBI285:
 1698              		.file 6 "Effects/DSPUtils.h"
ARM GAS  /var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccGMqppg.s 			page 50


   1:Effects/DSPUtils.h **** #pragma once
   2:Effects/DSPUtils.h **** #ifndef INFS_DSPUTILS_H
   3:Effects/DSPUtils.h **** #define INFS_DSPUTILS_H
   4:Effects/DSPUtils.h **** 
   5:Effects/DSPUtils.h **** #include <cmath>
   6:Effects/DSPUtils.h **** #include <Utility/dsp.h>
   7:Effects/DSPUtils.h **** #ifdef __arm__
   8:Effects/DSPUtils.h **** #include <arm_math.h>
   9:Effects/DSPUtils.h **** #endif
  10:Effects/DSPUtils.h **** 
  11:Effects/DSPUtils.h **** namespace infrasonic {
  12:Effects/DSPUtils.h **** 
  13:Effects/DSPUtils.h **** inline float dbfs2lin(float dbfs) {
  14:Effects/DSPUtils.h ****     return daisysp::pow10f(dbfs * 0.05f);
  15:Effects/DSPUtils.h **** }
  16:Effects/DSPUtils.h **** 
  17:Effects/DSPUtils.h **** inline float lin2dbfs(float lin) {
  18:Effects/DSPUtils.h ****     return daisysp::fastlog10f(lin) * 20.0f;
  19:Effects/DSPUtils.h **** }
  20:Effects/DSPUtils.h **** 
  21:Effects/DSPUtils.h **** // Coefficient for one pole smoothing filter based on Tau time constant for `time_s`
  22:Effects/DSPUtils.h **** inline float onepole_coef(float time_s, float sample_rate) {
 1699              		.loc 6 22 14 view .LVU490
 1700              	.LBB286:
  23:Effects/DSPUtils.h ****     if (time_s <= 0.0f || sample_rate <= 0.0f) { return 1.0f; }
 1701              		.loc 6 23 5 view .LVU491
 1702 003c F7EE007A 		vmov.f32	s15, #1.0e+0
 1703 0040 B5EEC07A 		vcmpe.f32	s14, #0
 1704 0044 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1705 0048 0AD9     		bls	.L106
 1706              		.loc 6 23 24 is_stmt 0 view .LVU492
 1707 004a F5EEC06A 		vcmpe.f32	s13, #0
 1708 004e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1709 0052 05D9     		bls	.L106
  24:Effects/DSPUtils.h ****     return daisysp::fmin(1.0f / (time_s * sample_rate), 1.0f);
 1710              		.loc 6 24 5 is_stmt 1 view .LVU493
 1711              	.LVL100:
 1712              	.LBB287:
 1713              	.LBI287:
 1714              		.file 7 "lib/DaisySP/Source/Utility/dsp.h"
   1:lib/DaisySP/Source/Utility/dsp.h **** /*
   2:lib/DaisySP/Source/Utility/dsp.h **** Copyright (c) 2020 Electrosmith, Corp, Emilie Gillet
   3:lib/DaisySP/Source/Utility/dsp.h **** 
   4:lib/DaisySP/Source/Utility/dsp.h **** Use of this source code is governed by an MIT-style
   5:lib/DaisySP/Source/Utility/dsp.h **** license that can be found in the LICENSE file or at
   6:lib/DaisySP/Source/Utility/dsp.h **** https://opensource.org/licenses/MIT.
   7:lib/DaisySP/Source/Utility/dsp.h **** */
   8:lib/DaisySP/Source/Utility/dsp.h **** 
   9:lib/DaisySP/Source/Utility/dsp.h **** /** Helpful defines, functions, and other utilities for use in/with daisysp modules.
  10:lib/DaisySP/Source/Utility/dsp.h **** */
  11:lib/DaisySP/Source/Utility/dsp.h **** #pragma once
  12:lib/DaisySP/Source/Utility/dsp.h **** #ifndef DSY_CORE_DSP
  13:lib/DaisySP/Source/Utility/dsp.h **** #define DSY_CORE_DSP
  14:lib/DaisySP/Source/Utility/dsp.h **** #include <cassert>
  15:lib/DaisySP/Source/Utility/dsp.h **** #include <cstdint>
  16:lib/DaisySP/Source/Utility/dsp.h **** #include <random>
  17:lib/DaisySP/Source/Utility/dsp.h **** #include <cmath>
ARM GAS  /var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccGMqppg.s 			page 51


  18:lib/DaisySP/Source/Utility/dsp.h **** 
  19:lib/DaisySP/Source/Utility/dsp.h **** /** PIs
  20:lib/DaisySP/Source/Utility/dsp.h **** */
  21:lib/DaisySP/Source/Utility/dsp.h **** #define PI_F 3.1415927410125732421875f
  22:lib/DaisySP/Source/Utility/dsp.h **** #define TWOPI_F (2.0f * PI_F)
  23:lib/DaisySP/Source/Utility/dsp.h **** #define HALFPI_F (PI_F * 0.5f)
  24:lib/DaisySP/Source/Utility/dsp.h **** #define DSY_MIN(in, mn) (in < mn ? in : mn)
  25:lib/DaisySP/Source/Utility/dsp.h **** #define DSY_MAX(in, mx) (in > mx ? in : mx)
  26:lib/DaisySP/Source/Utility/dsp.h **** #define DSY_CLAMP(in, mn, mx) (DSY_MIN(DSY_MAX(in, mn), mx))
  27:lib/DaisySP/Source/Utility/dsp.h **** #define DSY_COUNTOF(_arr) (sizeof(_arr) / sizeof(_arr[0]))
  28:lib/DaisySP/Source/Utility/dsp.h **** 
  29:lib/DaisySP/Source/Utility/dsp.h **** namespace daisysp
  30:lib/DaisySP/Source/Utility/dsp.h **** {
  31:lib/DaisySP/Source/Utility/dsp.h **** //Avoids division for random floats. e.g. rand() * kRandFrac
  32:lib/DaisySP/Source/Utility/dsp.h **** static constexpr float kRandFrac = 1.f / (float)RAND_MAX;
  33:lib/DaisySP/Source/Utility/dsp.h **** 
  34:lib/DaisySP/Source/Utility/dsp.h **** //Convert from semitones to other units. e.g. 2 ^ (kOneTwelfth * x)
  35:lib/DaisySP/Source/Utility/dsp.h **** static constexpr float kOneTwelfth = 1.f / 12.f;
  36:lib/DaisySP/Source/Utility/dsp.h **** 
  37:lib/DaisySP/Source/Utility/dsp.h **** /** efficient floating point min/max
  38:lib/DaisySP/Source/Utility/dsp.h **** c/o stephen mccaul
  39:lib/DaisySP/Source/Utility/dsp.h **** */
  40:lib/DaisySP/Source/Utility/dsp.h **** inline float fmax(float a, float b)
  41:lib/DaisySP/Source/Utility/dsp.h **** {
  42:lib/DaisySP/Source/Utility/dsp.h ****     float r;
  43:lib/DaisySP/Source/Utility/dsp.h **** #ifdef __arm__
  44:lib/DaisySP/Source/Utility/dsp.h ****     asm("vmaxnm.f32 %[d], %[n], %[m]" : [d] "=t"(r) : [n] "t"(a), [m] "t"(b) :);
  45:lib/DaisySP/Source/Utility/dsp.h **** #else
  46:lib/DaisySP/Source/Utility/dsp.h ****     r = (a > b) ? a : b;
  47:lib/DaisySP/Source/Utility/dsp.h **** #endif // __arm__
  48:lib/DaisySP/Source/Utility/dsp.h ****     return r;
  49:lib/DaisySP/Source/Utility/dsp.h **** }
  50:lib/DaisySP/Source/Utility/dsp.h **** 
  51:lib/DaisySP/Source/Utility/dsp.h **** inline float fmin(float a, float b)
 1715              		.loc 7 51 14 view .LVU494
 1716              	.LBB288:
  52:lib/DaisySP/Source/Utility/dsp.h **** {
  53:lib/DaisySP/Source/Utility/dsp.h ****     float r;
 1717              		.loc 7 53 5 view .LVU495
  54:lib/DaisySP/Source/Utility/dsp.h **** #ifdef __arm__
  55:lib/DaisySP/Source/Utility/dsp.h ****     asm("vminnm.f32 %[d], %[n], %[m]" : [d] "=t"(r) : [n] "t"(a), [m] "t"(b) :);
 1718              		.loc 7 55 5 view .LVU496
 1719              	.LBE288:
 1720              	.LBE287:
 1721              		.loc 6 24 41 is_stmt 0 view .LVU497
 1722 0054 27EE267A 		vmul.f32	s14, s14, s13
 1723              	.LVL101:
 1724              		.loc 6 24 25 view .LVU498
 1725 0058 C7EE876A 		vdiv.f32	s13, s15, s14
 1726              	.LVL102:
 1727              	.LBB290:
 1728              	.LBB289:
 1729              		.loc 7 55 5 view .LVU499
 1730              		.syntax unified
 1731              	@ 55 "lib/DaisySP/Source/Utility/dsp.h" 1
 1732 005c C6FEE77A 		vminnm.f32 s15, s13, s15
 1733              	@ 0 "" 2
ARM GAS  /var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccGMqppg.s 			page 52


 1734              	.LVL103:
  56:lib/DaisySP/Source/Utility/dsp.h **** #else
  57:lib/DaisySP/Source/Utility/dsp.h ****     r = (a < b) ? a : b;
  58:lib/DaisySP/Source/Utility/dsp.h **** #endif // __arm__
  59:lib/DaisySP/Source/Utility/dsp.h ****     return r;
 1735              		.loc 7 59 5 is_stmt 1 view .LVU500
 1736              		.thumb
 1737              		.syntax unified
 1738              	.L106:
 1739              		.loc 7 59 5 is_stmt 0 view .LVU501
 1740              	.LBE289:
 1741              	.LBE290:
 1742              	.LBE286:
 1743              	.LBE285:
  40:Effects/EchoDelay.h ****         }
 1744              		.loc 5 40 32 view .LVU502
 1745 0060 C3ED037A 		vstr.32	s15, [r3, #12]
 1746              	.LVL104:
  40:Effects/EchoDelay.h ****         }
 1747              		.loc 5 40 32 view .LVU503
 1748              	.LBE291:
 1749              	.LBE293:
 261:AudioProcessor.cpp **** }
 1750              		.loc 3 261 1 view .LVU504
 1751 0064 7047     		bx	lr
 1752              	.L110:
 1753 0066 00BF     		.align	2
 1754              	.L109:
 1755 0068 00000000 		.word	.LANCHOR7
 1756 006c 48E17A3F 		.word	1065017672
 1757 0070 00000000 		.word	delay
 1758 0074 00000000 		.word	.LANCHOR8
 1759 0078 A4707D3F 		.word	1065185444
 1760 007c 0AD7233C 		.word	1008981770
 1761 0080 00000000 		.word	.LANCHOR9
 1762 0084 CDCC4C3E 		.word	1045220557
 1763              		.cfi_endproc
 1764              	.LFE5065:
 1766              		.section	.text._Z22PrepareVoiceParametersibi,"ax",%progbits
 1767              		.align	1
 1768              		.global	_Z22PrepareVoiceParametersibi
 1769              		.syntax unified
 1770              		.thumb
 1771              		.thumb_func
 1773              	_Z22PrepareVoiceParametersibi:
 1774              	.LVL105:
 1775              	.LFB5066:
 262:AudioProcessor.cpp **** 
 263:AudioProcessor.cpp **** void PrepareVoiceParameters(int engineIndex, bool poly_mode, int max_voice_idx) {
 1776              		.loc 3 263 81 is_stmt 1 view -0
 1777              		.cfi_startproc
 1778              		@ args = 0, pretend = 0, frame = 0
 1779              		@ frame_needed = 0, uses_anonymous_args = 0
 264:AudioProcessor.cpp ****     
 265:AudioProcessor.cpp ****     float global_pitch_offset = pitch_val * 24.f - 12.f;     // ADC 0
 1780              		.loc 3 265 5 view .LVU506
 1781              		.loc 3 265 43 is_stmt 0 view .LVU507
ARM GAS  /var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccGMqppg.s 			page 53


 1782 0000 3D4B     		ldr	r3, .L119
 1783              		.loc 3 265 11 view .LVU508
 1784 0002 F3EE087A 		vmov.f32	s15, #2.4e+1
 263:AudioProcessor.cpp ****     
 1785              		.loc 3 263 81 view .LVU509
 1786 0006 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 1787              		.cfi_def_cfa_offset 36
 1788              		.cfi_offset 4, -36
 1789              		.cfi_offset 5, -32
 1790              		.cfi_offset 6, -28
 1791              		.cfi_offset 7, -24
 1792              		.cfi_offset 8, -20
 1793              		.cfi_offset 9, -16
 1794              		.cfi_offset 10, -12
 1795              		.cfi_offset 11, -8
 1796              		.cfi_offset 14, -4
 1797 000a 2DED048B 		vpush.64	{d8, d9}
 1798              		.cfi_def_cfa_offset 52
 1799              		.cfi_offset 80, -52
 1800              		.cfi_offset 81, -48
 1801              		.cfi_offset 82, -44
 1802              		.cfi_offset 83, -40
 1803              		.loc 3 265 11 view .LVU510
 1804 000e BAEE088A 		vmov.f32	s16, #-1.2e+1
 1805 0012 93ED007A 		vldr.32	s14, [r3]
 266:AudioProcessor.cpp ****     float current_global_harmonics = harm_knob_val;          // ADC 1
 1806              		.loc 3 266 11 view .LVU511
 1807 0016 394B     		ldr	r3, .L119+4
 263:AudioProcessor.cpp ****     
 1808              		.loc 3 263 81 view .LVU512
 1809 0018 83B0     		sub	sp, sp, #12
 1810              		.cfi_def_cfa_offset 64
 263:AudioProcessor.cpp ****     
 1811              		.loc 3 263 81 view .LVU513
 1812 001a 8146     		mov	r9, r0
 1813 001c 8846     		mov	r8, r1
 1814              		.loc 3 266 11 view .LVU514
 1815 001e D3F800B0 		ldr	fp, [r3]	@ float
 265:AudioProcessor.cpp ****     float current_global_harmonics = harm_knob_val;          // ADC 1
 1816              		.loc 3 265 11 view .LVU515
 1817 0022 A7EE278A 		vfma.f32	s16, s14, s15
 1818              	.LVL106:
 1819              		.loc 3 266 5 is_stmt 1 view .LVU516
 267:AudioProcessor.cpp ****     float current_global_decay = decay_knob_val;            // ADC 3
 1820              		.loc 3 267 5 view .LVU517
 1821              		.loc 3 267 11 is_stmt 0 view .LVU518
 1822 0026 364B     		ldr	r3, .L119+8
 263:AudioProcessor.cpp ****     
 1823              		.loc 3 263 81 view .LVU519
 1824 0028 1646     		mov	r6, r2
 1825 002a 364C     		ldr	r4, .L119+12
 1826              	.LBB294:
 268:AudioProcessor.cpp ****     float current_global_morph = morph_knob_val;            // ADC 4
 269:AudioProcessor.cpp **** 
 270:AudioProcessor.cpp ****     // --- Process Effective Voices --- 
 271:AudioProcessor.cpp ****     for (int v = 0; v <= max_voice_idx; ++v) { 
 1827              		.loc 3 271 14 view .LVU520
ARM GAS  /var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccGMqppg.s 			page 54


 1828 002c 0027     		movs	r7, #0
 1829              	.LBE294:
 267:AudioProcessor.cpp ****     float current_global_morph = morph_knob_val;            // ADC 4
 1830              		.loc 3 267 11 view .LVU521
 1831 002e D3ED008A 		vldr.32	s17, [r3]
 1832              	.LVL107:
 268:AudioProcessor.cpp ****     float current_global_morph = morph_knob_val;            // ADC 4
 1833              		.loc 3 268 5 is_stmt 1 view .LVU522
 268:AudioProcessor.cpp ****     float current_global_morph = morph_knob_val;            // ADC 4
 1834              		.loc 3 268 11 is_stmt 0 view .LVU523
 1835 0032 354B     		ldr	r3, .L119+16
 1836 0034 354D     		ldr	r5, .L119+20
 1837 0036 93ED009A 		vldr.32	s18, [r3]
 1838              	.LVL108:
 1839              		.loc 3 271 5 is_stmt 1 view .LVU524
 1840              		.loc 3 271 5 is_stmt 0 view .LVU525
 1841 003a DFF8E4A0 		ldr	r10, .L119+40
 1842              	.LVL109:
 1843              	.L115:
 1844              	.LBB295:
 1845              		.loc 3 271 23 is_stmt 1 discriminator 1 view .LVU526
 1846 003e B742     		cmp	r7, r6
 1847 0040 4ADC     		bgt	.L112
 272:AudioProcessor.cpp ****         // Update Patch using dedicated knob values
 273:AudioProcessor.cpp ****         patches[v].note = voice_note[v] + global_pitch_offset;
 1848              		.loc 3 273 9 view .LVU527
 1849              		.loc 3 273 39 is_stmt 0 view .LVU528
 1850 0042 FAEC017A 		vldmia.32	r10!, {s15}
 274:AudioProcessor.cpp ****         patches[v].engine = engineIndex;                      // ADC 2
 275:AudioProcessor.cpp ****         patches[v].harmonics = current_global_harmonics;    // ADC 1
 276:AudioProcessor.cpp ****         patches[v].timbre = 0.5f; 
 1851              		.loc 3 276 27 view .LVU529
 1852 0046 4FF07C53 		mov	r3, #1056964608
 277:AudioProcessor.cpp ****         patches[v].morph = current_global_morph;            // ADC 4
 278:AudioProcessor.cpp ****         patches[v].lpg_colour = 0.0f;
 279:AudioProcessor.cpp ****         patches[v].decay = current_global_decay;            // ADC 3
 280:AudioProcessor.cpp ****         
 281:AudioProcessor.cpp ****         patches[v].frequency_modulation_amount = 0.f;
 282:AudioProcessor.cpp ****         patches[v].timbre_modulation_amount = 0.f;
 283:AudioProcessor.cpp ****         patches[v].morph_modulation_amount = 0.f;
 284:AudioProcessor.cpp **** 
 285:AudioProcessor.cpp ****         // Update Modulations & Handle Trigger 
 286:AudioProcessor.cpp ****         modulations[v].engine = 0; 
 287:AudioProcessor.cpp ****         modulations[v].note = 0.0f; 
 288:AudioProcessor.cpp ****         modulations[v].frequency = 0.0f;
 289:AudioProcessor.cpp ****         modulations[v].harmonics = 0.0f; 
 290:AudioProcessor.cpp ****         modulations[v].timbre = 0.0f;
 291:AudioProcessor.cpp ****         modulations[v].morph = 0.0f; 
 292:AudioProcessor.cpp ****         modulations[v].level = 1.0f; 
 1853              		.loc 3 292 30 view .LVU530
 1854 004a B7EE007A 		vmov.f32	s14, #1.0e+0
 274:AudioProcessor.cpp ****         patches[v].engine = engineIndex;                      // ADC 2
 1855              		.loc 3 274 27 view .LVU531
 1856 004e C4F81C90 		str	r9, [r4, #28]
 273:AudioProcessor.cpp ****         patches[v].engine = engineIndex;                      // ADC 2
 1857              		.loc 3 273 41 view .LVU532
 1858 0052 77EE887A 		vadd.f32	s15, s15, s16
ARM GAS  /var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccGMqppg.s 			page 55


 276:AudioProcessor.cpp ****         patches[v].morph = current_global_morph;            // ADC 4
 1859              		.loc 3 276 27 view .LVU533
 1860 0056 A360     		str	r3, [r4, #8]	@ float
 293:AudioProcessor.cpp ****         
 294:AudioProcessor.cpp ****         // MODIFIED: Handle all engines consistently with trigger_patched
 295:AudioProcessor.cpp ****         // This ensures envelopes are properly applied
 296:AudioProcessor.cpp ****         modulations[v].trigger_patched = !poly_mode;  // Only patch trigger for non-poly engines
 1861              		.loc 3 296 42 view .LVU534
 1862 0058 88F00103 		eor	r3, r8, #1
 275:AudioProcessor.cpp ****         patches[v].timbre = 0.5f; 
 1863              		.loc 3 275 30 view .LVU535
 1864 005c C4F804B0 		str	fp, [r4, #4]	@ float
 277:AudioProcessor.cpp ****         patches[v].lpg_colour = 0.0f;
 1865              		.loc 3 277 26 view .LVU536
 1866 0060 84ED039A 		vstr.32	s18, [r4, #12]
 273:AudioProcessor.cpp ****         patches[v].engine = engineIndex;                      // ADC 2
 1867              		.loc 3 273 25 view .LVU537
 1868 0064 C4ED007A 		vstr.32	s15, [r4]
 274:AudioProcessor.cpp ****         patches[v].harmonics = current_global_harmonics;    // ADC 1
 1869              		.loc 3 274 9 is_stmt 1 view .LVU538
 275:AudioProcessor.cpp ****         patches[v].timbre = 0.5f; 
 1870              		.loc 3 275 9 view .LVU539
 276:AudioProcessor.cpp ****         patches[v].morph = current_global_morph;            // ADC 4
 1871              		.loc 3 276 9 view .LVU540
 277:AudioProcessor.cpp ****         patches[v].lpg_colour = 0.0f;
 1872              		.loc 3 277 9 view .LVU541
 278:AudioProcessor.cpp ****         patches[v].decay = current_global_decay;            // ADC 3
 1873              		.loc 3 278 9 view .LVU542
 278:AudioProcessor.cpp ****         patches[v].decay = current_global_decay;            // ADC 3
 1874              		.loc 3 278 31 is_stmt 0 view .LVU543
 1875 0068 DFED297A 		vldr.32	s15, .L119+24
 279:AudioProcessor.cpp ****         
 1876              		.loc 3 279 26 view .LVU544
 1877 006c C4ED088A 		vstr.32	s17, [r4, #32]
 278:AudioProcessor.cpp ****         patches[v].decay = current_global_decay;            // ADC 3
 1878              		.loc 3 278 31 view .LVU545
 1879 0070 C4ED097A 		vstr.32	s15, [r4, #36]
 279:AudioProcessor.cpp ****         
 1880              		.loc 3 279 9 is_stmt 1 view .LVU546
 281:AudioProcessor.cpp ****         patches[v].timbre_modulation_amount = 0.f;
 1881              		.loc 3 281 9 view .LVU547
 281:AudioProcessor.cpp ****         patches[v].timbre_modulation_amount = 0.f;
 1882              		.loc 3 281 48 is_stmt 0 view .LVU548
 1883 0074 C4ED047A 		vstr.32	s15, [r4, #16]
 282:AudioProcessor.cpp ****         patches[v].morph_modulation_amount = 0.f;
 1884              		.loc 3 282 9 is_stmt 1 view .LVU549
 282:AudioProcessor.cpp ****         patches[v].morph_modulation_amount = 0.f;
 1885              		.loc 3 282 45 is_stmt 0 view .LVU550
 1886 0078 C4ED057A 		vstr.32	s15, [r4, #20]
 283:AudioProcessor.cpp **** 
 1887              		.loc 3 283 9 is_stmt 1 view .LVU551
 283:AudioProcessor.cpp **** 
 1888              		.loc 3 283 44 is_stmt 0 view .LVU552
 1889 007c C4ED067A 		vstr.32	s15, [r4, #24]
 286:AudioProcessor.cpp ****         modulations[v].note = 0.0f; 
 1890              		.loc 3 286 9 is_stmt 1 view .LVU553
 286:AudioProcessor.cpp ****         modulations[v].note = 0.0f; 
ARM GAS  /var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccGMqppg.s 			page 56


 1891              		.loc 3 286 31 is_stmt 0 view .LVU554
 1892 0080 C5ED007A 		vstr.32	s15, [r5]
 287:AudioProcessor.cpp ****         modulations[v].frequency = 0.0f;
 1893              		.loc 3 287 9 is_stmt 1 view .LVU555
 287:AudioProcessor.cpp ****         modulations[v].frequency = 0.0f;
 1894              		.loc 3 287 29 is_stmt 0 view .LVU556
 1895 0084 C5ED017A 		vstr.32	s15, [r5, #4]
 288:AudioProcessor.cpp ****         modulations[v].harmonics = 0.0f; 
 1896              		.loc 3 288 9 is_stmt 1 view .LVU557
 288:AudioProcessor.cpp ****         modulations[v].harmonics = 0.0f; 
 1897              		.loc 3 288 34 is_stmt 0 view .LVU558
 1898 0088 C5ED027A 		vstr.32	s15, [r5, #8]
 289:AudioProcessor.cpp ****         modulations[v].timbre = 0.0f;
 1899              		.loc 3 289 9 is_stmt 1 view .LVU559
 289:AudioProcessor.cpp ****         modulations[v].timbre = 0.0f;
 1900              		.loc 3 289 34 is_stmt 0 view .LVU560
 1901 008c C5ED037A 		vstr.32	s15, [r5, #12]
 290:AudioProcessor.cpp ****         modulations[v].morph = 0.0f; 
 1902              		.loc 3 290 9 is_stmt 1 view .LVU561
 290:AudioProcessor.cpp ****         modulations[v].morph = 0.0f; 
 1903              		.loc 3 290 31 is_stmt 0 view .LVU562
 1904 0090 C5ED047A 		vstr.32	s15, [r5, #16]
 291:AudioProcessor.cpp ****         modulations[v].level = 1.0f; 
 1905              		.loc 3 291 9 is_stmt 1 view .LVU563
 291:AudioProcessor.cpp ****         modulations[v].level = 1.0f; 
 1906              		.loc 3 291 30 is_stmt 0 view .LVU564
 1907 0094 C5ED057A 		vstr.32	s15, [r5, #20]
 292:AudioProcessor.cpp ****         
 1908              		.loc 3 292 9 is_stmt 1 view .LVU565
 292:AudioProcessor.cpp ****         
 1909              		.loc 3 292 30 is_stmt 0 view .LVU566
 1910 0098 85ED077A 		vstr.32	s14, [r5, #28]
 1911              		.loc 3 296 9 is_stmt 1 view .LVU567
 1912              		.loc 3 296 40 is_stmt 0 view .LVU568
 1913 009c 85F82330 		strb	r3, [r5, #35]
 297:AudioProcessor.cpp ****         
 298:AudioProcessor.cpp ****         if (poly_mode) {
 1914              		.loc 3 298 9 is_stmt 1 view .LVU569
 1915 00a0 B8F1000F 		cmp	r8, #0
 1916 00a4 06D1     		bne	.L113
 299:AudioProcessor.cpp ****             // For poly engines, we'll handle triggering through voice envelopes
 300:AudioProcessor.cpp ****             // Only set trigger on initial note-on
 301:AudioProcessor.cpp ****             // Don't modify value - already set in HandleTouchInput
 302:AudioProcessor.cpp ****         } else {
 303:AudioProcessor.cpp ****             // For non-poly engines, use direct trigger patching
 304:AudioProcessor.cpp ****             modulations[v].trigger = voice_active[v] ? 1.0f : 0.0f;
 1917              		.loc 3 304 13 view .LVU570
 1918              		.loc 3 304 52 is_stmt 0 view .LVU571
 1919 00a6 1B4B     		ldr	r3, .L119+28
 1920              		.loc 3 304 54 view .LVU572
 1921 00a8 FB5C     		ldrb	r3, [r7, r3]	@ zero_extendqisi2
 1922 00aa 002B     		cmp	r3, #0
 1923 00ac 47FE877A 		vseleq.f32	s15, s15, s14
 1924              		.loc 3 304 36 view .LVU573
 1925 00b0 C5ED067A 		vstr.32	s15, [r5, #24]
 1926              	.L113:
 305:AudioProcessor.cpp ****         }
ARM GAS  /var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccGMqppg.s 			page 57


 306:AudioProcessor.cpp ****         
 307:AudioProcessor.cpp ****         voices[v].Render(patches[v], modulations[v], output_buffers[v], BLOCK_SIZE);
 1927              		.loc 3 307 9 is_stmt 1 discriminator 2 view .LVU574
 1928              		.loc 3 307 25 is_stmt 0 discriminator 2 view .LVU575
 1929 00b4 1023     		movs	r3, #16
 1930 00b6 4FF45B6C 		mov	ip, #3504
 1931 00ba 1748     		ldr	r0, .L119+32
 1932 00bc 2A46     		mov	r2, r5
 1933 00be 0093     		str	r3, [sp]
 1934 00c0 2146     		mov	r1, r4
 1935 00c2 164B     		ldr	r3, .L119+36
 1936 00c4 0CFB0700 		mla	r0, ip, r7, r0
 1937 00c8 2834     		adds	r4, r4, #40
 1938 00ca 2835     		adds	r5, r5, #40
 1939 00cc 03EB8713 		add	r3, r3, r7, lsl #6
 271:AudioProcessor.cpp ****         // Update Patch using dedicated knob values
 1940              		.loc 3 271 5 discriminator 2 view .LVU576
 1941 00d0 0137     		adds	r7, r7, #1
 1942              	.LVL110:
 1943              		.loc 3 307 25 discriminator 2 view .LVU577
 1944 00d2 FFF7FEFF 		bl	_ZN6plaits5Voice6RenderERKNS_5PatchERKNS_11ModulationsEPNS0_5FrameEj
 1945              	.LVL111:
 271:AudioProcessor.cpp ****         // Update Patch using dedicated knob values
 1946              		.loc 3 271 5 is_stmt 1 discriminator 2 view .LVU578
 271:AudioProcessor.cpp ****         // Update Patch using dedicated knob values
 1947              		.loc 3 271 5 is_stmt 0 discriminator 2 view .LVU579
 1948 00d6 B2E7     		b	.L115
 1949              	.LVL112:
 1950              	.L112:
 271:AudioProcessor.cpp ****         // Update Patch using dedicated knob values
 1951              		.loc 3 271 5 discriminator 2 view .LVU580
 1952              	.LBE295:
 308:AudioProcessor.cpp ****     }
 309:AudioProcessor.cpp ****     
 310:AudioProcessor.cpp ****     // Silence unused voices (when switching from poly to mono)
 311:AudioProcessor.cpp ****     int effective_voices = max_voice_idx + 1; // Calculate from max_voice_idx
 1953              		.loc 3 311 5 is_stmt 1 view .LVU581
 1954              		.loc 3 311 9 is_stmt 0 view .LVU582
 1955 00d8 0136     		adds	r6, r6, #1
 1956              	.LVL113:
 312:AudioProcessor.cpp ****     for (int v = effective_voices; v < NUM_VOICES; ++v) {
 1957              		.loc 3 312 5 is_stmt 1 view .LVU583
 1958              	.LBB296:
 1959              		.loc 3 312 38 view .LVU584
 1960 00da 042E     		cmp	r6, #4
 1961 00dc 07D0     		beq	.L111
 313:AudioProcessor.cpp ****          memset(output_buffers[v], 0, sizeof(plaits::Voice::Frame) * BLOCK_SIZE);
 1962              		.loc 3 313 10 discriminator 2 view .LVU585
 1963              		.loc 3 313 16 is_stmt 0 discriminator 2 view .LVU586
 1964 00de 0F48     		ldr	r0, .L119+36
 1965 00e0 4022     		movs	r2, #64
 1966 00e2 0021     		movs	r1, #0
 1967 00e4 00EB8610 		add	r0, r0, r6, lsl #6
 1968 00e8 FFF7FEFF 		bl	memset
 1969              	.LVL114:
 312:AudioProcessor.cpp ****     for (int v = effective_voices; v < NUM_VOICES; ++v) {
 1970              		.loc 3 312 5 is_stmt 1 discriminator 2 view .LVU587
ARM GAS  /var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccGMqppg.s 			page 58


 1971 00ec F4E7     		b	.L112
 1972              	.L111:
 1973              	.LBE296:
 314:AudioProcessor.cpp ****          // Keep voice_active[v] = false and modulations[v].trigger = 0.0f
 315:AudioProcessor.cpp ****     }
 316:AudioProcessor.cpp **** }
 1974              		.loc 3 316 1 is_stmt 0 view .LVU588
 1975 00ee 03B0     		add	sp, sp, #12
 1976              		.cfi_def_cfa_offset 52
 1977              		@ sp needed
 1978 00f0 BDEC048B 		vldm	sp!, {d8-d9}
 1979              		.cfi_restore 82
 1980              		.cfi_restore 83
 1981              		.cfi_restore 80
 1982              		.cfi_restore 81
 1983              		.cfi_def_cfa_offset 36
 1984              	.LVL115:
 1985              		.loc 3 316 1 view .LVU589
 1986 00f4 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 1987              	.LVL116:
 1988              	.L120:
 1989              		.loc 3 316 1 view .LVU590
 1990              		.align	2
 1991              	.L119:
 1992 00f8 00000000 		.word	.LANCHOR2
 1993 00fc 00000000 		.word	.LANCHOR3
 1994 0100 00000000 		.word	.LANCHOR5
 1995 0104 00000000 		.word	patches
 1996 0108 00000000 		.word	.LANCHOR6
 1997 010c 00000000 		.word	modulations
 1998 0110 00000000 		.word	0
 1999 0114 00000000 		.word	voice_active
 2000 0118 00000000 		.word	voices
 2001 011c 00000000 		.word	output_buffers
 2002 0120 00000000 		.word	voice_note
 2003              		.cfi_endproc
 2004              	.LFE5066:
 2006              		.section	.text._Z21ProcessVoiceEnvelopesb,"ax",%progbits
 2007              		.align	1
 2008              		.global	_Z21ProcessVoiceEnvelopesb
 2009              		.syntax unified
 2010              		.thumb
 2011              		.thumb_func
 2013              	_Z21ProcessVoiceEnvelopesb:
 2014              	.LVL117:
 2015              	.LFB5067:
 317:AudioProcessor.cpp **** 
 318:AudioProcessor.cpp **** void ProcessVoiceEnvelopes(bool poly_mode) {
 2016              		.loc 3 318 44 is_stmt 1 view -0
 2017              		.cfi_startproc
 2018              		@ args = 0, pretend = 0, frame = 0
 2019              		@ frame_needed = 0, uses_anonymous_args = 0
 319:AudioProcessor.cpp ****     memset(mix_buffer_out, 0, sizeof(mix_buffer_out));
 2020              		.loc 3 319 5 view .LVU592
 318:AudioProcessor.cpp ****     memset(mix_buffer_out, 0, sizeof(mix_buffer_out));
 2021              		.loc 3 318 44 is_stmt 0 view .LVU593
 2022 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
ARM GAS  /var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccGMqppg.s 			page 59


 2023              		.cfi_def_cfa_offset 24
 2024              		.cfi_offset 3, -24
 2025              		.cfi_offset 4, -20
 2026              		.cfi_offset 5, -16
 2027              		.cfi_offset 6, -12
 2028              		.cfi_offset 7, -8
 2029              		.cfi_offset 14, -4
 2030              		.loc 3 319 11 view .LVU594
 2031 0002 4022     		movs	r2, #64
 318:AudioProcessor.cpp ****     memset(mix_buffer_out, 0, sizeof(mix_buffer_out));
 2032              		.loc 3 318 44 view .LVU595
 2033 0004 0446     		mov	r4, r0
 2034              		.loc 3 319 11 view .LVU596
 2035 0006 0021     		movs	r1, #0
 2036 0008 2F48     		ldr	r0, .L134
 2037              	.LVL118:
 2038              		.loc 3 319 11 view .LVU597
 2039 000a 304E     		ldr	r6, .L134+4
 2040              	.LBB297:
 320:AudioProcessor.cpp ****     memset(mix_buffer_aux, 0, sizeof(mix_buffer_aux));
 321:AudioProcessor.cpp ****     
 322:AudioProcessor.cpp ****     // Apply the same punchier attack response
 323:AudioProcessor.cpp ****     float attack_raw = env_attack_val;
 324:AudioProcessor.cpp ****     float attack_value;
 325:AudioProcessor.cpp ****     if (attack_raw < 0.2f) {
 326:AudioProcessor.cpp ****         // More exaggerated curve for very short attacks (extra punchy)
 327:AudioProcessor.cpp ****         attack_value = attack_raw * (attack_raw * 0.5f);
 328:AudioProcessor.cpp ****     } else {
 329:AudioProcessor.cpp ****         // Regular cubic response for longer attacks
 330:AudioProcessor.cpp ****         attack_value = attack_raw * attack_raw * attack_raw;
 331:AudioProcessor.cpp ****     }
 332:AudioProcessor.cpp ****     
 333:AudioProcessor.cpp ****     // Normal cubic curve for release
 334:AudioProcessor.cpp ****     float release_value = env_release_val * env_release_val * env_release_val;
 335:AudioProcessor.cpp ****     
 336:AudioProcessor.cpp ****     // Determine how many voices to process based on mode
 337:AudioProcessor.cpp ****     int voices_to_process = poly_mode ? NUM_VOICES : 1;
 338:AudioProcessor.cpp ****     
 339:AudioProcessor.cpp ****     for (int v = 0; v < voices_to_process; ++v) {
 2041              		.loc 3 339 14 view .LVU598
 2042 000c 0025     		movs	r5, #0
 2043              	.LBE297:
 318:AudioProcessor.cpp ****     memset(mix_buffer_out, 0, sizeof(mix_buffer_out));
 2044              		.loc 3 318 44 view .LVU599
 2045 000e 2DED028B 		vpush.64	{d8}
 2046              		.cfi_def_cfa_offset 32
 2047              		.cfi_offset 80, -32
 2048              		.cfi_offset 81, -28
 319:AudioProcessor.cpp ****     memset(mix_buffer_aux, 0, sizeof(mix_buffer_aux));
 2049              		.loc 3 319 11 view .LVU600
 2050 0012 FFF7FEFF 		bl	memset
 2051              	.LVL119:
 320:AudioProcessor.cpp ****     memset(mix_buffer_aux, 0, sizeof(mix_buffer_aux));
 2052              		.loc 3 320 5 is_stmt 1 view .LVU601
 320:AudioProcessor.cpp ****     memset(mix_buffer_aux, 0, sizeof(mix_buffer_aux));
 2053              		.loc 3 320 11 is_stmt 0 view .LVU602
 2054 0016 4022     		movs	r2, #64
ARM GAS  /var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccGMqppg.s 			page 60


 2055 0018 0021     		movs	r1, #0
 2056 001a 2D48     		ldr	r0, .L134+8
 2057 001c FFF7FEFF 		bl	memset
 2058              	.LVL120:
 323:AudioProcessor.cpp ****     float attack_value;
 2059              		.loc 3 323 5 is_stmt 1 view .LVU603
 323:AudioProcessor.cpp ****     float attack_value;
 2060              		.loc 3 323 11 is_stmt 0 view .LVU604
 2061 0020 2C4B     		ldr	r3, .L134+12
 325:AudioProcessor.cpp ****         // More exaggerated curve for very short attacks (extra punchy)
 2062              		.loc 3 325 5 view .LVU605
 2063 0022 DFED2D7A 		vldr.32	s15, .L134+16
 323:AudioProcessor.cpp ****     float attack_value;
 2064              		.loc 3 323 11 view .LVU606
 2065 0026 93ED000A 		vldr.32	s0, [r3]
 2066              	.LVL121:
 324:AudioProcessor.cpp ****     if (attack_raw < 0.2f) {
 2067              		.loc 3 324 5 is_stmt 1 view .LVU607
 325:AudioProcessor.cpp ****         // More exaggerated curve for very short attacks (extra punchy)
 2068              		.loc 3 325 5 view .LVU608
 334:AudioProcessor.cpp ****     
 2069              		.loc 3 334 43 is_stmt 0 view .LVU609
 2070 002a 2C4B     		ldr	r3, .L134+20
 325:AudioProcessor.cpp ****         // More exaggerated curve for very short attacks (extra punchy)
 2071              		.loc 3 325 5 view .LVU610
 2072 002c B4EEE70A 		vcmpe.f32	s0, s15
 334:AudioProcessor.cpp ****     
 2073              		.loc 3 334 43 view .LVU611
 2074 0030 D3ED007A 		vldr.32	s15, [r3]
 325:AudioProcessor.cpp ****         // More exaggerated curve for very short attacks (extra punchy)
 2075              		.loc 3 325 5 view .LVU612
 2076 0034 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 327:AudioProcessor.cpp ****     } else {
 2077              		.loc 3 327 9 is_stmt 1 view .LVU613
 334:AudioProcessor.cpp ****     
 2078              		.loc 3 334 43 is_stmt 0 view .LVU614
 2079 0038 67EEA78A 		vmul.f32	s17, s15, s15
 327:AudioProcessor.cpp ****     } else {
 2080              		.loc 3 327 49 view .LVU615
 2081 003c 4CBF     		ite	mi
 2082 003e B6EE008A 		vmovmi.f32	s16, #5.0e-1
 330:AudioProcessor.cpp ****     }
 2083              		.loc 3 330 35 view .LVU616
 2084 0042 20EE008A 		vmulpl.f32	s16, s0, s0
 334:AudioProcessor.cpp ****     
 2085              		.loc 3 334 11 view .LVU617
 2086 0046 68EEA78A 		vmul.f32	s17, s17, s15
 327:AudioProcessor.cpp ****     } else {
 2087              		.loc 3 327 49 view .LVU618
 2088 004a 48BF     		it	mi
 2089 004c 20EE088A 		vmulmi.f32	s16, s0, s16
 330:AudioProcessor.cpp ****     }
 2090              		.loc 3 330 9 is_stmt 1 view .LVU619
 337:AudioProcessor.cpp ****     
 2091              		.loc 3 337 39 is_stmt 0 view .LVU620
 2092 0050 002C     		cmp	r4, #0
 2093 0052 234C     		ldr	r4, .L134+24
ARM GAS  /var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccGMqppg.s 			page 61


 2094 0054 14BF     		ite	ne
 2095 0056 0427     		movne	r7, #4
 2096 0058 0127     		moveq	r7, #1
 330:AudioProcessor.cpp ****     }
 2097              		.loc 3 330 22 view .LVU621
 2098 005a 28EE008A 		vmul.f32	s16, s16, s0
 2099              	.LVL122:
 334:AudioProcessor.cpp ****     
 2100              		.loc 3 334 5 is_stmt 1 view .LVU622
 337:AudioProcessor.cpp ****     
 2101              		.loc 3 337 5 view .LVU623
 2102              		.loc 3 339 5 view .LVU624
 2103              	.LBB301:
 2104              		.loc 3 339 23 view .LVU625
 2105              	.L127:
 2106              	.LBB298:
 340:AudioProcessor.cpp ****         // Set separate attack and release times for all voice envelopes
 341:AudioProcessor.cpp ****         voice_envelopes[v].SetAttackTime(attack_value);
 2107              		.loc 3 341 9 view .LVU626
 2108              		.loc 3 341 41 is_stmt 0 view .LVU627
 2109 005e B0EE480A 		vmov.f32	s0, s16
 2110 0062 2046     		mov	r0, r4
 2111 0064 FFF7FEFF 		bl	_ZN13VoiceEnvelope13SetAttackTimeEf
 2112              	.LVL123:
 342:AudioProcessor.cpp ****         voice_envelopes[v].SetReleaseTime(release_value);
 2113              		.loc 3 342 9 is_stmt 1 view .LVU628
 2114              		.loc 3 342 42 is_stmt 0 view .LVU629
 2115 0068 B0EE680A 		vmov.f32	s0, s17
 2116 006c 2046     		mov	r0, r4
 2117 006e FFF7FEFF 		bl	_ZN13VoiceEnvelope14SetReleaseTimeEf
 2118              	.LVL124:
 343:AudioProcessor.cpp ****         
 344:AudioProcessor.cpp ****         // Process the envelope
 345:AudioProcessor.cpp ****         float env_value = voice_envelopes[v].Process();
 2119              		.loc 3 345 9 is_stmt 1 view .LVU630
 2120              		.loc 3 345 53 is_stmt 0 view .LVU631
 2121 0072 2046     		mov	r0, r4
 2122 0074 FFF7FEFF 		bl	_ZN13VoiceEnvelope7ProcessEv
 2123              	.LVL125:
 346:AudioProcessor.cpp ****         
 347:AudioProcessor.cpp ****         for (int i = 0; i < BLOCK_SIZE; ++i) {
 2124              		.loc 3 347 9 is_stmt 1 view .LVU632
 2125              	.LBB299:
 2126              		.loc 3 347 27 view .LVU633
 2127 0078 1348     		ldr	r0, .L134
 2128 007a 1549     		ldr	r1, .L134+8
 2129              	.LBE299:
 345:AudioProcessor.cpp ****         
 2130              		.loc 3 345 53 is_stmt 0 view .LVU634
 2131 007c 3346     		mov	r3, r6
 2132              	.LBB300:
 2133              		.loc 3 347 18 view .LVU635
 2134 007e 0022     		movs	r2, #0
 2135              	.LVL126:
 2136              	.L126:
 348:AudioProcessor.cpp ****             mix_buffer_out[i] += output_buffers[v][i].out * env_value;
 2137              		.loc 3 348 13 is_stmt 1 discriminator 2 view .LVU636
ARM GAS  /var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccGMqppg.s 			page 62


 2138              		.loc 3 348 59 is_stmt 0 discriminator 2 view .LVU637
 2139 0080 B3F900C0 		ldrsh	ip, [r3]
 347:AudioProcessor.cpp ****             mix_buffer_out[i] += output_buffers[v][i].out * env_value;
 2140              		.loc 3 347 9 discriminator 2 view .LVU638
 2141 0084 0132     		adds	r2, r2, #1
 2142              	.LVL127:
 2143              		.loc 3 348 31 discriminator 2 view .LVU639
 2144 0086 D0ED007A 		vldr.32	s15, [r0]
 347:AudioProcessor.cpp ****             mix_buffer_out[i] += output_buffers[v][i].out * env_value;
 2145              		.loc 3 347 27 discriminator 2 view .LVU640
 2146 008a 0433     		adds	r3, r3, #4
 2147              		.loc 3 348 59 discriminator 2 view .LVU641
 2148 008c 07EE10CA 		vmov	s14, ip	@ int
 349:AudioProcessor.cpp ****             mix_buffer_aux[i] += output_buffers[v][i].aux * env_value;
 2149              		.loc 3 349 59 discriminator 2 view .LVU642
 2150 0090 33F902CC 		ldrsh	ip, [r3, #-2]
 347:AudioProcessor.cpp ****             mix_buffer_out[i] += output_buffers[v][i].out * env_value;
 2151              		.loc 3 347 27 discriminator 2 view .LVU643
 2152 0094 102A     		cmp	r2, #16
 348:AudioProcessor.cpp ****             mix_buffer_out[i] += output_buffers[v][i].out * env_value;
 2153              		.loc 3 348 59 discriminator 2 view .LVU644
 2154 0096 B8EEC77A 		vcvt.f32.s32	s14, s14
 348:AudioProcessor.cpp ****             mix_buffer_out[i] += output_buffers[v][i].out * env_value;
 2155              		.loc 3 348 31 discriminator 2 view .LVU645
 2156 009a E7EE007A 		vfma.f32	s15, s14, s0
 2157              		.loc 3 349 59 discriminator 2 view .LVU646
 2158 009e 07EE10CA 		vmov	s14, ip	@ int
 2159 00a2 B8EEC77A 		vcvt.f32.s32	s14, s14
 348:AudioProcessor.cpp ****             mix_buffer_out[i] += output_buffers[v][i].out * env_value;
 2160              		.loc 3 348 31 discriminator 2 view .LVU647
 2161 00a6 E0EC017A 		vstmia.32	r0!, {s15}
 2162              		.loc 3 349 13 is_stmt 1 discriminator 2 view .LVU648
 2163              		.loc 3 349 31 is_stmt 0 discriminator 2 view .LVU649
 2164 00aa D1ED007A 		vldr.32	s15, [r1]
 2165 00ae E7EE007A 		vfma.f32	s15, s14, s0
 2166 00b2 E1EC017A 		vstmia.32	r1!, {s15}
 347:AudioProcessor.cpp ****             mix_buffer_out[i] += output_buffers[v][i].out * env_value;
 2167              		.loc 3 347 9 is_stmt 1 discriminator 2 view .LVU650
 2168              	.LVL128:
 347:AudioProcessor.cpp ****             mix_buffer_out[i] += output_buffers[v][i].out * env_value;
 2169              		.loc 3 347 27 discriminator 2 view .LVU651
 2170 00b6 E3D1     		bne	.L126
 2171              	.LBE300:
 2172              	.LBE298:
 339:AudioProcessor.cpp ****         // Set separate attack and release times for all voice envelopes
 2173              		.loc 3 339 5 discriminator 2 view .LVU652
 2174 00b8 0135     		adds	r5, r5, #1
 2175              	.LVL129:
 339:AudioProcessor.cpp ****         // Set separate attack and release times for all voice envelopes
 2176              		.loc 3 339 23 discriminator 2 view .LVU653
 2177 00ba 4434     		adds	r4, r4, #68
 2178 00bc 4036     		adds	r6, r6, #64
 2179 00be AF42     		cmp	r7, r5
 2180 00c0 CDD1     		bne	.L127
 2181              	.LBE301:
 350:AudioProcessor.cpp ****         }
 351:AudioProcessor.cpp ****     }
ARM GAS  /var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccGMqppg.s 			page 63


 352:AudioProcessor.cpp **** }
 2182              		.loc 3 352 1 is_stmt 0 view .LVU654
 2183 00c2 BDEC028B 		vldm	sp!, {d8}
 2184              		.cfi_restore 80
 2185              		.cfi_restore 81
 2186              		.cfi_def_cfa_offset 24
 2187              	.LVL130:
 2188              		.loc 3 352 1 view .LVU655
 2189 00c6 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 2190              	.LVL131:
 2191              	.L135:
 2192              		.loc 3 352 1 view .LVU656
 2193              		.align	2
 2194              	.L134:
 2195 00c8 00000000 		.word	.LANCHOR12
 2196 00cc 00000000 		.word	output_buffers
 2197 00d0 00000000 		.word	.LANCHOR13
 2198 00d4 00000000 		.word	.LANCHOR0
 2199 00d8 CDCC4C3E 		.word	1045220557
 2200 00dc 00000000 		.word	.LANCHOR1
 2201 00e0 00000000 		.word	voice_envelopes
 2202              		.cfi_endproc
 2203              	.LFE5067:
 2205              		.section	.text._Z25UpdatePerformanceMonitorsjPf,"ax",%progbits
 2206              		.align	1
 2207              		.global	_Z25UpdatePerformanceMonitorsjPf
 2208              		.syntax unified
 2209              		.thumb
 2210              		.thumb_func
 2212              	_Z25UpdatePerformanceMonitorsjPf:
 2213              	.LVL132:
 2214              	.LFB5069:
 353:AudioProcessor.cpp **** 
 354:AudioProcessor.cpp **** void ProcessAudioOutput(AudioHandle::InterleavingOutputBuffer out, size_t size, float dry_level) {
 355:AudioProcessor.cpp ****     // --- Process Echo Delay & Write Output ---
 356:AudioProcessor.cpp ****     float wet_level = 1.0f - dry_level; 
 357:AudioProcessor.cpp ****     float norm_factor = (float)NUM_VOICES * 1.0f; // Was 1.5f
 358:AudioProcessor.cpp ****     
 359:AudioProcessor.cpp ****     for (size_t i = 0; i < size; i += 2) {
 360:AudioProcessor.cpp ****         float dry_left  = mix_buffer_out[i/2] / 32768.f / norm_factor;
 361:AudioProcessor.cpp ****         float dry_right = mix_buffer_aux[i/2] / 32768.f / norm_factor;
 362:AudioProcessor.cpp ****         
 363:AudioProcessor.cpp ****         float wet_left = delay.Process(dry_left); 
 364:AudioProcessor.cpp ****         float wet_right = delay.Process(dry_right); 
 365:AudioProcessor.cpp ****                 
 366:AudioProcessor.cpp ****         // Apply master volume scaling
 367:AudioProcessor.cpp ****         out[i]   = ((dry_left * dry_level) + (wet_left * wet_level)) * MASTER_VOLUME;
 368:AudioProcessor.cpp ****         out[i+1] = ((dry_right * dry_level) + (wet_right * wet_level)) * MASTER_VOLUME;
 369:AudioProcessor.cpp ****     }
 370:AudioProcessor.cpp **** }
 371:AudioProcessor.cpp **** 
 372:AudioProcessor.cpp **** void UpdatePerformanceMonitors(size_t size, AudioHandle::InterleavingOutputBuffer out) {
 2215              		.loc 3 372 88 is_stmt 1 view -0
 2216              		.cfi_startproc
 2217              		@ args = 0, pretend = 0, frame = 0
 2218              		@ frame_needed = 0, uses_anonymous_args = 0
 2219              		@ link register save eliminated.
ARM GAS  /var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccGMqppg.s 			page 64


 373:AudioProcessor.cpp ****     // --- Update Output Level Monitoring --- 
 374:AudioProcessor.cpp ****     if (size > 0) { // Ensure block is not empty
 2220              		.loc 3 374 5 view .LVU658
 2221              	.LBB302:
 2222 0000 80B1     		cbz	r0, .L137
 2223              	.LBB303:
 375:AudioProcessor.cpp ****         float current_level = fabsf(out[0]); // Absolute level of first sample
 2224              		.loc 3 375 9 view .LVU659
 2225              	.LVL133:
 376:AudioProcessor.cpp ****         // Apply smoothing (adjust 0.99f/0.01f factor for more/less smoothing)
 377:AudioProcessor.cpp ****         smoothed_output_level = smoothed_output_level * 0.99f + current_level * 0.01f; 
 2226              		.loc 3 377 9 view .LVU660
 375:AudioProcessor.cpp ****         float current_level = fabsf(out[0]); // Absolute level of first sample
 2227              		.loc 3 375 15 is_stmt 0 view .LVU661
 2228 0002 D1ED007A 		vldr.32	s15, [r1]
 2229              		.loc 3 377 79 view .LVU662
 2230 0006 9FED0E7A 		vldr.32	s14, .L143
 375:AudioProcessor.cpp ****         float current_level = fabsf(out[0]); // Absolute level of first sample
 2231              		.loc 3 375 15 view .LVU663
 2232 000a F0EEE77A 		vabs.f32	s15, s15
 2233              	.LVL134:
 2234              		.loc 3 377 33 view .LVU664
 2235 000e 0D4B     		ldr	r3, .L143+4
 2236 0010 D3ED006A 		vldr.32	s13, [r3]
 2237              		.loc 3 377 79 view .LVU665
 2238 0014 67EE877A 		vmul.f32	s15, s15, s14
 2239              	.LVL135:
 2240              		.loc 3 377 63 view .LVU666
 2241 0018 9FED0B7A 		vldr.32	s14, .L143+8
 2242 001c E6EE877A 		vfma.f32	s15, s13, s14
 2243              		.loc 3 377 31 view .LVU667
 2244 0020 C3ED007A 		vstr.32	s15, [r3]
 2245              	.LVL136:
 2246              	.L137:
 2247              		.loc 3 377 31 view .LVU668
 2248              	.LBE303:
 2249              	.LBE302:
 378:AudioProcessor.cpp ****     }
 379:AudioProcessor.cpp **** 
 380:AudioProcessor.cpp ****     // Signal display update periodically
 381:AudioProcessor.cpp ****     static uint32_t display_counter = 0;
 2250              		.loc 3 381 5 is_stmt 1 view .LVU669
 382:AudioProcessor.cpp ****     if (++display_counter >= 100) { 
 2251              		.loc 3 382 5 view .LVU670
 2252              		.loc 3 382 9 is_stmt 0 view .LVU671
 2253 0024 094A     		ldr	r2, .L143+12
 2254 0026 1368     		ldr	r3, [r2]
 2255 0028 0133     		adds	r3, r3, #1
 2256              		.loc 3 382 5 view .LVU672
 2257 002a 632B     		cmp	r3, #99
 2258 002c 01D8     		bhi	.L138
 2259              		.loc 3 382 27 view .LVU673
 2260 002e 1360     		str	r3, [r2]
 2261 0030 7047     		bx	lr
 2262              	.L138:
 383:AudioProcessor.cpp ****         display_counter = 0;
 2263              		.loc 3 383 9 is_stmt 1 view .LVU674
ARM GAS  /var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccGMqppg.s 			page 65


 2264              		.loc 3 383 25 is_stmt 0 view .LVU675
 2265 0032 0023     		movs	r3, #0
 2266 0034 1360     		str	r3, [r2]
 384:AudioProcessor.cpp ****         update_display = true;
 2267              		.loc 3 384 9 is_stmt 1 view .LVU676
 2268              		.loc 3 384 24 is_stmt 0 view .LVU677
 2269 0036 0122     		movs	r2, #1
 2270 0038 054B     		ldr	r3, .L143+16
 2271 003a 1A70     		strb	r2, [r3]
 385:AudioProcessor.cpp ****     }
 386:AudioProcessor.cpp **** } ...
 2272              		.loc 3 386 1 view .LVU678
 2273 003c 7047     		bx	lr
 2274              	.L144:
 2275 003e 00BF     		.align	2
 2276              	.L143:
 2277 0040 0AD7233C 		.word	1008981770
 2278 0044 00000000 		.word	smoothed_output_level
 2279 0048 A4707D3F 		.word	1065185444
 2280 004c 00000000 		.word	.LANCHOR14
 2281 0050 00000000 		.word	update_display
 2282              		.cfi_endproc
 2283              	.LFE5069:
 2285              		.section	.text._ZN10infrasonic9EchoDelayILj48000EE7ProcessEf,"axG",%progbits,_ZN10infrasonic9EchoD
 2286              		.align	1
 2287              		.weak	_ZN10infrasonic9EchoDelayILj48000EE7ProcessEf
 2288              		.syntax unified
 2289              		.thumb
 2290              		.thumb_func
 2292              	_ZN10infrasonic9EchoDelayILj48000EE7ProcessEf:
 2293              	.LVL137:
 2294              	.LFB5499:
  67:Effects/EchoDelay.h ****         }
  68:Effects/EchoDelay.h **** 
  69:Effects/EchoDelay.h ****         inline float Process(const float in)
 2295              		.loc 5 69 22 is_stmt 1 view -0
 2296              		.cfi_startproc
 2297              		@ args = 0, pretend = 0, frame = 0
 2298              		@ frame_needed = 0, uses_anonymous_args = 0
 2299              	.LBB328:
 2300              	.LBI328:
  60:lib/DaisySP/Source/Utility/dsp.h **** }
  61:lib/DaisySP/Source/Utility/dsp.h **** 
  62:lib/DaisySP/Source/Utility/dsp.h **** /** quick fp clamp
  63:lib/DaisySP/Source/Utility/dsp.h **** */
  64:lib/DaisySP/Source/Utility/dsp.h **** inline float fclamp(float in, float min, float max)
  65:lib/DaisySP/Source/Utility/dsp.h **** {
  66:lib/DaisySP/Source/Utility/dsp.h ****     return fmin(fmax(in, min), max);
  67:lib/DaisySP/Source/Utility/dsp.h **** }
  68:lib/DaisySP/Source/Utility/dsp.h **** 
  69:lib/DaisySP/Source/Utility/dsp.h **** /** From Musicdsp.org "Fast power and root estimates for 32bit floats)
  70:lib/DaisySP/Source/Utility/dsp.h **** Original code by Stefan Stenzel
  71:lib/DaisySP/Source/Utility/dsp.h **** These are approximations
  72:lib/DaisySP/Source/Utility/dsp.h **** */
  73:lib/DaisySP/Source/Utility/dsp.h **** inline float fastpower(float f, int n)
  74:lib/DaisySP/Source/Utility/dsp.h **** {
  75:lib/DaisySP/Source/Utility/dsp.h ****     long *lp, l;
ARM GAS  /var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccGMqppg.s 			page 66


  76:lib/DaisySP/Source/Utility/dsp.h ****     lp = (long *)(&f);
  77:lib/DaisySP/Source/Utility/dsp.h ****     l  = *lp;
  78:lib/DaisySP/Source/Utility/dsp.h ****     l -= 0x3F800000;
  79:lib/DaisySP/Source/Utility/dsp.h ****     l <<= (n - 1);
  80:lib/DaisySP/Source/Utility/dsp.h ****     l += 0x3F800000;
  81:lib/DaisySP/Source/Utility/dsp.h ****     *lp = l;
  82:lib/DaisySP/Source/Utility/dsp.h ****     return f;
  83:lib/DaisySP/Source/Utility/dsp.h **** }
  84:lib/DaisySP/Source/Utility/dsp.h **** 
  85:lib/DaisySP/Source/Utility/dsp.h **** inline float fastroot(float f, int n)
  86:lib/DaisySP/Source/Utility/dsp.h **** {
  87:lib/DaisySP/Source/Utility/dsp.h ****     long *lp, l;
  88:lib/DaisySP/Source/Utility/dsp.h ****     lp = (long *)(&f);
  89:lib/DaisySP/Source/Utility/dsp.h ****     l  = *lp;
  90:lib/DaisySP/Source/Utility/dsp.h ****     l -= 0x3F800000;
  91:lib/DaisySP/Source/Utility/dsp.h ****     l >>= (n - 1);
  92:lib/DaisySP/Source/Utility/dsp.h ****     l += 0x3F800000;
  93:lib/DaisySP/Source/Utility/dsp.h ****     *lp = l;
  94:lib/DaisySP/Source/Utility/dsp.h ****     return f;
  95:lib/DaisySP/Source/Utility/dsp.h **** }
  96:lib/DaisySP/Source/Utility/dsp.h **** 
  97:lib/DaisySP/Source/Utility/dsp.h **** /** Significantly more efficient than fmodf(x, 1.0f) for calculating
  98:lib/DaisySP/Source/Utility/dsp.h ****  *  the decimal part of a floating point value.
  99:lib/DaisySP/Source/Utility/dsp.h ****  */
 100:lib/DaisySP/Source/Utility/dsp.h **** inline float fastmod1f(float x)
 101:lib/DaisySP/Source/Utility/dsp.h **** {
 102:lib/DaisySP/Source/Utility/dsp.h ****     return x - floorf(x);
 103:lib/DaisySP/Source/Utility/dsp.h **** }
 104:lib/DaisySP/Source/Utility/dsp.h **** 
 105:lib/DaisySP/Source/Utility/dsp.h **** /** From http://openaudio.blogspot.com/2017/02/faster-log10-and-pow.html
 106:lib/DaisySP/Source/Utility/dsp.h **** No approximation, pow10f(x) gives a 90% speed increase over powf(10.f, x)
 107:lib/DaisySP/Source/Utility/dsp.h **** */
 108:lib/DaisySP/Source/Utility/dsp.h **** inline float pow10f(float f)
 109:lib/DaisySP/Source/Utility/dsp.h **** {
 110:lib/DaisySP/Source/Utility/dsp.h ****     return expf(2.302585092994046f * f);
 111:lib/DaisySP/Source/Utility/dsp.h **** }
 112:lib/DaisySP/Source/Utility/dsp.h **** 
 113:lib/DaisySP/Source/Utility/dsp.h **** /* Original code for fastlog2f by Dr. Paul Beckmann from the ARM community forum, adapted from the 
 114:lib/DaisySP/Source/Utility/dsp.h **** About 25% performance increase over std::log10f
 115:lib/DaisySP/Source/Utility/dsp.h **** */
 116:lib/DaisySP/Source/Utility/dsp.h **** inline float fastlog2f(float f)
 117:lib/DaisySP/Source/Utility/dsp.h **** {
 118:lib/DaisySP/Source/Utility/dsp.h ****     float frac;
 119:lib/DaisySP/Source/Utility/dsp.h ****     int   exp;
 120:lib/DaisySP/Source/Utility/dsp.h ****     frac = frexpf(fabsf(f), &exp);
 121:lib/DaisySP/Source/Utility/dsp.h ****     f    = 1.23149591368684f;
 122:lib/DaisySP/Source/Utility/dsp.h ****     f *= frac;
 123:lib/DaisySP/Source/Utility/dsp.h ****     f += -4.11852516267426f;
 124:lib/DaisySP/Source/Utility/dsp.h ****     f *= frac;
 125:lib/DaisySP/Source/Utility/dsp.h ****     f += 6.02197014179219f;
 126:lib/DaisySP/Source/Utility/dsp.h ****     f *= frac;
 127:lib/DaisySP/Source/Utility/dsp.h ****     f += -3.13396450166353f;
 128:lib/DaisySP/Source/Utility/dsp.h ****     f += exp;
 129:lib/DaisySP/Source/Utility/dsp.h ****     return (f);
 130:lib/DaisySP/Source/Utility/dsp.h **** }
 131:lib/DaisySP/Source/Utility/dsp.h **** 
 132:lib/DaisySP/Source/Utility/dsp.h **** inline float fastlog10f(float f)
ARM GAS  /var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccGMqppg.s 			page 67


 133:lib/DaisySP/Source/Utility/dsp.h **** {
 134:lib/DaisySP/Source/Utility/dsp.h ****     return fastlog2f(f) * 0.3010299956639812f;
 135:lib/DaisySP/Source/Utility/dsp.h **** }
 136:lib/DaisySP/Source/Utility/dsp.h **** 
 137:lib/DaisySP/Source/Utility/dsp.h **** /** Midi to frequency helper
 138:lib/DaisySP/Source/Utility/dsp.h **** */
 139:lib/DaisySP/Source/Utility/dsp.h **** inline float mtof(float m)
 140:lib/DaisySP/Source/Utility/dsp.h **** {
 141:lib/DaisySP/Source/Utility/dsp.h ****     return powf(2, (m - 69.0f) / 12.0f) * 440.0f;
 142:lib/DaisySP/Source/Utility/dsp.h **** }
 143:lib/DaisySP/Source/Utility/dsp.h **** 
 144:lib/DaisySP/Source/Utility/dsp.h **** 
 145:lib/DaisySP/Source/Utility/dsp.h **** /** one pole lpf
 146:lib/DaisySP/Source/Utility/dsp.h **** out is passed by reference, and must be retained between
 147:lib/DaisySP/Source/Utility/dsp.h **** calls to properly filter the signal
 148:lib/DaisySP/Source/Utility/dsp.h **** coeff can be calculated:
 149:lib/DaisySP/Source/Utility/dsp.h **** coeff = 1.0 / (time * sample_rate) ; where time is in seconds
 150:lib/DaisySP/Source/Utility/dsp.h **** */
 151:lib/DaisySP/Source/Utility/dsp.h **** inline void fonepole(float &out, float in, float coeff)
 2301              		.loc 7 151 13 view .LVU680
 2302              	.LBB329:
 152:lib/DaisySP/Source/Utility/dsp.h **** {
 153:lib/DaisySP/Source/Utility/dsp.h ****     out += coeff * (in - out);
 2303              		.loc 7 153 5 view .LVU681
 2304              		.loc 7 153 9 is_stmt 0 view .LVU682
 2305 0000 90ED017A 		vldr.32	s14, [r0, #4]
 2306              	.LBE329:
 2307              	.LBE328:
 2308              	.LBB334:
 2309              	.LBB335:
 2310              		.file 8 "lib/DaisySP/Source/Utility/delayline.h"
   1:lib/DaisySP/Source/Utility/delayline.h **** /*
   2:lib/DaisySP/Source/Utility/delayline.h **** Copyright (c) 2020 Electrosmith, Corp
   3:lib/DaisySP/Source/Utility/delayline.h **** 
   4:lib/DaisySP/Source/Utility/delayline.h **** Use of this source code is governed by an MIT-style
   5:lib/DaisySP/Source/Utility/delayline.h **** license that can be found in the LICENSE file or at
   6:lib/DaisySP/Source/Utility/delayline.h **** https://opensource.org/licenses/MIT.
   7:lib/DaisySP/Source/Utility/delayline.h **** */
   8:lib/DaisySP/Source/Utility/delayline.h **** 
   9:lib/DaisySP/Source/Utility/delayline.h **** #pragma once
  10:lib/DaisySP/Source/Utility/delayline.h **** #ifndef DSY_DELAY_H
  11:lib/DaisySP/Source/Utility/delayline.h **** #define DSY_DELAY_H
  12:lib/DaisySP/Source/Utility/delayline.h **** #include <stdlib.h>
  13:lib/DaisySP/Source/Utility/delayline.h **** #include <stdint.h>
  14:lib/DaisySP/Source/Utility/delayline.h **** namespace daisysp
  15:lib/DaisySP/Source/Utility/delayline.h **** {
  16:lib/DaisySP/Source/Utility/delayline.h **** /** Simple Delay line.
  17:lib/DaisySP/Source/Utility/delayline.h **** November 2019
  18:lib/DaisySP/Source/Utility/delayline.h **** 
  19:lib/DaisySP/Source/Utility/delayline.h **** Converted to Template December 2019
  20:lib/DaisySP/Source/Utility/delayline.h **** 
  21:lib/DaisySP/Source/Utility/delayline.h **** declaration example: (1 second of floats)
  22:lib/DaisySP/Source/Utility/delayline.h **** 
  23:lib/DaisySP/Source/Utility/delayline.h **** DelayLine<float, SAMPLE_RATE> del;
  24:lib/DaisySP/Source/Utility/delayline.h **** 
  25:lib/DaisySP/Source/Utility/delayline.h **** By: shensley
  26:lib/DaisySP/Source/Utility/delayline.h **** */
ARM GAS  /var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccGMqppg.s 			page 68


  27:lib/DaisySP/Source/Utility/delayline.h **** template <typename T, size_t max_size>
  28:lib/DaisySP/Source/Utility/delayline.h **** class DelayLine
  29:lib/DaisySP/Source/Utility/delayline.h **** {
  30:lib/DaisySP/Source/Utility/delayline.h ****   public:
  31:lib/DaisySP/Source/Utility/delayline.h ****     DelayLine() {}
  32:lib/DaisySP/Source/Utility/delayline.h ****     ~DelayLine() {}
  33:lib/DaisySP/Source/Utility/delayline.h ****     /** initializes the delay line by clearing the values within, and setting delay to 1 sample.
  34:lib/DaisySP/Source/Utility/delayline.h ****     */
  35:lib/DaisySP/Source/Utility/delayline.h ****     void Init() { Reset(); }
  36:lib/DaisySP/Source/Utility/delayline.h ****     /** clears buffer, sets write ptr to 0, and delay to 1 sample.
  37:lib/DaisySP/Source/Utility/delayline.h ****     */
  38:lib/DaisySP/Source/Utility/delayline.h ****     void Reset()
  39:lib/DaisySP/Source/Utility/delayline.h ****     {
  40:lib/DaisySP/Source/Utility/delayline.h ****         for(size_t i = 0; i < max_size; i++)
  41:lib/DaisySP/Source/Utility/delayline.h ****         {
  42:lib/DaisySP/Source/Utility/delayline.h ****             line_[i] = T(0);
  43:lib/DaisySP/Source/Utility/delayline.h ****         }
  44:lib/DaisySP/Source/Utility/delayline.h ****         write_ptr_ = 0;
  45:lib/DaisySP/Source/Utility/delayline.h ****         delay_     = 1;
  46:lib/DaisySP/Source/Utility/delayline.h ****     }
  47:lib/DaisySP/Source/Utility/delayline.h **** 
  48:lib/DaisySP/Source/Utility/delayline.h ****     /** sets the delay time in samples
  49:lib/DaisySP/Source/Utility/delayline.h ****         If a float is passed in, a fractional component will be calculated for interpolating the de
  50:lib/DaisySP/Source/Utility/delayline.h ****     */
  51:lib/DaisySP/Source/Utility/delayline.h ****     inline void SetDelay(size_t delay)
  52:lib/DaisySP/Source/Utility/delayline.h ****     {
  53:lib/DaisySP/Source/Utility/delayline.h ****         frac_  = 0.0f;
  54:lib/DaisySP/Source/Utility/delayline.h ****         delay_ = delay < max_size ? delay : max_size - 1;
  55:lib/DaisySP/Source/Utility/delayline.h ****     }
  56:lib/DaisySP/Source/Utility/delayline.h **** 
  57:lib/DaisySP/Source/Utility/delayline.h ****     /** sets the delay time in samples
  58:lib/DaisySP/Source/Utility/delayline.h ****         If a float is passed in, a fractional component will be calculated for interpolating the de
  59:lib/DaisySP/Source/Utility/delayline.h ****     */
  60:lib/DaisySP/Source/Utility/delayline.h ****     inline void SetDelay(float delay)
  61:lib/DaisySP/Source/Utility/delayline.h ****     {
  62:lib/DaisySP/Source/Utility/delayline.h ****         int32_t int_delay = static_cast<int32_t>(delay);
  63:lib/DaisySP/Source/Utility/delayline.h ****         frac_             = delay - static_cast<float>(int_delay);
  64:lib/DaisySP/Source/Utility/delayline.h ****         delay_ = static_cast<size_t>(int_delay) < max_size ? int_delay
 2311              		.loc 8 64 60 view .LVU683
 2312 0004 4BF67F33 		movw	r3, #47999
 2313              	.LBE335:
 2314              	.LBE334:
 2315              	.LBB339:
 2316              	.LBB330:
 2317              		.loc 7 153 24 view .LVU684
 2318 0008 D0ED027A 		vldr.32	s15, [r0, #8]
 2319              	.LBE330:
 2320              	.LBE339:
 2321              		.loc 5 69 22 view .LVU685
 2322 000c B0EE406A 		vmov.f32	s12, s0
 2323              	.LBB340:
 2324              	.LBB331:
 2325              		.loc 7 153 9 view .LVU686
 2326 0010 D0ED036A 		vldr.32	s13, [r0, #12]
 2327              		.loc 7 153 24 view .LVU687
 2328 0014 77EEC77A 		vsub.f32	s15, s15, s14
 2329              	.LBE331:
ARM GAS  /var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccGMqppg.s 			page 69


 2330              	.LBE340:
 2331              		.loc 5 69 22 view .LVU688
 2332 0018 10B5     		push	{r4, lr}
 2333              		.cfi_def_cfa_offset 8
 2334              		.cfi_offset 4, -8
 2335              		.cfi_offset 14, -4
 2336              	.LBB341:
 2337              	.LBB332:
 2338              		.loc 7 153 9 view .LVU689
 2339 001a A6EEA77A 		vfma.f32	s14, s13, s15
 2340              	.LBE332:
 2341              	.LBE341:
  70:Effects/EchoDelay.h ****         {
  71:Effects/EchoDelay.h ****             float out;
  72:Effects/EchoDelay.h ****             daisysp::fonepole(delay_time_current_, delay_time_target_, delay_smooth_coef_);
  73:Effects/EchoDelay.h ****             delayLine_.SetDelay(delay_time_current_ * sample_rate_);
 2342              		.loc 5 73 32 view .LVU690
 2343 001e D0ED007A 		vldr.32	s15, [r0]
 2344              	.LBB342:
 2345              	.LBB343:
  65:lib/DaisySP/Source/Utility/delayline.h ****                                                            : max_size - 1;
  66:lib/DaisySP/Source/Utility/delayline.h ****     }
  67:lib/DaisySP/Source/Utility/delayline.h **** 
  68:lib/DaisySP/Source/Utility/delayline.h ****     /** writes the sample of type T to the delay line, and advances the write ptr
  69:lib/DaisySP/Source/Utility/delayline.h ****     */
  70:lib/DaisySP/Source/Utility/delayline.h ****     inline void Write(const T sample)
  71:lib/DaisySP/Source/Utility/delayline.h ****     {
  72:lib/DaisySP/Source/Utility/delayline.h ****         line_[write_ptr_] = sample;
  73:lib/DaisySP/Source/Utility/delayline.h ****         write_ptr_        = (write_ptr_ - 1 + max_size) % max_size;
  74:lib/DaisySP/Source/Utility/delayline.h ****     }
  75:lib/DaisySP/Source/Utility/delayline.h **** 
  76:lib/DaisySP/Source/Utility/delayline.h ****     /** returns the next sample of type T in the delay line, interpolated if necessary.
  77:lib/DaisySP/Source/Utility/delayline.h ****     */
  78:lib/DaisySP/Source/Utility/delayline.h ****     inline const T Read() const
  79:lib/DaisySP/Source/Utility/delayline.h ****     {
  80:lib/DaisySP/Source/Utility/delayline.h ****         T a = line_[(write_ptr_ + delay_) % max_size];
 2346              		.loc 8 80 43 view .LVU691
 2347 0022 4BF68034 		movw	r4, #48000
 2348              	.LBE343:
 2349              	.LBE342:
 2350              	.LBB348:
 2351              	.LBB333:
 2352              		.loc 7 153 9 view .LVU692
 2353 0026 80ED017A 		vstr.32	s14, [r0, #4]
 2354              	.LVL138:
 2355              		.loc 7 153 9 view .LVU693
 2356              	.LBE333:
 2357              	.LBE348:
 2358              		.loc 5 73 32 view .LVU694
 2359 002a 27EE277A 		vmul.f32	s14, s14, s15
 2360              	.LVL139:
 2361              	.LBB349:
 2362              	.LBI334:
  60:lib/DaisySP/Source/Utility/delayline.h ****     {
 2363              		.loc 8 60 17 is_stmt 1 view .LVU695
 2364              	.LBB336:
  62:lib/DaisySP/Source/Utility/delayline.h ****         frac_             = delay - static_cast<float>(int_delay);
ARM GAS  /var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccGMqppg.s 			page 70


 2365              		.loc 8 62 17 is_stmt 0 view .LVU696
 2366 002e FDEEC77A 		vcvt.s32.f32	s15, s14
 2367              	.LVL140:
  64:lib/DaisySP/Source/Utility/delayline.h ****                                                            : max_size - 1;
 2368              		.loc 8 64 60 view .LVU697
 2369 0032 17EE902A 		vmov	r2, s15	@ int
  63:lib/DaisySP/Source/Utility/delayline.h ****         delay_ = static_cast<size_t>(int_delay) < max_size ? int_delay
 2370              		.loc 8 63 37 view .LVU698
 2371 0036 F8EEE76A 		vcvt.f32.s32	s13, s15
  64:lib/DaisySP/Source/Utility/delayline.h ****                                                            : max_size - 1;
 2372              		.loc 8 64 60 view .LVU699
 2373 003a 9A42     		cmp	r2, r3
  63:lib/DaisySP/Source/Utility/delayline.h ****         delay_ = static_cast<size_t>(int_delay) < max_size ? int_delay
 2374              		.loc 8 63 35 view .LVU700
 2375 003c 37EE667A 		vsub.f32	s14, s14, s13
 2376              	.LVL141:
  64:lib/DaisySP/Source/Utility/delayline.h ****                                                            : max_size - 1;
 2377              		.loc 8 64 60 view .LVU701
 2378 0040 28BF     		it	cs
 2379 0042 1A46     		movcs	r2, r3
  64:lib/DaisySP/Source/Utility/delayline.h ****                                                            : max_size - 1;
 2380              		.loc 8 64 16 view .LVU702
 2381 0044 C261     		str	r2, [r0, #28]
 2382              	.LVL142:
  64:lib/DaisySP/Source/Utility/delayline.h ****                                                            : max_size - 1;
 2383              		.loc 8 64 16 view .LVU703
 2384              	.LBE336:
 2385              	.LBE349:
 2386              	.LBB350:
 2387              	.LBI342:
  78:lib/DaisySP/Source/Utility/delayline.h ****     {
 2388              		.loc 8 78 20 is_stmt 1 view .LVU704
 2389              	.LBE350:
 2390              	.LBB351:
 2391              	.LBB337:
  64:lib/DaisySP/Source/Utility/delayline.h ****                                                            : max_size - 1;
 2392              		.loc 8 64 60 is_stmt 0 view .LVU705
 2393 0046 1346     		mov	r3, r2
 2394              	.LBE337:
 2395              	.LBE351:
 2396              	.LBB352:
 2397              	.LBB344:
 2398              		.loc 8 80 22 view .LVU706
 2399 0048 8269     		ldr	r2, [r0, #24]
 2400              	.LBE344:
 2401              	.LBE352:
 2402              	.LBB353:
 2403              	.LBB338:
  63:lib/DaisySP/Source/Utility/delayline.h ****         delay_ = static_cast<size_t>(int_delay) < max_size ? int_delay
 2404              		.loc 8 63 27 view .LVU707
 2405 004a 80ED057A 		vstr.32	s14, [r0, #20]
 2406              	.LBE338:
 2407              	.LBE353:
 2408              	.LBB354:
 2409              	.LBB345:
 2410              		.loc 8 80 33 view .LVU708
 2411 004e 1344     		add	r3, r3, r2
ARM GAS  /var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccGMqppg.s 			page 71


 2412              		.loc 8 80 43 view .LVU709
 2413 0050 B3FBF4F1 		udiv	r1, r3, r4
 2414 0054 04FB1131 		mls	r1, r4, r1, r3
  81:lib/DaisySP/Source/Utility/delayline.h ****         T b = line_[(write_ptr_ + delay_ + 1) % max_size];
 2415              		.loc 8 81 42 view .LVU710
 2416 0058 0133     		adds	r3, r3, #1
  80:lib/DaisySP/Source/Utility/delayline.h ****         T b = line_[(write_ptr_ + delay_ + 1) % max_size];
 2417              		.loc 8 80 11 view .LVU711
 2418 005a 00EB8101 		add	r1, r0, r1, lsl #2
 2419 005e D1ED086A 		vldr.32	s13, [r1, #32]
 2420              	.LVL143:
 2421              		.loc 8 81 47 view .LVU712
 2422 0062 B3FBF4F1 		udiv	r1, r3, r4
 2423 0066 04FB1133 		mls	r3, r4, r1, r3
 2424              		.loc 8 81 11 view .LVU713
 2425 006a 00EB8303 		add	r3, r0, r3, lsl #2
  82:lib/DaisySP/Source/Utility/delayline.h ****         return a + (b - a) * frac_;
 2426              		.loc 8 82 23 view .LVU714
 2427 006e D3ED087A 		vldr.32	s15, [r3, #32]
 2428              	.LBE345:
 2429              	.LBE354:
 2430              	.LBB355:
 2431              	.LBB356:
 2432              	.LBB357:
 2433              	.LBB358:
 2434              	.LBB359:
 2435              		.file 9 "Effects/BiquadFilters.h"
   1:Effects/BiquadFilters.h **** #pragma once
   2:Effects/BiquadFilters.h **** #ifndef INFS_BIQUADFILTERS_H
   3:Effects/BiquadFilters.h **** #define INFS_BIQUADFILTERS_H
   4:Effects/BiquadFilters.h **** 
   5:Effects/BiquadFilters.h **** #include <cassert>
   6:Effects/BiquadFilters.h **** #include <array>
   7:Effects/BiquadFilters.h **** #include <daisysp.h>
   8:Effects/BiquadFilters.h **** 
   9:Effects/BiquadFilters.h **** namespace infrasonic {
  10:Effects/BiquadFilters.h **** 
  11:Effects/BiquadFilters.h **** /**
  12:Effects/BiquadFilters.h ****  *  Single precision 2nd order biquad filter section with support for stereo processing.
  13:Effects/BiquadFilters.h ****  *  NOTE: There are templated filter definitions at the bottom of this file for convenience. 
  14:Effects/BiquadFilters.h ****  */
  15:Effects/BiquadFilters.h **** class BiquadSection {
  16:Effects/BiquadFilters.h **** 
  17:Effects/BiquadFilters.h ****     public:
  18:Effects/BiquadFilters.h **** 
  19:Effects/BiquadFilters.h ****         enum class FilterType {
  20:Effects/BiquadFilters.h ****             LowPass,
  21:Effects/BiquadFilters.h ****             HighPass,
  22:Effects/BiquadFilters.h ****             BandPass
  23:Effects/BiquadFilters.h ****         };
  24:Effects/BiquadFilters.h **** 
  25:Effects/BiquadFilters.h ****         // Assumes normalized coefficients (a0 == 1)
  26:Effects/BiquadFilters.h ****         // Ordering numerator then denominator: {b0, b1, b2, a1, a2}
  27:Effects/BiquadFilters.h ****         using Coefficients = std::array<float, 5>;
  28:Effects/BiquadFilters.h **** 
  29:Effects/BiquadFilters.h ****         static const Coefficients CalculateCoefficients(const FilterType type, 
  30:Effects/BiquadFilters.h ****                                                         const float sample_rate,
ARM GAS  /var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccGMqppg.s 			page 72


  31:Effects/BiquadFilters.h ****                                                         const float cutoff_hz,
  32:Effects/BiquadFilters.h ****                                                         const float q);
  33:Effects/BiquadFilters.h **** 
  34:Effects/BiquadFilters.h ****         BiquadSection() {}
  35:Effects/BiquadFilters.h ****         ~BiquadSection() {}
  36:Effects/BiquadFilters.h **** 
  37:Effects/BiquadFilters.h ****         void SetCoefficients(const Coefficients coefficients) { coefs_ = coefficients; }
  38:Effects/BiquadFilters.h **** 
  39:Effects/BiquadFilters.h ****         inline float Process(const float in, const int channel)
  40:Effects/BiquadFilters.h ****         {
  41:Effects/BiquadFilters.h ****             assert(channel < 2);
  42:Effects/BiquadFilters.h **** 
  43:Effects/BiquadFilters.h ****             // TODO: arm accelerated version
  44:Effects/BiquadFilters.h **** 
  45:Effects/BiquadFilters.h ****             const float &b0 = coefs_[0];
  46:Effects/BiquadFilters.h ****             const float &b1 = coefs_[1];
  47:Effects/BiquadFilters.h ****             const float &b2 = coefs_[2];
  48:Effects/BiquadFilters.h ****             const float &a1 = coefs_[3];
  49:Effects/BiquadFilters.h ****             const float &a2 = coefs_[4];
  50:Effects/BiquadFilters.h **** 
  51:Effects/BiquadFilters.h ****             // Transposed direct form 2
  52:Effects/BiquadFilters.h ****             float y = b0 * in + s1_[channel];
 2436              		.loc 9 52 23 view .LVU715
 2437 0072 00F53833 		add	r3, r0, #188416
 2438              	.LBE359:
 2439              	.LBE358:
 2440              	.LBE357:
 2441              	.LBE356:
 2442              	.LBE355:
 2443              	.LBB368:
 2444              	.LBB346:
 2445              		.loc 8 82 23 view .LVU716
 2446 0076 77EEE67A 		vsub.f32	s15, s15, s13
 2447              	.LBE346:
 2448              	.LBE368:
 2449              	.LBB369:
 2450              	.LBB366:
 2451              	.LBB364:
 2452              	.LBB362:
 2453              	.LBB360:
 2454              		.loc 9 52 23 view .LVU717
 2455 007a 03F62C61 		addw	r1, r3, #3628
  53:Effects/BiquadFilters.h ****             s1_[channel] = s2_[channel] + in * b1 - a1 * y;
 2456              		.loc 9 53 48 view .LVU718
 2457 007e 03F56364 		add	r4, r3, #3632
 2458              	.LBE360:
 2459              	.LBE362:
 2460              	.LBE364:
 2461              	.LBE366:
 2462              	.LBE369:
 2463              	.LBB370:
 2464              	.LBB347:
 2465              		.loc 8 82 30 view .LVU719
 2466 0082 E7EE876A 		vfma.f32	s13, s15, s14
 2467              	.LVL144:
 2468              		.loc 8 82 30 view .LVU720
 2469              	.LBE347:
ARM GAS  /var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccGMqppg.s 			page 73


 2470              	.LBE370:
 2471              	.LBB371:
 2472              	.LBI355:
  54:Effects/BiquadFilters.h ****             s2_[channel] = b2 * in - a2 * y;
  55:Effects/BiquadFilters.h ****             return y;
  56:Effects/BiquadFilters.h ****         }
  57:Effects/BiquadFilters.h **** 
  58:Effects/BiquadFilters.h ****     private:
  59:Effects/BiquadFilters.h ****         // coef
  60:Effects/BiquadFilters.h ****         Coefficients coefs_{0, 0, 0, 0, 0};
  61:Effects/BiquadFilters.h **** 
  62:Effects/BiquadFilters.h ****         // state
  63:Effects/BiquadFilters.h ****         float s1_[2] = {0, 0};
  64:Effects/BiquadFilters.h ****         float s2_[2] = {0, 0};
  65:Effects/BiquadFilters.h **** 
  66:Effects/BiquadFilters.h **** };
  67:Effects/BiquadFilters.h **** 
  68:Effects/BiquadFilters.h **** /// Templated cascaded biquad filter. Filter Order = 2 * NumSections.
  69:Effects/BiquadFilters.h **** /// NOTE: Only supports even-ordered filters.
  70:Effects/BiquadFilters.h **** template<size_t NumSections, BiquadSection::FilterType FilterType>
  71:Effects/BiquadFilters.h **** class BiquadCascade {
  72:Effects/BiquadFilters.h **** 
  73:Effects/BiquadFilters.h ****     static_assert(NumSections > 0, "Must have at least one section");
  74:Effects/BiquadFilters.h **** 
  75:Effects/BiquadFilters.h ****     public:
  76:Effects/BiquadFilters.h ****         BiquadCascade() {}
  77:Effects/BiquadFilters.h ****         ~BiquadCascade() {}
  78:Effects/BiquadFilters.h **** 
  79:Effects/BiquadFilters.h ****         // Individual param update methods recalculate coefficients
  80:Effects/BiquadFilters.h ****         // every time one of them is called. To update everything at once,
  81:Effects/BiquadFilters.h ****         // use SetParams()
  82:Effects/BiquadFilters.h **** 
  83:Effects/BiquadFilters.h ****         void Init(const float sample_rate) {
  84:Effects/BiquadFilters.h ****             sample_rate_ = sample_rate;
  85:Effects/BiquadFilters.h ****             cutoff_hz_ = sample_rate * 0.25f;
  86:Effects/BiquadFilters.h ****             SetFlatResponse();
  87:Effects/BiquadFilters.h ****         }
  88:Effects/BiquadFilters.h **** 
  89:Effects/BiquadFilters.h ****         inline void SetCutoff(const float cutoff_hz)
  90:Effects/BiquadFilters.h ****         {
  91:Effects/BiquadFilters.h ****             cutoff_hz_ = daisysp::fclamp(cutoff_hz, 1.f, sample_rate_ * 0.5f);
  92:Effects/BiquadFilters.h ****             updateCoefficients();
  93:Effects/BiquadFilters.h ****         }
  94:Effects/BiquadFilters.h **** 
  95:Effects/BiquadFilters.h ****         inline void SetQ(const float q)
  96:Effects/BiquadFilters.h ****         {
  97:Effects/BiquadFilters.h ****             for (size_t i=0; i<NumSections; i++) {
  98:Effects/BiquadFilters.h ****                 q_[i] = daisysp::fmax(q, 0.1f);
  99:Effects/BiquadFilters.h ****             }
 100:Effects/BiquadFilters.h ****             updateCoefficients();
 101:Effects/BiquadFilters.h ****         }
 102:Effects/BiquadFilters.h **** 
 103:Effects/BiquadFilters.h ****         /// Update params simultaneously, recalculating coefficients only once 
 104:Effects/BiquadFilters.h ****         inline void SetParams(const float cutoff_hz, const float q)
 105:Effects/BiquadFilters.h ****         {
 106:Effects/BiquadFilters.h ****             cutoff_hz_ = daisysp::fclamp(cutoff_hz, 1.f, sample_rate_ * 0.5f);
 107:Effects/BiquadFilters.h ****             for (size_t i=0; i<NumSections; i++) {
ARM GAS  /var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccGMqppg.s 			page 74


 108:Effects/BiquadFilters.h ****                 q_[i] = daisysp::fmax(q, 0.1f);
 109:Effects/BiquadFilters.h ****             }
 110:Effects/BiquadFilters.h ****             updateCoefficients();
 111:Effects/BiquadFilters.h ****         }
 112:Effects/BiquadFilters.h **** 
 113:Effects/BiquadFilters.h ****         /// Sets Q values in each section for a truly "flat" (-3dB cutoff point) response
 114:Effects/BiquadFilters.h ****         /// NOTE: per limitations of this class this only works for even-order filters
 115:Effects/BiquadFilters.h ****         inline void SetFlatResponse()
 116:Effects/BiquadFilters.h ****         {
 117:Effects/BiquadFilters.h ****             const float angleIncrement = 1.f / (4.f * static_cast<float>(NumSections));
 118:Effects/BiquadFilters.h ****             for (size_t i=0; i<NumSections; i++) {
 119:Effects/BiquadFilters.h ****                 q_[i] = 1.f / (2.f * cosf(PI_F * (angleIncrement * (i * 2 + 1))));
 120:Effects/BiquadFilters.h ****             }
 121:Effects/BiquadFilters.h ****             updateCoefficients();
 122:Effects/BiquadFilters.h ****         }
 123:Effects/BiquadFilters.h **** 
 124:Effects/BiquadFilters.h ****         inline float Process(const float in)
 2473              		.loc 9 124 22 is_stmt 1 view .LVU721
 2474              	.LBB367:
 2475              	.LBB365:
 125:Effects/BiquadFilters.h ****         {
 126:Effects/BiquadFilters.h ****             float out = in;
 127:Effects/BiquadFilters.h ****             for (auto &biquad : biquads_) {
 2476              		.loc 9 127 13 view .LVU722
 2477              	.LBB363:
 2478              	.LBI358:
  39:Effects/BiquadFilters.h ****         {
 2479              		.loc 9 39 22 view .LVU723
 2480              	.LBB361:
  41:Effects/BiquadFilters.h **** 
 2481              		.loc 9 41 13 view .LVU724
  45:Effects/BiquadFilters.h ****             const float &b1 = coefs_[1];
 2482              		.loc 9 45 13 view .LVU725
  46:Effects/BiquadFilters.h ****             const float &b2 = coefs_[2];
 2483              		.loc 9 46 13 view .LVU726
  47:Effects/BiquadFilters.h ****             const float &a1 = coefs_[3];
 2484              		.loc 9 47 13 view .LVU727
  48:Effects/BiquadFilters.h ****             const float &a2 = coefs_[4];
 2485              		.loc 9 48 13 view .LVU728
  49:Effects/BiquadFilters.h **** 
 2486              		.loc 9 49 13 view .LVU729
  52:Effects/BiquadFilters.h ****             s1_[channel] = s2_[channel] + in * b1 - a1 * y;
 2487              		.loc 9 52 13 view .LVU730
  52:Effects/BiquadFilters.h ****             s1_[channel] = s2_[channel] + in * b1 - a1 * y;
 2488              		.loc 9 52 19 is_stmt 0 view .LVU731
 2489 0086 91ED007A 		vldr.32	s14, [r1]
 2490 008a D1ED057A 		vldr.32	s15, [r1, #20]
  53:Effects/BiquadFilters.h ****             s2_[channel] = b2 * in - a2 * y;
 2491              		.loc 9 53 41 view .LVU732
 2492 008e D4ED005A 		vldr.32	s11, [r4]
  53:Effects/BiquadFilters.h ****             s2_[channel] = b2 * in - a2 * y;
 2493              		.loc 9 53 53 view .LVU733
 2494 0092 03F63864 		addw	r4, r3, #3640
  52:Effects/BiquadFilters.h ****             s1_[channel] = s2_[channel] + in * b1 - a1 * y;
 2495              		.loc 9 52 19 view .LVU734
 2496 0096 E7EE267A 		vfma.f32	s15, s14, s13
 2497              	.LVL145:
ARM GAS  /var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccGMqppg.s 			page 75


  53:Effects/BiquadFilters.h ****             s2_[channel] = b2 * in - a2 * y;
 2498              		.loc 9 53 13 is_stmt 1 view .LVU735
  53:Effects/BiquadFilters.h ****             s2_[channel] = b2 * in - a2 * y;
 2499              		.loc 9 53 41 is_stmt 0 view .LVU736
 2500 009a 91ED077A 		vldr.32	s14, [r1, #28]
 2501 009e A6EEA57A 		vfma.f32	s14, s13, s11
  53:Effects/BiquadFilters.h ****             s2_[channel] = b2 * in - a2 * y;
 2502              		.loc 9 53 51 view .LVU737
 2503 00a2 D4ED005A 		vldr.32	s11, [r4]
  54:Effects/BiquadFilters.h ****             return y;
 2504              		.loc 9 54 28 view .LVU738
 2505 00a6 03F63464 		addw	r4, r3, #3636
  54:Effects/BiquadFilters.h ****             return y;
 2506              		.loc 9 54 38 view .LVU739
 2507 00aa 03F63C63 		addw	r3, r3, #3644
  53:Effects/BiquadFilters.h ****             s2_[channel] = b2 * in - a2 * y;
 2508              		.loc 9 53 51 view .LVU740
 2509 00ae A5EEE77A 		vfms.f32	s14, s11, s15
  53:Effects/BiquadFilters.h ****             s2_[channel] = b2 * in - a2 * y;
 2510              		.loc 9 53 26 view .LVU741
 2511 00b2 81ED057A 		vstr.32	s14, [r1, #20]
  54:Effects/BiquadFilters.h ****             return y;
 2512              		.loc 9 54 13 is_stmt 1 view .LVU742
  54:Effects/BiquadFilters.h ****             return y;
 2513              		.loc 9 54 41 is_stmt 0 view .LVU743
 2514 00b6 93ED007A 		vldr.32	s14, [r3]
  54:Effects/BiquadFilters.h ****             return y;
 2515              		.loc 9 54 36 view .LVU744
 2516 00ba D4ED005A 		vldr.32	s11, [r4]
 2517 00be 27EE677A 		vnmul.f32	s14, s14, s15
 2518 00c2 A6EEA57A 		vfma.f32	s14, s13, s11
  54:Effects/BiquadFilters.h ****             return y;
 2519              		.loc 9 54 26 view .LVU745
 2520 00c6 81ED077A 		vstr.32	s14, [r1, #28]
  55:Effects/BiquadFilters.h ****         }
 2521              		.loc 9 55 13 is_stmt 1 view .LVU746
 2522              	.LVL146:
  55:Effects/BiquadFilters.h ****         }
 2523              		.loc 9 55 13 is_stmt 0 view .LVU747
 2524              	.LBE361:
 2525              	.LBE363:
 2526              		.loc 9 127 13 is_stmt 1 view .LVU748
 2527              		.loc 9 127 13 view .LVU749
 2528              		.loc 9 127 13 is_stmt 0 view .LVU750
 2529              	.LBE365:
 2530              	.LBE367:
 2531              	.LBE371:
 2532              	.LBB372:
 2533              	.LBI372:
 154:lib/DaisySP/Source/Utility/dsp.h **** }
 155:lib/DaisySP/Source/Utility/dsp.h **** 
 156:lib/DaisySP/Source/Utility/dsp.h **** /** Curves to use with the fmap function */
 157:lib/DaisySP/Source/Utility/dsp.h **** enum class Mapping
 158:lib/DaisySP/Source/Utility/dsp.h **** {
 159:lib/DaisySP/Source/Utility/dsp.h ****     LINEAR,
 160:lib/DaisySP/Source/Utility/dsp.h ****     EXP,
 161:lib/DaisySP/Source/Utility/dsp.h ****     LOG,
ARM GAS  /var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccGMqppg.s 			page 76


 162:lib/DaisySP/Source/Utility/dsp.h **** };
 163:lib/DaisySP/Source/Utility/dsp.h **** 
 164:lib/DaisySP/Source/Utility/dsp.h **** /** Maps a float between a specified range, using a specified curve.
 165:lib/DaisySP/Source/Utility/dsp.h ****  *
 166:lib/DaisySP/Source/Utility/dsp.h ****  *  \param in a value between 0 to 1 that will be mapped to the new range.
 167:lib/DaisySP/Source/Utility/dsp.h ****  *  \param min the new minimum value
 168:lib/DaisySP/Source/Utility/dsp.h ****  *  \param max the new maxmimum value
 169:lib/DaisySP/Source/Utility/dsp.h ****  *  \param curve a Mapping Value to adjust the response curve of the transformation
 170:lib/DaisySP/Source/Utility/dsp.h ****  *               defaults to Linear. @see Mapping
 171:lib/DaisySP/Source/Utility/dsp.h ****  *
 172:lib/DaisySP/Source/Utility/dsp.h ****  *  When using the log curve min and max, must be greater than zero.
 173:lib/DaisySP/Source/Utility/dsp.h ****  *
 174:lib/DaisySP/Source/Utility/dsp.h ****  *  \retval returns the transformed float within the new range.
 175:lib/DaisySP/Source/Utility/dsp.h **** */
 176:lib/DaisySP/Source/Utility/dsp.h **** inline float
 177:lib/DaisySP/Source/Utility/dsp.h **** fmap(float in, float min, float max, Mapping curve = Mapping::LINEAR)
 178:lib/DaisySP/Source/Utility/dsp.h **** {
 179:lib/DaisySP/Source/Utility/dsp.h ****     switch(curve)
 180:lib/DaisySP/Source/Utility/dsp.h ****     {
 181:lib/DaisySP/Source/Utility/dsp.h ****         case Mapping::EXP:
 182:lib/DaisySP/Source/Utility/dsp.h ****             return fclamp(min + (in * in) * (max - min), min, max);
 183:lib/DaisySP/Source/Utility/dsp.h ****         case Mapping::LOG:
 184:lib/DaisySP/Source/Utility/dsp.h ****         {
 185:lib/DaisySP/Source/Utility/dsp.h ****             const float a = 1.f / log10f(max / min);
 186:lib/DaisySP/Source/Utility/dsp.h ****             return fclamp(min * powf(10, in / a), min, max);
 187:lib/DaisySP/Source/Utility/dsp.h ****         }
 188:lib/DaisySP/Source/Utility/dsp.h ****         case Mapping::LINEAR:
 189:lib/DaisySP/Source/Utility/dsp.h ****         default: return fclamp(min + in * (max - min), min, max);
 190:lib/DaisySP/Source/Utility/dsp.h ****     }
 191:lib/DaisySP/Source/Utility/dsp.h **** }
 192:lib/DaisySP/Source/Utility/dsp.h **** 
 193:lib/DaisySP/Source/Utility/dsp.h **** /** Simple 3-point median filter
 194:lib/DaisySP/Source/Utility/dsp.h **** c/o stephen mccaul
 195:lib/DaisySP/Source/Utility/dsp.h **** */
 196:lib/DaisySP/Source/Utility/dsp.h **** template <typename T>
 197:lib/DaisySP/Source/Utility/dsp.h **** T median(T a, T b, T c)
 198:lib/DaisySP/Source/Utility/dsp.h **** {
 199:lib/DaisySP/Source/Utility/dsp.h ****     return (b < a) ? (b < c) ? (c < a) ? c : a : b
 200:lib/DaisySP/Source/Utility/dsp.h ****                    : (a < c) ? (c < b) ? c : b : a;
 201:lib/DaisySP/Source/Utility/dsp.h **** }
 202:lib/DaisySP/Source/Utility/dsp.h **** 
 203:lib/DaisySP/Source/Utility/dsp.h **** /** Ported from pichenettes/eurorack/plaits/dsp/oscillator/oscillator.h
 204:lib/DaisySP/Source/Utility/dsp.h **** */
 205:lib/DaisySP/Source/Utility/dsp.h **** inline float ThisBlepSample(float t)
 206:lib/DaisySP/Source/Utility/dsp.h **** {
 207:lib/DaisySP/Source/Utility/dsp.h ****     return 0.5f * t * t;
 208:lib/DaisySP/Source/Utility/dsp.h **** }
 209:lib/DaisySP/Source/Utility/dsp.h **** 
 210:lib/DaisySP/Source/Utility/dsp.h **** /** Ported from pichenettes/eurorack/plaits/dsp/oscillator/oscillator.h
 211:lib/DaisySP/Source/Utility/dsp.h **** */
 212:lib/DaisySP/Source/Utility/dsp.h **** inline float NextBlepSample(float t)
 213:lib/DaisySP/Source/Utility/dsp.h **** {
 214:lib/DaisySP/Source/Utility/dsp.h ****     t = 1.0f - t;
 215:lib/DaisySP/Source/Utility/dsp.h ****     return -0.5f * t * t;
 216:lib/DaisySP/Source/Utility/dsp.h **** }
 217:lib/DaisySP/Source/Utility/dsp.h **** 
 218:lib/DaisySP/Source/Utility/dsp.h **** /** Ported from pichenettes/eurorack/plaits/dsp/oscillator/oscillator.h
ARM GAS  /var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccGMqppg.s 			page 77


 219:lib/DaisySP/Source/Utility/dsp.h **** */
 220:lib/DaisySP/Source/Utility/dsp.h **** inline float NextIntegratedBlepSample(float t)
 221:lib/DaisySP/Source/Utility/dsp.h **** {
 222:lib/DaisySP/Source/Utility/dsp.h ****     const float t1 = 0.5f * t;
 223:lib/DaisySP/Source/Utility/dsp.h ****     const float t2 = t1 * t1;
 224:lib/DaisySP/Source/Utility/dsp.h ****     const float t4 = t2 * t2;
 225:lib/DaisySP/Source/Utility/dsp.h ****     return 0.1875f - t1 + 1.5f * t2 - t4;
 226:lib/DaisySP/Source/Utility/dsp.h **** }
 227:lib/DaisySP/Source/Utility/dsp.h **** 
 228:lib/DaisySP/Source/Utility/dsp.h **** /** Ported from pichenettes/eurorack/plaits/dsp/oscillator/oscillator.h
 229:lib/DaisySP/Source/Utility/dsp.h **** */
 230:lib/DaisySP/Source/Utility/dsp.h **** inline float ThisIntegratedBlepSample(float t)
 231:lib/DaisySP/Source/Utility/dsp.h **** {
 232:lib/DaisySP/Source/Utility/dsp.h ****     return NextIntegratedBlepSample(1.0f - t);
 233:lib/DaisySP/Source/Utility/dsp.h **** }
 234:lib/DaisySP/Source/Utility/dsp.h **** 
 235:lib/DaisySP/Source/Utility/dsp.h **** /** Soft Limiting function ported extracted from pichenettes/stmlib */
 236:lib/DaisySP/Source/Utility/dsp.h **** inline float SoftLimit(float x)
 237:lib/DaisySP/Source/Utility/dsp.h **** {
 238:lib/DaisySP/Source/Utility/dsp.h ****     return x * (27.f + x * x) / (27.f + 9.f * x * x);
 239:lib/DaisySP/Source/Utility/dsp.h **** }
 240:lib/DaisySP/Source/Utility/dsp.h **** 
 241:lib/DaisySP/Source/Utility/dsp.h **** /** Soft Clipping function extracted from pichenettes/stmlib */
 242:lib/DaisySP/Source/Utility/dsp.h **** inline float SoftClip(float x)
 2534              		.loc 7 242 14 is_stmt 1 view .LVU751
 2535              	.LBB373:
 243:lib/DaisySP/Source/Utility/dsp.h **** {
 244:lib/DaisySP/Source/Utility/dsp.h ****     if(x < -3.0f)
 2536              		.loc 7 244 5 view .LVU752
 2537 00ca B8EE087A 		vmov.f32	s14, #-3.0e+0
 2538 00ce F4EEC77A 		vcmpe.f32	s15, s14
 2539 00d2 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 2540 00d6 2BD4     		bmi	.L147
 2541              	.LVL147:
 2542              	.LBB374:
 2543              	.LBI374:
 242:lib/DaisySP/Source/Utility/dsp.h **** {
 2544              		.loc 7 242 14 view .LVU753
 2545              	.LBB375:
 245:lib/DaisySP/Source/Utility/dsp.h ****         return -1.0f;
 246:lib/DaisySP/Source/Utility/dsp.h ****     else if(x > 3.0f)
 2546              		.loc 7 246 10 view .LVU754
 2547 00d8 B0EE087A 		vmov.f32	s14, #3.0e+0
 2548 00dc F4EEC77A 		vcmpe.f32	s15, s14
 2549 00e0 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 2550 00e4 27DC     		bgt	.L148
 247:lib/DaisySP/Source/Utility/dsp.h ****         return 1.0f;
 248:lib/DaisySP/Source/Utility/dsp.h ****     else
 249:lib/DaisySP/Source/Utility/dsp.h ****         return SoftLimit(x);
 2551              		.loc 7 249 9 view .LVU755
 2552              	.LVL148:
 2553              	.LBB376:
 2554              	.LBI376:
 236:lib/DaisySP/Source/Utility/dsp.h **** {
 2555              		.loc 7 236 14 view .LVU756
 2556              	.LBB377:
 238:lib/DaisySP/Source/Utility/dsp.h **** }
ARM GAS  /var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccGMqppg.s 			page 78


 2557              		.loc 7 238 5 view .LVU757
 238:lib/DaisySP/Source/Utility/dsp.h **** }
 2558              		.loc 7 238 22 is_stmt 0 view .LVU758
 2559 00e6 B3EE0B7A 		vmov.f32	s14, #2.7e+1
 238:lib/DaisySP/Source/Utility/dsp.h **** }
 2560              		.loc 7 238 45 view .LVU759
 2561 00ea F2EE025A 		vmov.f32	s11, #9.0e+0
 238:lib/DaisySP/Source/Utility/dsp.h **** }
 2562              		.loc 7 238 22 view .LVU760
 2563 00ee F0EE476A 		vmov.f32	s13, s14
 238:lib/DaisySP/Source/Utility/dsp.h **** }
 2564              		.loc 7 238 45 view .LVU761
 2565 00f2 67EEA55A 		vmul.f32	s11, s15, s11
 238:lib/DaisySP/Source/Utility/dsp.h **** }
 2566              		.loc 7 238 22 view .LVU762
 2567 00f6 E7EEA76A 		vfma.f32	s13, s15, s15
 238:lib/DaisySP/Source/Utility/dsp.h **** }
 2568              		.loc 7 238 39 view .LVU763
 2569 00fa A5EEA77A 		vfma.f32	s14, s11, s15
 238:lib/DaisySP/Source/Utility/dsp.h **** }
 2570              		.loc 7 238 14 view .LVU764
 2571 00fe 66EEA76A 		vmul.f32	s13, s13, s15
 238:lib/DaisySP/Source/Utility/dsp.h **** }
 2572              		.loc 7 238 52 view .LVU765
 2573 0102 86EE870A 		vdiv.f32	s0, s13, s14
 2574              	.LVL149:
 2575              	.L146:
 238:lib/DaisySP/Source/Utility/dsp.h **** }
 2576              		.loc 7 238 52 view .LVU766
 2577              	.LBE377:
 2578              	.LBE376:
 2579              	.LBE375:
 2580              	.LBE374:
 2581              	.LBE373:
 2582              	.LBE372:
  74:Effects/EchoDelay.h ****             out = delayLine_.Read();
  75:Effects/EchoDelay.h ****             out = bpf_.Process(out);
  76:Effects/EchoDelay.h ****             out = daisysp::SoftClip(out);
  77:Effects/EchoDelay.h ****             delayLine_.Write(out * feedback_ + in);
 2583              		.loc 5 77 29 view .LVU767
 2584 0106 90ED047A 		vldr.32	s14, [r0, #16]
 2585              	.LBB381:
 2586              	.LBB382:
  72:lib/DaisySP/Source/Utility/delayline.h ****         write_ptr_        = (write_ptr_ - 1 + max_size) % max_size;
 2587              		.loc 8 72 27 view .LVU768
 2588 010a 00EB8203 		add	r3, r0, r2, lsl #2
 2589              	.LBE382:
 2590              	.LBE381:
 2591              		.loc 5 77 29 view .LVU769
 2592 010e F0EE467A 		vmov.f32	s15, s12
 2593 0112 E7EE007A 		vfma.f32	s15, s14, s0
 2594              	.LVL150:
 2595              	.LBB384:
 2596              	.LBI381:
  70:lib/DaisySP/Source/Utility/delayline.h ****     {
 2597              		.loc 8 70 17 is_stmt 1 view .LVU770
 2598              	.LBB383:
ARM GAS  /var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccGMqppg.s 			page 79


  72:lib/DaisySP/Source/Utility/delayline.h ****         write_ptr_        = (write_ptr_ - 1 + max_size) % max_size;
 2599              		.loc 8 72 27 is_stmt 0 view .LVU771
 2600 0116 C3ED087A 		vstr.32	s15, [r3, #32]
  73:lib/DaisySP/Source/Utility/delayline.h ****     }
 2601              		.loc 8 73 45 view .LVU772
 2602 011a 02F53B43 		add	r3, r2, #47872
  73:lib/DaisySP/Source/Utility/delayline.h ****     }
 2603              		.loc 8 73 57 view .LVU773
 2604 011e 4BF68032 		movw	r2, #48000
  73:lib/DaisySP/Source/Utility/delayline.h ****     }
 2605              		.loc 8 73 45 view .LVU774
 2606 0122 7F33     		adds	r3, r3, #127
  73:lib/DaisySP/Source/Utility/delayline.h ****     }
 2607              		.loc 8 73 57 view .LVU775
 2608 0124 B3FBF2F1 		udiv	r1, r3, r2
 2609 0128 02FB1133 		mls	r3, r2, r1, r3
  73:lib/DaisySP/Source/Utility/delayline.h ****     }
 2610              		.loc 8 73 27 view .LVU776
 2611 012c 8361     		str	r3, [r0, #24]
 2612              	.LVL151:
  73:lib/DaisySP/Source/Utility/delayline.h ****     }
 2613              		.loc 8 73 27 view .LVU777
 2614              	.LBE383:
 2615              	.LBE384:
  78:Effects/EchoDelay.h ****             return out;
  79:Effects/EchoDelay.h ****         }
 2616              		.loc 5 79 9 view .LVU778
 2617 012e 10BD     		pop	{r4, pc}
 2618              	.LVL152:
 2619              	.L147:
 2620              	.LBB385:
 2621              	.LBB380:
 245:lib/DaisySP/Source/Utility/dsp.h ****     else if(x > 3.0f)
 2622              		.loc 7 245 17 view .LVU779
 2623 0130 BFEE000A 		vmov.f32	s0, #-1.0e+0
 2624              	.LVL153:
 245:lib/DaisySP/Source/Utility/dsp.h ****     else if(x > 3.0f)
 2625              		.loc 7 245 17 view .LVU780
 2626 0134 E7E7     		b	.L146
 2627              	.LVL154:
 2628              	.L148:
 2629              	.LBB379:
 2630              	.LBB378:
 247:lib/DaisySP/Source/Utility/dsp.h ****     else
 2631              		.loc 7 247 16 view .LVU781
 2632 0136 B7EE000A 		vmov.f32	s0, #1.0e+0
 2633              	.LVL155:
 247:lib/DaisySP/Source/Utility/dsp.h ****     else
 2634              		.loc 7 247 16 view .LVU782
 2635 013a E4E7     		b	.L146
 2636              	.LBE378:
 2637              	.LBE379:
 2638              	.LBE380:
 2639              	.LBE385:
 2640              		.cfi_endproc
 2641              	.LFE5499:
 2643              		.section	.text._Z18ProcessAudioOutputPfjf,"ax",%progbits
ARM GAS  /var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccGMqppg.s 			page 80


 2644              		.align	1
 2645              		.global	_Z18ProcessAudioOutputPfjf
 2646              		.syntax unified
 2647              		.thumb
 2648              		.thumb_func
 2650              	_Z18ProcessAudioOutputPfjf:
 2651              	.LVL156:
 2652              	.LFB5068:
 354:AudioProcessor.cpp **** void ProcessAudioOutput(AudioHandle::InterleavingOutputBuffer out, size_t size, float dry_level) {
 2653              		.loc 3 354 98 is_stmt 1 view -0
 2654              		.cfi_startproc
 2655              		@ args = 0, pretend = 0, frame = 0
 2656              		@ frame_needed = 0, uses_anonymous_args = 0
 356:AudioProcessor.cpp ****     float wet_level = 1.0f - dry_level; 
 2657              		.loc 3 356 5 view .LVU784
 354:AudioProcessor.cpp **** void ProcessAudioOutput(AudioHandle::InterleavingOutputBuffer out, size_t size, float dry_level) {
 2658              		.loc 3 354 98 is_stmt 0 view .LVU785
 2659 0000 70B5     		push	{r4, r5, r6, lr}
 2660              		.cfi_def_cfa_offset 16
 2661              		.cfi_offset 4, -16
 2662              		.cfi_offset 5, -12
 2663              		.cfi_offset 6, -8
 2664              		.cfi_offset 14, -4
 2665 0002 2DED068B 		vpush.64	{d8, d9, d10}
 2666              		.cfi_def_cfa_offset 40
 2667              		.cfi_offset 80, -40
 2668              		.cfi_offset 81, -36
 2669              		.cfi_offset 82, -32
 2670              		.cfi_offset 83, -28
 2671              		.cfi_offset 84, -24
 2672              		.cfi_offset 85, -20
 356:AudioProcessor.cpp ****     float wet_level = 1.0f - dry_level; 
 2673              		.loc 3 356 11 view .LVU786
 2674 0006 B7EE00AA 		vmov.f32	s20, #1.0e+0
 354:AudioProcessor.cpp **** void ProcessAudioOutput(AudioHandle::InterleavingOutputBuffer out, size_t size, float dry_level) {
 2675              		.loc 3 354 98 view .LVU787
 2676 000a 0E46     		mov	r6, r1
 2677 000c F0EE409A 		vmov.f32	s19, s0
 2678 0010 0446     		mov	r4, r0
 2679              	.LBB386:
 359:AudioProcessor.cpp ****     for (size_t i = 0; i < size; i += 2) {
 2680              		.loc 3 359 17 view .LVU788
 2681 0012 0025     		movs	r5, #0
 2682              	.LBE386:
 356:AudioProcessor.cpp ****     float wet_level = 1.0f - dry_level; 
 2683              		.loc 3 356 11 view .LVU789
 2684 0014 3AEE40AA 		vsub.f32	s20, s20, s0
 2685              	.LVL157:
 357:AudioProcessor.cpp ****     float norm_factor = (float)NUM_VOICES * 1.0f; // Was 1.5f
 2686              		.loc 3 357 5 is_stmt 1 view .LVU790
 359:AudioProcessor.cpp ****     for (size_t i = 0; i < size; i += 2) {
 2687              		.loc 3 359 5 view .LVU791
 2688              	.L151:
 2689              	.LBB389:
 359:AudioProcessor.cpp ****     for (size_t i = 0; i < size; i += 2) {
 2690              		.loc 3 359 26 discriminator 3 view .LVU792
 2691 0018 B542     		cmp	r5, r6
ARM GAS  /var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccGMqppg.s 			page 81


 2692 001a 04F10804 		add	r4, r4, #8
 2693 001e 36D2     		bcs	.L149
 2694              	.LBB387:
 360:AudioProcessor.cpp ****         float dry_left  = mix_buffer_out[i/2] / 32768.f / norm_factor;
 2695              		.loc 3 360 9 discriminator 2 view .LVU793
 360:AudioProcessor.cpp ****         float dry_left  = mix_buffer_out[i/2] / 32768.f / norm_factor;
 2696              		.loc 3 360 43 is_stmt 0 discriminator 2 view .LVU794
 2697 0020 6908     		lsrs	r1, r5, #1
 360:AudioProcessor.cpp ****         float dry_left  = mix_buffer_out[i/2] / 32768.f / norm_factor;
 2698              		.loc 3 360 45 discriminator 2 view .LVU795
 2699 0022 1C4A     		ldr	r2, .L152
 361:AudioProcessor.cpp ****         float dry_right = mix_buffer_aux[i/2] / 32768.f / norm_factor;
 2700              		.loc 3 361 45 discriminator 2 view .LVU796
 2701 0024 1C4B     		ldr	r3, .L152+4
 360:AudioProcessor.cpp ****         float dry_left  = mix_buffer_out[i/2] / 32768.f / norm_factor;
 2702              		.loc 3 360 15 discriminator 2 view .LVU797
 2703 0026 F5EE007A 		vmov.f32	s15, #2.5e-1
 360:AudioProcessor.cpp ****         float dry_left  = mix_buffer_out[i/2] / 32768.f / norm_factor;
 2704              		.loc 3 360 45 discriminator 2 view .LVU798
 2705 002a 02EB8102 		add	r2, r2, r1, lsl #2
 360:AudioProcessor.cpp ****         float dry_left  = mix_buffer_out[i/2] / 32768.f / norm_factor;
 2706              		.loc 3 360 47 discriminator 2 view .LVU799
 2707 002e 9FED1B7A 		vldr.32	s14, .L152+8
 361:AudioProcessor.cpp ****         float dry_right = mix_buffer_aux[i/2] / 32768.f / norm_factor;
 2708              		.loc 3 361 45 discriminator 2 view .LVU800
 2709 0032 03EB8103 		add	r3, r3, r1, lsl #2
 363:AudioProcessor.cpp ****         float wet_left = delay.Process(dry_left); 
 2710              		.loc 3 363 39 discriminator 2 view .LVU801
 2711 0036 1A48     		ldr	r0, .L152+12
 360:AudioProcessor.cpp ****         float dry_left  = mix_buffer_out[i/2] / 32768.f / norm_factor;
 2712              		.loc 3 360 47 discriminator 2 view .LVU802
 2713 0038 92ED009A 		vldr.32	s18, [r2]
 2714              	.LBE387:
 359:AudioProcessor.cpp ****     for (size_t i = 0; i < size; i += 2) {
 2715              		.loc 3 359 36 discriminator 2 view .LVU803
 2716 003c 0235     		adds	r5, r5, #2
 2717              	.LVL158:
 2718              	.LBB388:
 361:AudioProcessor.cpp ****         float dry_right = mix_buffer_aux[i/2] / 32768.f / norm_factor;
 2719              		.loc 3 361 47 discriminator 2 view .LVU804
 2720 003e D3ED008A 		vldr.32	s17, [r3]
 360:AudioProcessor.cpp ****         float dry_left  = mix_buffer_out[i/2] / 32768.f / norm_factor;
 2721              		.loc 3 360 47 discriminator 2 view .LVU805
 2722 0042 29EE079A 		vmul.f32	s18, s18, s14
 361:AudioProcessor.cpp ****         float dry_right = mix_buffer_aux[i/2] / 32768.f / norm_factor;
 2723              		.loc 3 361 47 discriminator 2 view .LVU806
 2724 0046 68EE878A 		vmul.f32	s17, s17, s14
 360:AudioProcessor.cpp ****         float dry_left  = mix_buffer_out[i/2] / 32768.f / norm_factor;
 2725              		.loc 3 360 15 discriminator 2 view .LVU807
 2726 004a 29EE279A 		vmul.f32	s18, s18, s15
 2727              	.LVL159:
 361:AudioProcessor.cpp ****         float dry_right = mix_buffer_aux[i/2] / 32768.f / norm_factor;
 2728              		.loc 3 361 9 is_stmt 1 discriminator 2 view .LVU808
 361:AudioProcessor.cpp ****         float dry_right = mix_buffer_aux[i/2] / 32768.f / norm_factor;
 2729              		.loc 3 361 15 is_stmt 0 discriminator 2 view .LVU809
 2730 004e 68EEA78A 		vmul.f32	s17, s17, s15
 2731              	.LVL160:
ARM GAS  /var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccGMqppg.s 			page 82


 363:AudioProcessor.cpp ****         float wet_left = delay.Process(dry_left); 
 2732              		.loc 3 363 9 is_stmt 1 discriminator 2 view .LVU810
 363:AudioProcessor.cpp ****         float wet_left = delay.Process(dry_left); 
 2733              		.loc 3 363 39 is_stmt 0 discriminator 2 view .LVU811
 2734 0052 B0EE490A 		vmov.f32	s0, s18
 2735 0056 FFF7FEFF 		bl	_ZN10infrasonic9EchoDelayILj48000EE7ProcessEf
 2736              	.LVL161:
 2737 005a B0EE408A 		vmov.f32	s16, s0
 2738              	.LVL162:
 364:AudioProcessor.cpp ****         float wet_right = delay.Process(dry_right); 
 2739              		.loc 3 364 9 is_stmt 1 discriminator 2 view .LVU812
 364:AudioProcessor.cpp ****         float wet_right = delay.Process(dry_right); 
 2740              		.loc 3 364 40 is_stmt 0 discriminator 2 view .LVU813
 2741 005e 1048     		ldr	r0, .L152+12
 2742 0060 B0EE680A 		vmov.f32	s0, s17
 2743              	.LVL163:
 364:AudioProcessor.cpp ****         float wet_right = delay.Process(dry_right); 
 2744              		.loc 3 364 40 discriminator 2 view .LVU814
 2745 0064 FFF7FEFF 		bl	_ZN10infrasonic9EchoDelayILj48000EE7ProcessEf
 2746              	.LVL164:
 367:AudioProcessor.cpp ****         out[i]   = ((dry_left * dry_level) + (wet_left * wet_level)) * MASTER_VOLUME;
 2747              		.loc 3 367 9 is_stmt 1 discriminator 2 view .LVU815
 368:AudioProcessor.cpp ****         out[i+1] = ((dry_right * dry_level) + (wet_right * wet_level)) * MASTER_VOLUME;
 2748              		.loc 3 368 58 is_stmt 0 discriminator 2 view .LVU816
 2749 0068 6AEE007A 		vmul.f32	s15, s20, s0
 367:AudioProcessor.cpp ****         out[i]   = ((dry_left * dry_level) + (wet_left * wet_level)) * MASTER_VOLUME;
 2750              		.loc 3 367 56 discriminator 2 view .LVU817
 2751 006c 2AEE088A 		vmul.f32	s16, s20, s16
 2752              	.LVL165:
 367:AudioProcessor.cpp ****         out[i]   = ((dry_left * dry_level) + (wet_left * wet_level)) * MASTER_VOLUME;
 2753              		.loc 3 367 70 discriminator 2 view .LVU818
 2754 0070 9FED0C7A 		vldr.32	s14, .L152+16
 368:AudioProcessor.cpp ****         out[i+1] = ((dry_right * dry_level) + (wet_right * wet_level)) * MASTER_VOLUME;
 2755              		.loc 3 368 45 discriminator 2 view .LVU819
 2756 0074 E9EEA87A 		vfma.f32	s15, s19, s17
 367:AudioProcessor.cpp ****         out[i]   = ((dry_left * dry_level) + (wet_left * wet_level)) * MASTER_VOLUME;
 2757              		.loc 3 367 44 discriminator 2 view .LVU820
 2758 0078 A9EE898A 		vfma.f32	s16, s19, s18
 368:AudioProcessor.cpp ****         out[i+1] = ((dry_right * dry_level) + (wet_right * wet_level)) * MASTER_VOLUME;
 2759              		.loc 3 368 72 discriminator 2 view .LVU821
 2760 007c 67EE877A 		vmul.f32	s15, s15, s14
 367:AudioProcessor.cpp ****         out[i]   = ((dry_left * dry_level) + (wet_left * wet_level)) * MASTER_VOLUME;
 2761              		.loc 3 367 70 discriminator 2 view .LVU822
 2762 0080 28EE078A 		vmul.f32	s16, s16, s14
 368:AudioProcessor.cpp ****         out[i+1] = ((dry_right * dry_level) + (wet_right * wet_level)) * MASTER_VOLUME;
 2763              		.loc 3 368 18 discriminator 2 view .LVU823
 2764 0084 44ED017A 		vstr.32	s15, [r4, #-4]
 367:AudioProcessor.cpp ****         out[i]   = ((dry_left * dry_level) + (wet_left * wet_level)) * MASTER_VOLUME;
 2765              		.loc 3 367 18 discriminator 2 view .LVU824
 2766 0088 04ED028A 		vstr.32	s16, [r4, #-8]
 368:AudioProcessor.cpp ****         out[i+1] = ((dry_right * dry_level) + (wet_right * wet_level)) * MASTER_VOLUME;
 2767              		.loc 3 368 9 is_stmt 1 discriminator 2 view .LVU825
 2768              	.LBE388:
 359:AudioProcessor.cpp ****     for (size_t i = 0; i < size; i += 2) {
 2769              		.loc 3 359 5 discriminator 2 view .LVU826
 2770              	.LVL166:
 359:AudioProcessor.cpp ****     for (size_t i = 0; i < size; i += 2) {
ARM GAS  /var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccGMqppg.s 			page 83


 2771              		.loc 3 359 5 is_stmt 0 discriminator 2 view .LVU827
 2772 008c C4E7     		b	.L151
 2773              	.LVL167:
 2774              	.L149:
 359:AudioProcessor.cpp ****     for (size_t i = 0; i < size; i += 2) {
 2775              		.loc 3 359 5 discriminator 2 view .LVU828
 2776              	.LBE389:
 370:AudioProcessor.cpp **** }
 2777              		.loc 3 370 1 view .LVU829
 2778 008e BDEC068B 		vldm	sp!, {d8-d10}
 2779              		.cfi_restore 84
 2780              		.cfi_restore 85
 2781              		.cfi_restore 82
 2782              		.cfi_restore 83
 2783              		.cfi_restore 80
 2784              		.cfi_restore 81
 2785              		.cfi_def_cfa_offset 16
 2786              	.LVL168:
 370:AudioProcessor.cpp **** }
 2787              		.loc 3 370 1 view .LVU830
 2788 0092 70BD     		pop	{r4, r5, r6, pc}
 2789              	.LVL169:
 2790              	.L153:
 370:AudioProcessor.cpp **** }
 2791              		.loc 3 370 1 view .LVU831
 2792              		.align	2
 2793              	.L152:
 2794 0094 00000000 		.word	.LANCHOR12
 2795 0098 00000000 		.word	.LANCHOR13
 2796 009c 00000038 		.word	939524096
 2797 00a0 00000000 		.word	delay
 2798 00a4 3333333F 		.word	1060320051
 2799              		.cfi_endproc
 2800              	.LFE5068:
 2802              		.section	.text._Z13AudioCallbackPKfPfj,"ax",%progbits
 2803              		.align	1
 2804              		.global	_Z13AudioCallbackPKfPfj
 2805              		.syntax unified
 2806              		.thumb
 2807              		.thumb_func
 2809              	_Z13AudioCallbackPKfPfj:
 2810              	.LVL170:
 2811              	.LFB5059:
  74:AudioProcessor.cpp ****                  size_t size) {
 2812              		.loc 3 74 31 is_stmt 1 view -0
 2813              		.cfi_startproc
 2814              		@ args = 0, pretend = 0, frame = 0
 2815              		@ frame_needed = 0, uses_anonymous_args = 0
  75:AudioProcessor.cpp ****     cpu_meter.OnBlockStart(); // Mark the beginning of the audio block
 2816              		.loc 3 75 5 view .LVU833
 2817              	.LBB399:
 2818              	.LBI399:
 2819              		.file 10 "lib/libdaisy/src/util/CpuLoadMeter.h"
   1:lib/libdaisy/src/util/CpuLoadMeter.h **** #pragma once
   2:lib/libdaisy/src/util/CpuLoadMeter.h **** 
   3:lib/libdaisy/src/util/CpuLoadMeter.h **** #include "sys/system.h"
   4:lib/libdaisy/src/util/CpuLoadMeter.h **** #include <cmath>
ARM GAS  /var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccGMqppg.s 			page 84


   5:lib/libdaisy/src/util/CpuLoadMeter.h **** 
   6:lib/libdaisy/src/util/CpuLoadMeter.h **** namespace daisy
   7:lib/libdaisy/src/util/CpuLoadMeter.h **** {
   8:lib/libdaisy/src/util/CpuLoadMeter.h **** /** @brief CPU load metering
   9:lib/libdaisy/src/util/CpuLoadMeter.h ****  *  @author jelliesen
  10:lib/libdaisy/src/util/CpuLoadMeter.h ****  *  @addtogroup utility
  11:lib/libdaisy/src/util/CpuLoadMeter.h ****  * 
  12:lib/libdaisy/src/util/CpuLoadMeter.h ****  *  To measure the CPU load of your audio processing, create a CpuLoadMeter
  13:lib/libdaisy/src/util/CpuLoadMeter.h ****  *  and initialize it with your block size and sample rate.
  14:lib/libdaisy/src/util/CpuLoadMeter.h ****  *  Then at the beginning of the audio callback, call `OnBlockStart()`, 
  15:lib/libdaisy/src/util/CpuLoadMeter.h ****  *  and at the end of the audio callback, call `OnBlockEnd()`.
  16:lib/libdaisy/src/util/CpuLoadMeter.h ****  *  You can then read out the minimum, maximum and average CPU load.
  17:lib/libdaisy/src/util/CpuLoadMeter.h ****  */
  18:lib/libdaisy/src/util/CpuLoadMeter.h **** class CpuLoadMeter
  19:lib/libdaisy/src/util/CpuLoadMeter.h **** {
  20:lib/libdaisy/src/util/CpuLoadMeter.h ****   public:
  21:lib/libdaisy/src/util/CpuLoadMeter.h ****     CpuLoadMeter(){};
  22:lib/libdaisy/src/util/CpuLoadMeter.h **** 
  23:lib/libdaisy/src/util/CpuLoadMeter.h ****     /** Initializes the CpuLoadMeter for a particular sample rate and block size.
  24:lib/libdaisy/src/util/CpuLoadMeter.h ****      *  @param sampleRateInHz           The sample rate in Hz
  25:lib/libdaisy/src/util/CpuLoadMeter.h ****      *  @param blockSizeInSamples       The block size in samples
  26:lib/libdaisy/src/util/CpuLoadMeter.h ****      *  @param smoothingFilterCutoffHz  The cutoff frequency of the smoothing filter that's used to
  27:lib/libdaisy/src/util/CpuLoadMeter.h ****      *                                  create the average CPU load reading.
  28:lib/libdaisy/src/util/CpuLoadMeter.h ****      */
  29:lib/libdaisy/src/util/CpuLoadMeter.h ****     void Init(float sampleRateInHz,
  30:lib/libdaisy/src/util/CpuLoadMeter.h ****               int   blockSizeInSamples,
  31:lib/libdaisy/src/util/CpuLoadMeter.h ****               float smoothingFilterCutoffHz = 1.0f)
  32:lib/libdaisy/src/util/CpuLoadMeter.h ****     {
  33:lib/libdaisy/src/util/CpuLoadMeter.h ****         const auto secPerBlock = float(blockSizeInSamples) / sampleRateInHz;
  34:lib/libdaisy/src/util/CpuLoadMeter.h ****         const auto ticksPerS   = float(System::GetTickFreq());
  35:lib/libdaisy/src/util/CpuLoadMeter.h ****         ticksPerBlockInv_      = 1.0f / (ticksPerS * secPerBlock);
  36:lib/libdaisy/src/util/CpuLoadMeter.h **** 
  37:lib/libdaisy/src/util/CpuLoadMeter.h ****         // update filter coefficient for smoothing filter (1pole lowpass)
  38:lib/libdaisy/src/util/CpuLoadMeter.h ****         const auto blockRateInHz = sampleRateInHz / float(blockSizeInSamples);
  39:lib/libdaisy/src/util/CpuLoadMeter.h ****         const auto cutoffNormalized
  40:lib/libdaisy/src/util/CpuLoadMeter.h ****             = smoothingFilterCutoffHz * 2.0f * 3.141592653f / blockRateInHz;
  41:lib/libdaisy/src/util/CpuLoadMeter.h ****         // according to
  42:lib/libdaisy/src/util/CpuLoadMeter.h ****         // https://en.wikipedia.org/wiki/Low-pass_filter#Simple_infinite_impulse_response_filter
  43:lib/libdaisy/src/util/CpuLoadMeter.h ****         smoothingConstant_ = cutoffNormalized / (cutoffNormalized + 1.0f);
  44:lib/libdaisy/src/util/CpuLoadMeter.h **** 
  45:lib/libdaisy/src/util/CpuLoadMeter.h ****         Reset();
  46:lib/libdaisy/src/util/CpuLoadMeter.h ****     }
  47:lib/libdaisy/src/util/CpuLoadMeter.h **** 
  48:lib/libdaisy/src/util/CpuLoadMeter.h ****     /** Call this at the beginning of your audio callback */
  49:lib/libdaisy/src/util/CpuLoadMeter.h ****     void OnBlockStart() { currentBlockStartTicks_ = System::GetTick(); }
 2820              		.loc 10 49 10 view .LVU834
 2821              	.LBB400:
 2822              		.loc 10 49 27 view .LVU835
 2823              	.LBE400:
 2824              	.LBE399:
  74:AudioProcessor.cpp ****                  size_t size) {
 2825              		.loc 3 74 31 is_stmt 0 view .LVU836
 2826 0000 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
 2827              		.cfi_def_cfa_offset 32
 2828              		.cfi_offset 3, -32
 2829              		.cfi_offset 4, -28
 2830              		.cfi_offset 5, -24
ARM GAS  /var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccGMqppg.s 			page 85


 2831              		.cfi_offset 6, -20
 2832              		.cfi_offset 7, -16
 2833              		.cfi_offset 8, -12
 2834              		.cfi_offset 9, -8
 2835              		.cfi_offset 14, -4
 2836              	.LBB403:
 2837              	.LBB401:
 2838              		.loc 10 49 51 view .LVU837
 2839 0004 534C     		ldr	r4, .L172
 2840              	.LBE401:
 2841              	.LBE403:
  74:AudioProcessor.cpp ****                  size_t size) {
 2842              		.loc 3 74 31 view .LVU838
 2843 0006 1646     		mov	r6, r2
 2844 0008 0F46     		mov	r7, r1
 2845 000a 2DED028B 		vpush.64	{d8}
 2846              		.cfi_def_cfa_offset 40
 2847              		.cfi_offset 80, -40
 2848              		.cfi_offset 81, -36
 2849              	.LBB404:
 2850              	.LBB402:
 2851              		.loc 10 49 68 view .LVU839
 2852 000e FFF7FEFF 		bl	_ZN5daisy6System7GetTickEv
 2853              	.LVL171:
 2854              		.loc 10 49 51 view .LVU840
 2855 0012 A060     		str	r0, [r4, #8]
 2856              	.LVL172:
 2857              		.loc 10 49 51 view .LVU841
 2858              	.LBE402:
 2859              	.LBE404:
  78:AudioProcessor.cpp ****     ProcessControls();
 2860              		.loc 3 78 5 is_stmt 1 view .LVU842
  78:AudioProcessor.cpp ****     ProcessControls();
 2861              		.loc 3 78 20 is_stmt 0 view .LVU843
 2862 0014 FFF7FEFF 		bl	_Z15ProcessControlsv
 2863              	.LVL173:
  79:AudioProcessor.cpp ****     ReadKnobValues();
 2864              		.loc 3 79 5 is_stmt 1 view .LVU844
  89:AudioProcessor.cpp ****     morph_knob_val   = morph_knob_val   * (1.0f - intensity_factor) + touch_control * intensity_fac
 2865              		.loc 3 89 85 is_stmt 0 view .LVU845
 2866 0018 B6EE007A 		vmov.f32	s14, #5.0e-1
  79:AudioProcessor.cpp ****     ReadKnobValues();
 2867              		.loc 3 79 19 view .LVU846
 2868 001c FFF7FEFF 		bl	_Z14ReadKnobValuesv
 2869              	.LVL174:
  82:AudioProcessor.cpp ****     float touch_control = touch_cv_value; 
 2870              		.loc 3 82 5 is_stmt 1 view .LVU847
  82:AudioProcessor.cpp ****     float touch_control = touch_cv_value; 
 2871              		.loc 3 82 27 is_stmt 0 view .LVU848
 2872 0020 4D4B     		ldr	r3, .L172+4
 2873 0022 D3ED007A 		vldr.32	s15, [r3]
 2874              	.LVL175:
  86:AudioProcessor.cpp ****     float intensity_factor = 0.5f; // 0.0 = knob only, 1.0 = touch only, 0.5 = average
 2875              		.loc 3 86 5 is_stmt 1 view .LVU849
  89:AudioProcessor.cpp ****     morph_knob_val   = morph_knob_val   * (1.0f - intensity_factor) + touch_control * intensity_fac
 2876              		.loc 3 89 5 view .LVU850
  89:AudioProcessor.cpp ****     morph_knob_val   = morph_knob_val   * (1.0f - intensity_factor) + touch_control * intensity_fac
ARM GAS  /var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccGMqppg.s 			page 86


 2877              		.loc 3 89 41 is_stmt 0 view .LVU851
 2878 0026 4D4B     		ldr	r3, .L172+8
  89:AudioProcessor.cpp ****     morph_knob_val   = morph_knob_val   * (1.0f - intensity_factor) + touch_control * intensity_fac
 2879              		.loc 3 89 85 view .LVU852
 2880 0028 67EE877A 		vmul.f32	s15, s15, s14
 2881              	.LVL176:
  89:AudioProcessor.cpp ****     morph_knob_val   = morph_knob_val   * (1.0f - intensity_factor) + touch_control * intensity_fac
 2882              		.loc 3 89 69 view .LVU853
 2883 002c 93ED006A 		vldr.32	s12, [r3]
 2884 0030 F0EE676A 		vmov.f32	s13, s15
 2885 0034 E6EE076A 		vfma.f32	s13, s12, s14
  89:AudioProcessor.cpp ****     morph_knob_val   = morph_knob_val   * (1.0f - intensity_factor) + touch_control * intensity_fac
 2886              		.loc 3 89 22 view .LVU854
 2887 0038 C3ED006A 		vstr.32	s13, [r3]
  91:AudioProcessor.cpp ****     delay_feedback_val = delay_feedback_val * (1.0f - intensity_factor) + touch_control * intensity
 2888              		.loc 3 91 5 is_stmt 1 view .LVU855
  91:AudioProcessor.cpp ****     delay_feedback_val = delay_feedback_val * (1.0f - intensity_factor) + touch_control * intensity
 2889              		.loc 3 91 45 is_stmt 0 view .LVU856
 2890 003c 484B     		ldr	r3, .L172+12
  91:AudioProcessor.cpp ****     delay_feedback_val = delay_feedback_val * (1.0f - intensity_factor) + touch_control * intensity
 2891              		.loc 3 91 73 view .LVU857
 2892 003e D3ED006A 		vldr.32	s13, [r3]
 2893 0042 E6EE877A 		vfma.f32	s15, s13, s14
  91:AudioProcessor.cpp ****     delay_feedback_val = delay_feedback_val * (1.0f - intensity_factor) + touch_control * intensity
 2894              		.loc 3 91 24 view .LVU858
 2895 0046 C3ED007A 		vstr.32	s15, [r3]
  97:AudioProcessor.cpp ****     static uint32_t button_press_time = 0;
 2896              		.loc 3 97 5 is_stmt 1 view .LVU859
  98:AudioProcessor.cpp ****     if (button.RisingEdge()) {
 2897              		.loc 3 98 5 view .LVU860
 2898              	.LVL177:
 2899              	.LBB405:
 2900              	.LBB406:
 2901              	.LBI406:
 2902              		.file 11 "lib/libdaisy/src/hid/switch.h"
   1:lib/libdaisy/src/hid/switch.h **** #pragma once
   2:lib/libdaisy/src/hid/switch.h **** #ifndef DSY_SWITCH_H
   3:lib/libdaisy/src/hid/switch.h **** #define DSY_SWITCH_H
   4:lib/libdaisy/src/hid/switch.h **** #include "daisy_core.h"
   5:lib/libdaisy/src/hid/switch.h **** #include "per/gpio.h"
   6:lib/libdaisy/src/hid/switch.h **** #include "sys/system.h"
   7:lib/libdaisy/src/hid/switch.h **** 
   8:lib/libdaisy/src/hid/switch.h **** namespace daisy
   9:lib/libdaisy/src/hid/switch.h **** {
  10:lib/libdaisy/src/hid/switch.h **** /** 
  11:lib/libdaisy/src/hid/switch.h ****     Generic Class for handling momentary/latching switches \n 
  12:lib/libdaisy/src/hid/switch.h ****     Inspired/influenced by Mutable Instruments (pichenettes) Switch classes
  13:lib/libdaisy/src/hid/switch.h ****     @author Stephen Hensley
  14:lib/libdaisy/src/hid/switch.h ****     @date December 2019
  15:lib/libdaisy/src/hid/switch.h ****     @ingroup controls
  16:lib/libdaisy/src/hid/switch.h **** */
  17:lib/libdaisy/src/hid/switch.h **** class Switch
  18:lib/libdaisy/src/hid/switch.h **** {
  19:lib/libdaisy/src/hid/switch.h ****   public:
  20:lib/libdaisy/src/hid/switch.h ****     /** Specifies the expected behavior of the switch */
  21:lib/libdaisy/src/hid/switch.h ****     enum Type
  22:lib/libdaisy/src/hid/switch.h ****     {
ARM GAS  /var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccGMqppg.s 			page 87


  23:lib/libdaisy/src/hid/switch.h ****         TYPE_TOGGLE,    /**< & */
  24:lib/libdaisy/src/hid/switch.h ****         TYPE_MOMENTARY, /**< & */
  25:lib/libdaisy/src/hid/switch.h ****     };
  26:lib/libdaisy/src/hid/switch.h ****     /** Specifies whether the pressed is HIGH or LOW. */
  27:lib/libdaisy/src/hid/switch.h ****     enum Polarity
  28:lib/libdaisy/src/hid/switch.h ****     {
  29:lib/libdaisy/src/hid/switch.h ****         POLARITY_NORMAL,   /**< & */
  30:lib/libdaisy/src/hid/switch.h ****         POLARITY_INVERTED, /**< & */
  31:lib/libdaisy/src/hid/switch.h ****     };
  32:lib/libdaisy/src/hid/switch.h **** 
  33:lib/libdaisy/src/hid/switch.h ****     /** Specifies whether to use built-in Pull Up/Down resistors to hold button at a given state wh
  34:lib/libdaisy/src/hid/switch.h ****     enum Pull
  35:lib/libdaisy/src/hid/switch.h ****     {
  36:lib/libdaisy/src/hid/switch.h ****         PULL_UP,   /**< & */
  37:lib/libdaisy/src/hid/switch.h ****         PULL_DOWN, /**< & */
  38:lib/libdaisy/src/hid/switch.h ****         PULL_NONE, /**< & */
  39:lib/libdaisy/src/hid/switch.h ****     };
  40:lib/libdaisy/src/hid/switch.h **** 
  41:lib/libdaisy/src/hid/switch.h ****     Switch() {}
  42:lib/libdaisy/src/hid/switch.h ****     ~Switch() {}
  43:lib/libdaisy/src/hid/switch.h **** 
  44:lib/libdaisy/src/hid/switch.h ****     /** 
  45:lib/libdaisy/src/hid/switch.h ****     Initializes the switch object with a given port/pin combo.
  46:lib/libdaisy/src/hid/switch.h ****     \param pin port/pin object to tell the switch which hardware pin to use.
  47:lib/libdaisy/src/hid/switch.h ****     \param update_rate Does nothing. Backwards compatibility until next breaking update.
  48:lib/libdaisy/src/hid/switch.h ****     \param t switch type -- Default: TYPE_MOMENTARY
  49:lib/libdaisy/src/hid/switch.h ****     \param pol switch polarity -- Default: POLARITY_INVERTED
  50:lib/libdaisy/src/hid/switch.h ****     \param pu switch pull up/down -- Default: PULL_UP
  51:lib/libdaisy/src/hid/switch.h ****     */
  52:lib/libdaisy/src/hid/switch.h ****     void
  53:lib/libdaisy/src/hid/switch.h ****     Init(dsy_gpio_pin pin, float update_rate, Type t, Polarity pol, Pull pu);
  54:lib/libdaisy/src/hid/switch.h **** 
  55:lib/libdaisy/src/hid/switch.h ****     /**
  56:lib/libdaisy/src/hid/switch.h ****        Simplified Init.
  57:lib/libdaisy/src/hid/switch.h ****        \param pin port/pin object to tell the switch which hardware pin to use.
  58:lib/libdaisy/src/hid/switch.h ****        \param update_rate Left for backwards compatibility until next breaking change.
  59:lib/libdaisy/src/hid/switch.h ****     */
  60:lib/libdaisy/src/hid/switch.h ****     void Init(dsy_gpio_pin pin, float update_rate = 0.f);
  61:lib/libdaisy/src/hid/switch.h **** 
  62:lib/libdaisy/src/hid/switch.h ****     /** 
  63:lib/libdaisy/src/hid/switch.h ****     Called at update_rate to debounce and handle timing for the switch.
  64:lib/libdaisy/src/hid/switch.h ****     In order for events not to be missed, its important that the Edge/Pressed checks
  65:lib/libdaisy/src/hid/switch.h ****     be made at the same rate as the debounce function is being called.
  66:lib/libdaisy/src/hid/switch.h ****     */
  67:lib/libdaisy/src/hid/switch.h ****     void Debounce();
  68:lib/libdaisy/src/hid/switch.h **** 
  69:lib/libdaisy/src/hid/switch.h ****     /** \return true if a button was just pressed. */
  70:lib/libdaisy/src/hid/switch.h ****     inline bool RisingEdge() const { return state_ == 0x7f; }
 2903              		.loc 11 70 17 view .LVU861
 2904              	.LBB407:
 2905              		.loc 11 70 38 view .LVU862
 2906              		.loc 11 70 45 is_stmt 0 view .LVU863
 2907 004a 464B     		ldr	r3, .L172+16
 2908 004c 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 2909              	.LVL178:
 2910              		.loc 11 70 45 view .LVU864
 2911              	.LBE407:
ARM GAS  /var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccGMqppg.s 			page 88


 2912              	.LBE406:
  98:AudioProcessor.cpp ****     if (button.RisingEdge()) {
 2913              		.loc 3 98 5 view .LVU865
 2914 004e 7F2B     		cmp	r3, #127
 2915 0050 4AD1     		bne	.L155
  99:AudioProcessor.cpp ****         button_press_time = System::GetNow();
 2916              		.loc 3 99 9 is_stmt 1 view .LVU866
  99:AudioProcessor.cpp ****         button_press_time = System::GetNow();
 2917              		.loc 3 99 43 is_stmt 0 view .LVU867
 2918 0052 FFF7FEFF 		bl	_ZN5daisy6System6GetNowEv
 2919              	.LVL179:
  99:AudioProcessor.cpp ****         button_press_time = System::GetNow();
 2920              		.loc 3 99 27 view .LVU868
 2921 0056 444B     		ldr	r3, .L172+20
 2922 0058 1860     		str	r0, [r3]
 2923              	.L156:
 2924              	.LBE405:
 111:AudioProcessor.cpp ****     int engineIndex = DetermineEngineSettings();
 2925              		.loc 3 111 5 is_stmt 1 view .LVU869
 111:AudioProcessor.cpp ****     int engineIndex = DetermineEngineSettings();
 2926              		.loc 3 111 46 is_stmt 0 view .LVU870
 2927 005a FFF7FEFF 		bl	_Z23DetermineEngineSettingsv
 2928              	.LVL180:
 112:AudioProcessor.cpp ****     bool poly_mode = (engineIndex <= 3); // First 4 engines are poly
 2929              		.loc 3 112 10 view .LVU871
 2930 005e 0328     		cmp	r0, #3
 111:AudioProcessor.cpp ****     int engineIndex = DetermineEngineSettings();
 2931              		.loc 3 111 46 view .LVU872
 2932 0060 0546     		mov	r5, r0
 2933              	.LVL181:
 112:AudioProcessor.cpp ****     bool poly_mode = (engineIndex <= 3); // First 4 engines are poly
 2934              		.loc 3 112 5 is_stmt 1 view .LVU873
 138:AudioProcessor.cpp ****     float dry_level = 1.0f - delay_mix_val;
 2935              		.loc 3 138 11 is_stmt 0 view .LVU874
 2936 0062 B7EE008A 		vmov.f32	s16, #1.0e+0
 112:AudioProcessor.cpp ****     bool poly_mode = (engineIndex <= 3); // First 4 engines are poly
 2937              		.loc 3 112 10 view .LVU875
 2938 0066 CCBF     		ite	gt
 2939 0068 4FF00008 		movgt	r8, #0
 2940 006c 4FF00108 		movle	r8, #1
 2941              	.LVL182:
 113:AudioProcessor.cpp ****     int effective_num_voices = poly_mode ? NUM_VOICES : 1;
 2942              		.loc 3 113 5 is_stmt 1 view .LVU876
 113:AudioProcessor.cpp ****     int effective_num_voices = poly_mode ? NUM_VOICES : 1;
 2943              		.loc 3 113 42 is_stmt 0 view .LVU877
 2944 0070 0428     		cmp	r0, #4
 116:AudioProcessor.cpp ****     HandleTouchInput(engineIndex, poly_mode, effective_num_voices);
 2945              		.loc 3 116 21 view .LVU878
 2946 0072 4146     		mov	r1, r8
 113:AudioProcessor.cpp ****     int effective_num_voices = poly_mode ? NUM_VOICES : 1;
 2947              		.loc 3 113 42 view .LVU879
 2948 0074 B4BF     		ite	lt
 2949 0076 4FF00409 		movlt	r9, #4
 2950 007a 4FF00109 		movge	r9, #1
 2951              	.LVL183:
 116:AudioProcessor.cpp ****     HandleTouchInput(engineIndex, poly_mode, effective_num_voices);
 2952              		.loc 3 116 5 is_stmt 1 view .LVU880
ARM GAS  /var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccGMqppg.s 			page 89


 116:AudioProcessor.cpp ****     HandleTouchInput(engineIndex, poly_mode, effective_num_voices);
 2953              		.loc 3 116 21 is_stmt 0 view .LVU881
 2954 007e 4A46     		mov	r2, r9
 2955 0080 FFF7FEFF 		bl	_Z16HandleTouchInputibi
 2956              	.LVL184:
 119:AudioProcessor.cpp ****     ConfigureDelaySettings();
 2957              		.loc 3 119 5 is_stmt 1 view .LVU882
 132:AudioProcessor.cpp ****     PrepareVoiceParameters(engineIndex, poly_mode, effective_num_voices - 1);
 2958              		.loc 3 132 27 is_stmt 0 view .LVU883
 2959 0084 4146     		mov	r1, r8
 119:AudioProcessor.cpp ****     ConfigureDelaySettings();
 2960              		.loc 3 119 27 view .LVU884
 2961 0086 FFF7FEFF 		bl	_Z22ConfigureDelaySettingsv
 2962              	.LVL185:
 132:AudioProcessor.cpp ****     PrepareVoiceParameters(engineIndex, poly_mode, effective_num_voices - 1);
 2963              		.loc 3 132 5 is_stmt 1 view .LVU885
 132:AudioProcessor.cpp ****     PrepareVoiceParameters(engineIndex, poly_mode, effective_num_voices - 1);
 2964              		.loc 3 132 27 is_stmt 0 view .LVU886
 2965 008a 2846     		mov	r0, r5
 2966 008c 09F1FF32 		add	r2, r9, #-1
 2967 0090 FFF7FEFF 		bl	_Z22PrepareVoiceParametersibi
 2968              	.LVL186:
 135:AudioProcessor.cpp ****     ProcessVoiceEnvelopes(poly_mode);
 2969              		.loc 3 135 5 is_stmt 1 view .LVU887
 135:AudioProcessor.cpp ****     ProcessVoiceEnvelopes(poly_mode);
 2970              		.loc 3 135 26 is_stmt 0 view .LVU888
 2971 0094 4046     		mov	r0, r8
 2972 0096 FFF7FEFF 		bl	_Z21ProcessVoiceEnvelopesb
 2973              	.LVL187:
 138:AudioProcessor.cpp ****     float dry_level = 1.0f - delay_mix_val;
 2974              		.loc 3 138 5 is_stmt 1 view .LVU889
 139:AudioProcessor.cpp ****     ProcessAudioOutput(out, size, dry_level);
 2975              		.loc 3 139 5 view .LVU890
 138:AudioProcessor.cpp ****     float dry_level = 1.0f - delay_mix_val;
 2976              		.loc 3 138 11 is_stmt 0 view .LVU891
 2977 009a 344B     		ldr	r3, .L172+24
 139:AudioProcessor.cpp ****     ProcessAudioOutput(out, size, dry_level);
 2978              		.loc 3 139 23 view .LVU892
 2979 009c 3146     		mov	r1, r6
 2980 009e 3846     		mov	r0, r7
 138:AudioProcessor.cpp ****     float dry_level = 1.0f - delay_mix_val;
 2981              		.loc 3 138 11 view .LVU893
 2982 00a0 93ED000A 		vldr.32	s0, [r3]
 139:AudioProcessor.cpp ****     ProcessAudioOutput(out, size, dry_level);
 2983              		.loc 3 139 23 view .LVU894
 2984 00a4 38EE400A 		vsub.f32	s0, s16, s0
 2985              	.LVL188:
 139:AudioProcessor.cpp ****     ProcessAudioOutput(out, size, dry_level);
 2986              		.loc 3 139 23 view .LVU895
 2987 00a8 FFF7FEFF 		bl	_Z18ProcessAudioOutputPfjf
 2988              	.LVL189:
 142:AudioProcessor.cpp ****     cpu_meter.OnBlockEnd();
 2989              		.loc 3 142 5 is_stmt 1 view .LVU896
 2990              	.LBB410:
 2991              	.LBI410:
  50:lib/libdaisy/src/util/CpuLoadMeter.h **** 
  51:lib/libdaisy/src/util/CpuLoadMeter.h ****     /** Call this at the end of your audio callback */
ARM GAS  /var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccGMqppg.s 			page 90


  52:lib/libdaisy/src/util/CpuLoadMeter.h ****     void OnBlockEnd()
 2992              		.loc 10 52 10 view .LVU897
 2993              	.LBB411:
  53:lib/libdaisy/src/util/CpuLoadMeter.h ****     {
  54:lib/libdaisy/src/util/CpuLoadMeter.h ****         const auto end         = System::GetTick();
 2994              		.loc 10 54 9 view .LVU898
 2995              		.loc 10 54 49 is_stmt 0 view .LVU899
 2996 00ac FFF7FEFF 		bl	_ZN5daisy6System7GetTickEv
 2997              	.LVL190:
  55:lib/libdaisy/src/util/CpuLoadMeter.h ****         const auto ticksPassed = end - currentBlockStartTicks_;
 2998              		.loc 10 55 9 is_stmt 1 view .LVU900
  56:lib/libdaisy/src/util/CpuLoadMeter.h ****         const auto currentBlockLoad
 2999              		.loc 10 56 9 view .LVU901
  55:lib/libdaisy/src/util/CpuLoadMeter.h ****         const auto ticksPassed = end - currentBlockStartTicks_;
 3000              		.loc 10 55 20 is_stmt 0 view .LVU902
 3001 00b0 A368     		ldr	r3, [r4, #8]
 3002              		.loc 10 56 20 view .LVU903
 3003 00b2 94ED017A 		vldr.32	s14, [r4, #4]
  55:lib/libdaisy/src/util/CpuLoadMeter.h ****         const auto ticksPassed = end - currentBlockStartTicks_;
 3004              		.loc 10 55 20 view .LVU904
 3005 00b6 C31A     		subs	r3, r0, r3
 3006              	.LVL191:
  55:lib/libdaisy/src/util/CpuLoadMeter.h ****         const auto ticksPassed = end - currentBlockStartTicks_;
 3007              		.loc 10 55 20 view .LVU905
 3008 00b8 07EE903A 		vmov	s15, r3	@ int
  57:lib/libdaisy/src/util/CpuLoadMeter.h ****             = float(ticksPassed) * ticksPerBlockInv_; // usPassed / usPerBlock
  58:lib/libdaisy/src/util/CpuLoadMeter.h **** 
  59:lib/libdaisy/src/util/CpuLoadMeter.h ****         if(firstCycle_)
 3009              		.loc 10 59 9 view .LVU906
 3010 00bc 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 3011              	.LVL192:
  57:lib/libdaisy/src/util/CpuLoadMeter.h ****             = float(ticksPassed) * ticksPerBlockInv_; // usPassed / usPerBlock
 3012              		.loc 10 57 15 view .LVU907
 3013 00be F8EE677A 		vcvt.f32.u32	s15, s15
 3014              	.LVL193:
  56:lib/libdaisy/src/util/CpuLoadMeter.h ****         const auto currentBlockLoad
 3015              		.loc 10 56 20 view .LVU908
 3016 00c2 67EE877A 		vmul.f32	s15, s15, s14
 3017              	.LVL194:
 3018              		.loc 10 59 9 is_stmt 1 view .LVU909
 3019 00c6 2BB3     		cbz	r3, .L160
  60:lib/libdaisy/src/util/CpuLoadMeter.h ****         {
  61:lib/libdaisy/src/util/CpuLoadMeter.h ****             max_ = min_ = avg_ = currentBlockLoad;
 3020              		.loc 10 61 13 view .LVU910
  62:lib/libdaisy/src/util/CpuLoadMeter.h ****             firstCycle_        = false;
 3021              		.loc 10 62 32 is_stmt 0 view .LVU911
 3022 00c8 0023     		movs	r3, #0
  61:lib/libdaisy/src/util/CpuLoadMeter.h ****             firstCycle_        = false;
 3023              		.loc 10 61 32 view .LVU912
 3024 00ca C4ED057A 		vstr.32	s15, [r4, #20]
  61:lib/libdaisy/src/util/CpuLoadMeter.h ****             firstCycle_        = false;
 3025              		.loc 10 61 25 view .LVU913
 3026 00ce C4ED037A 		vstr.32	s15, [r4, #12]
  61:lib/libdaisy/src/util/CpuLoadMeter.h ****             firstCycle_        = false;
 3027              		.loc 10 61 18 view .LVU914
 3028 00d2 C4ED047A 		vstr.32	s15, [r4, #16]
 3029              		.loc 10 62 13 is_stmt 1 view .LVU915
ARM GAS  /var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccGMqppg.s 			page 91


 3030              		.loc 10 62 32 is_stmt 0 view .LVU916
 3031 00d6 2370     		strb	r3, [r4]
 3032              	.L161:
 3033              	.LVL195:
 3034              		.loc 10 62 32 view .LVU917
 3035              	.LBE411:
 3036              	.LBE410:
 145:AudioProcessor.cpp ****     UpdatePerformanceMonitors(size, out);
 3037              		.loc 3 145 5 is_stmt 1 view .LVU918
 145:AudioProcessor.cpp ****     UpdatePerformanceMonitors(size, out);
 3038              		.loc 3 145 30 is_stmt 0 view .LVU919
 3039 00d8 3946     		mov	r1, r7
 3040 00da 3046     		mov	r0, r6
 146:AudioProcessor.cpp **** }
 3041              		.loc 3 146 1 view .LVU920
 3042 00dc BDEC028B 		vldm	sp!, {d8}
 3043              		.cfi_remember_state
 3044              		.cfi_restore 80
 3045              		.cfi_restore 81
 3046              		.cfi_def_cfa_offset 32
 3047 00e0 BDE8F843 		pop	{r3, r4, r5, r6, r7, r8, r9, lr}
 3048              		.cfi_restore 14
 3049              		.cfi_restore 9
 3050              		.cfi_restore 8
 3051              		.cfi_restore 7
 3052              		.cfi_restore 6
 3053              		.cfi_restore 5
 3054              		.cfi_restore 4
 3055              		.cfi_restore 3
 3056              		.cfi_def_cfa_offset 0
 3057              	.LVL196:
 145:AudioProcessor.cpp ****     UpdatePerformanceMonitors(size, out);
 3058              		.loc 3 145 30 view .LVU921
 3059 00e4 FFF7FEBF 		b	_Z25UpdatePerformanceMonitorsjPf
 3060              	.LVL197:
 3061              	.L155:
 3062              		.cfi_restore_state
 101:AudioProcessor.cpp ****     else if (button.Pressed() && button_press_time > 0) {
 3063              		.loc 3 101 10 is_stmt 1 view .LVU922
  71:lib/libdaisy/src/hid/switch.h **** 
  72:lib/libdaisy/src/hid/switch.h ****     /** \return true if the button was just released */
  73:lib/libdaisy/src/hid/switch.h ****     inline bool FallingEdge() const { return state_ == 0x80; }
  74:lib/libdaisy/src/hid/switch.h **** 
  75:lib/libdaisy/src/hid/switch.h ****     /** \return true if the button is held down (or if the toggle is on) */
  76:lib/libdaisy/src/hid/switch.h ****     inline bool Pressed() const { return state_ == 0xff; }
 3064              		.loc 11 76 35 view .LVU923
 3065              	.LBB413:
 3066              	.LBB408:
 101:AudioProcessor.cpp ****     else if (button.Pressed() && button_press_time > 0) {
 3067              		.loc 3 101 31 is_stmt 0 view .LVU924
 3068 00e8 FF2B     		cmp	r3, #255
 3069 00ea B6D1     		bne	.L156
 101:AudioProcessor.cpp ****     else if (button.Pressed() && button_press_time > 0) {
 3070              		.loc 3 101 52 discriminator 1 view .LVU925
 3071 00ec 1E4D     		ldr	r5, .L172+20
 101:AudioProcessor.cpp ****     else if (button.Pressed() && button_press_time > 0) {
 3072              		.loc 3 101 31 discriminator 1 view .LVU926
ARM GAS  /var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccGMqppg.s 			page 92


 3073 00ee 2B68     		ldr	r3, [r5]
 3074 00f0 002B     		cmp	r3, #0
 3075 00f2 B2D0     		beq	.L156
 3076              	.LBB409:
 102:AudioProcessor.cpp ****         uint32_t held_time = System::GetNow() - button_press_time;
 3077              		.loc 3 102 9 is_stmt 1 view .LVU927
 102:AudioProcessor.cpp ****         uint32_t held_time = System::GetNow() - button_press_time;
 3078              		.loc 3 102 44 is_stmt 0 view .LVU928
 3079 00f4 FFF7FEFF 		bl	_ZN5daisy6System6GetNowEv
 3080              	.LVL198:
 104:AudioProcessor.cpp ****         if (held_time > 1000 && held_time < 3000) {
 3081              		.loc 3 104 9 is_stmt 1 view .LVU929
 104:AudioProcessor.cpp ****         if (held_time > 1000 && held_time < 3000) {
 3082              		.loc 3 104 30 is_stmt 0 view .LVU930
 3083 00f8 2B68     		ldr	r3, [r5]
 104:AudioProcessor.cpp ****         if (held_time > 1000 && held_time < 3000) {
 3084              		.loc 3 104 9 view .LVU931
 3085 00fa 40F2CE72 		movw	r2, #1998
 104:AudioProcessor.cpp ****         if (held_time > 1000 && held_time < 3000) {
 3086              		.loc 3 104 30 view .LVU932
 3087 00fe C01A     		subs	r0, r0, r3
 3088              	.LVL199:
 104:AudioProcessor.cpp ****         if (held_time > 1000 && held_time < 3000) {
 3089              		.loc 3 104 30 view .LVU933
 3090 0100 6FF47A73 		mvn	r3, #1000
 3091 0104 C318     		adds	r3, r0, r3
 104:AudioProcessor.cpp ****         if (held_time > 1000 && held_time < 3000) {
 3092              		.loc 3 104 9 view .LVU934
 3093 0106 9342     		cmp	r3, r2
 3094 0108 A7D8     		bhi	.L156
 105:AudioProcessor.cpp ****             ResetVoiceStates();
 3095              		.loc 3 105 13 is_stmt 1 view .LVU935
 105:AudioProcessor.cpp ****             ResetVoiceStates();
 3096              		.loc 3 105 29 is_stmt 0 view .LVU936
 3097 010a FFF7FEFF 		bl	_Z16ResetVoiceStatesv
 3098              	.LVL200:
 106:AudioProcessor.cpp ****             button_press_time = 0; // Reset so it only triggers once
 3099              		.loc 3 106 13 is_stmt 1 view .LVU937
 106:AudioProcessor.cpp ****             button_press_time = 0; // Reset so it only triggers once
 3100              		.loc 3 106 31 is_stmt 0 view .LVU938
 3101 010e 0023     		movs	r3, #0
 3102 0110 2B60     		str	r3, [r5]
 3103 0112 A2E7     		b	.L156
 3104              	.LVL201:
 3105              	.L160:
 106:AudioProcessor.cpp ****             button_press_time = 0; // Reset so it only triggers once
 3106              		.loc 3 106 31 view .LVU939
 3107              	.LBE409:
 3108              	.LBE408:
 3109              	.LBE413:
 3110              	.LBB414:
 3111              	.LBB412:
  63:lib/libdaisy/src/util/CpuLoadMeter.h ****         }
  64:lib/libdaisy/src/util/CpuLoadMeter.h ****         else
  65:lib/libdaisy/src/util/CpuLoadMeter.h ****         {
  66:lib/libdaisy/src/util/CpuLoadMeter.h ****             if(currentBlockLoad > max_)
 3112              		.loc 10 66 13 is_stmt 1 view .LVU940
ARM GAS  /var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccGMqppg.s 			page 93


 3113 0114 94ED047A 		vldr.32	s14, [r4, #16]
  67:lib/libdaisy/src/util/CpuLoadMeter.h ****                 max_ = currentBlockLoad;
  68:lib/libdaisy/src/util/CpuLoadMeter.h ****             if(currentBlockLoad < min_)
  69:lib/libdaisy/src/util/CpuLoadMeter.h ****                 min_ = currentBlockLoad;
  70:lib/libdaisy/src/util/CpuLoadMeter.h **** 
  71:lib/libdaisy/src/util/CpuLoadMeter.h ****             avg_ = smoothingConstant_ * currentBlockLoad
  72:lib/libdaisy/src/util/CpuLoadMeter.h ****                    + (1.0f - smoothingConstant_) * avg_;
 3114              		.loc 10 72 50 is_stmt 0 view .LVU941
 3115 0118 D4ED056A 		vldr.32	s13, [r4, #20]
  66:lib/libdaisy/src/util/CpuLoadMeter.h ****                 max_ = currentBlockLoad;
 3116              		.loc 10 66 13 view .LVU942
 3117 011c F4EEC77A 		vcmpe.f32	s15, s14
  68:lib/libdaisy/src/util/CpuLoadMeter.h ****                 min_ = currentBlockLoad;
 3118              		.loc 10 68 13 view .LVU943
 3119 0120 94ED037A 		vldr.32	s14, [r4, #12]
  66:lib/libdaisy/src/util/CpuLoadMeter.h ****                 max_ = currentBlockLoad;
 3120              		.loc 10 66 13 view .LVU944
 3121 0124 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
  67:lib/libdaisy/src/util/CpuLoadMeter.h ****                 max_ = currentBlockLoad;
 3122              		.loc 10 67 17 is_stmt 1 view .LVU945
  68:lib/libdaisy/src/util/CpuLoadMeter.h ****                 min_ = currentBlockLoad;
 3123              		.loc 10 68 13 is_stmt 0 view .LVU946
 3124 0128 F4EEC77A 		vcmpe.f32	s15, s14
  71:lib/libdaisy/src/util/CpuLoadMeter.h ****                    + (1.0f - smoothingConstant_) * avg_;
 3125              		.loc 10 71 20 view .LVU947
 3126 012c 94ED067A 		vldr.32	s14, [r4, #24]
 3127              		.loc 10 72 28 view .LVU948
 3128 0130 38EE478A 		vsub.f32	s16, s16, s14
  67:lib/libdaisy/src/util/CpuLoadMeter.h ****             if(currentBlockLoad < min_)
 3129              		.loc 10 67 22 view .LVU949
 3130 0134 C8BF     		it	gt
 3131 0136 C4ED047A 		vstrgt.32	s15, [r4, #16]
  68:lib/libdaisy/src/util/CpuLoadMeter.h ****                 min_ = currentBlockLoad;
 3132              		.loc 10 68 13 is_stmt 1 view .LVU950
 3133 013a F1EE10FA 		vmrs	APSR_nzcv, FPSCR
  69:lib/libdaisy/src/util/CpuLoadMeter.h **** 
 3134              		.loc 10 69 17 view .LVU951
 3135              		.loc 10 72 50 is_stmt 0 view .LVU952
 3136 013e 28EE268A 		vmul.f32	s16, s16, s13
  69:lib/libdaisy/src/util/CpuLoadMeter.h **** 
 3137              		.loc 10 69 22 view .LVU953
 3138 0142 48BF     		it	mi
 3139 0144 C4ED037A 		vstrmi.32	s15, [r4, #12]
  71:lib/libdaisy/src/util/CpuLoadMeter.h ****                    + (1.0f - smoothingConstant_) * avg_;
 3140              		.loc 10 71 13 is_stmt 1 view .LVU954
 3141              		.loc 10 72 20 is_stmt 0 view .LVU955
 3142 0148 A7EE878A 		vfma.f32	s16, s15, s14
  71:lib/libdaisy/src/util/CpuLoadMeter.h ****                    + (1.0f - smoothingConstant_) * avg_;
 3143              		.loc 10 71 18 view .LVU956
 3144 014c 84ED058A 		vstr.32	s16, [r4, #20]
 3145 0150 C2E7     		b	.L161
 3146              	.L173:
 3147 0152 00BF     		.align	2
 3148              	.L172:
 3149 0154 00000000 		.word	.LANCHOR15
 3150 0158 00000000 		.word	touch_cv_value
 3151 015c 00000000 		.word	.LANCHOR6
ARM GAS  /var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccGMqppg.s 			page 94


 3152 0160 00000000 		.word	.LANCHOR7
 3153 0164 00000000 		.word	button
 3154 0168 00000000 		.word	.LANCHOR16
 3155 016c 00000000 		.word	.LANCHOR10
 3156              	.LBE412:
 3157              	.LBE414:
 3158              		.cfi_endproc
 3159              	.LFE5059:
 3161              		.global	cpu_meter
 3162              		.global	mix_buffer_aux
 3163              		.global	mix_buffer_out
 3164              		.global	release_time
 3165              		.global	attack_time
 3166              		.global	env_release_val
 3167              		.global	env_attack_val
 3168              		.global	delay_mix_val
 3169              		.global	delay_lag_val
 3170              		.global	delay_time_val
 3171              		.global	delay_feedback_val
 3172              		.global	morph_knob_val
 3173              		.global	decay_knob_val
 3174              		.global	timbre_knob_val
 3175              		.global	harm_knob_val
 3176              		.global	pitch_val
 3177              		.section	.bss._ZZ13AudioCallbackPKfPfjE17button_press_time,"aw",%nobits
 3178              		.align	2
 3179              		.set	.LANCHOR16,. + 0
 3182              	_ZZ13AudioCallbackPKfPfjE17button_press_time:
 3183 0000 00000000 		.space	4
 3184              		.section	.bss._ZZ25UpdatePerformanceMonitorsjPfE15display_counter,"aw",%nobits
 3185              		.align	2
 3186              		.set	.LANCHOR14,. + 0
 3189              	_ZZ25UpdatePerformanceMonitorsjPfE15display_counter:
 3190 0000 00000000 		.space	4
 3191              		.section	.bss.attack_time,"aw",%nobits
 3192              		.align	2
 3195              	attack_time:
 3196 0000 00000000 		.space	4
 3197              		.section	.bss.cpu_meter,"aw",%nobits
 3198              		.align	2
 3199              		.set	.LANCHOR15,. + 0
 3202              	cpu_meter:
 3203 0000 00000000 		.space	28
 3203      00000000 
 3203      00000000 
 3203      00000000 
 3203      00000000 
 3204              		.section	.bss.decay_knob_val,"aw",%nobits
 3205              		.align	2
 3206              		.set	.LANCHOR5,. + 0
 3209              	decay_knob_val:
 3210 0000 00000000 		.space	4
 3211              		.section	.bss.delay_feedback_val,"aw",%nobits
 3212              		.align	2
 3213              		.set	.LANCHOR7,. + 0
 3216              	delay_feedback_val:
 3217 0000 00000000 		.space	4
ARM GAS  /var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccGMqppg.s 			page 95


 3218              		.section	.bss.delay_lag_val,"aw",%nobits
 3219              		.align	2
 3220              		.set	.LANCHOR9,. + 0
 3223              	delay_lag_val:
 3224 0000 00000000 		.space	4
 3225              		.section	.bss.delay_mix_val,"aw",%nobits
 3226              		.align	2
 3227              		.set	.LANCHOR10,. + 0
 3230              	delay_mix_val:
 3231 0000 00000000 		.space	4
 3232              		.section	.bss.delay_time_val,"aw",%nobits
 3233              		.align	2
 3234              		.set	.LANCHOR8,. + 0
 3237              	delay_time_val:
 3238 0000 00000000 		.space	4
 3239              		.section	.bss.env_attack_val,"aw",%nobits
 3240              		.align	2
 3241              		.set	.LANCHOR0,. + 0
 3244              	env_attack_val:
 3245 0000 00000000 		.space	4
 3246              		.section	.bss.env_release_val,"aw",%nobits
 3247              		.align	2
 3248              		.set	.LANCHOR1,. + 0
 3251              	env_release_val:
 3252 0000 00000000 		.space	4
 3253              		.section	.bss.harm_knob_val,"aw",%nobits
 3254              		.align	2
 3255              		.set	.LANCHOR3,. + 0
 3258              	harm_knob_val:
 3259 0000 00000000 		.space	4
 3260              		.section	.bss.mix_buffer_aux,"aw",%nobits
 3261              		.align	2
 3262              		.set	.LANCHOR13,. + 0
 3265              	mix_buffer_aux:
 3266 0000 00000000 		.space	64
 3266      00000000 
 3266      00000000 
 3266      00000000 
 3266      00000000 
 3267              		.section	.bss.mix_buffer_out,"aw",%nobits
 3268              		.align	2
 3269              		.set	.LANCHOR12,. + 0
 3272              	mix_buffer_out:
 3273 0000 00000000 		.space	64
 3273      00000000 
 3273      00000000 
 3273      00000000 
 3273      00000000 
 3274              		.section	.bss.morph_knob_val,"aw",%nobits
 3275              		.align	2
 3276              		.set	.LANCHOR6,. + 0
 3279              	morph_knob_val:
 3280 0000 00000000 		.space	4
 3281              		.section	.bss.pitch_val,"aw",%nobits
 3282              		.align	2
 3283              		.set	.LANCHOR2,. + 0
 3286              	pitch_val:
ARM GAS  /var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccGMqppg.s 			page 96


 3287 0000 00000000 		.space	4
 3288              		.section	.bss.release_time,"aw",%nobits
 3289              		.align	2
 3292              	release_time:
 3293 0000 00000000 		.space	4
 3294              		.section	.bss.timbre_knob_val,"aw",%nobits
 3295              		.align	2
 3296              		.set	.LANCHOR4,. + 0
 3299              	timbre_knob_val:
 3300 0000 00000000 		.space	4
 3301              		.section	.data._ZZ23DetermineEngineSettingsvE21previous_engine_index,"aw"
 3302              		.align	2
 3303              		.set	.LANCHOR11,. + 0
 3306              	_ZZ23DetermineEngineSettingsvE21previous_engine_index:
 3307 0000 FFFFFFFF 		.word	-1
 3308              		.text
 3309              	.Letext0:
 3310              		.file 12 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/machine/_default_types.h"
 3311              		.file 13 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/sys/_stdint.h"
 3312              		.file 14 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/stdint.h"
 3313              		.file 15 "/Library/DaisyToolchain/0.2.0/arm/lib/gcc/arm-none-eabi/10.3.1/include/stddef.h"
 3314              		.file 16 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath"
 3315              		.file 17 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/std_abs.h"
 3316              		.file 18 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cstdlib"
 3317              		.file 19 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cstdint"
 3318              		.file 20 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v
 3319              		.file 21 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/type_traits"
 3320              		.file 22 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/debug/debug.h"
 3321              		.file 23 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/algorithmfwd.h"
 3322              		.file 24 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_pair.h"
 3323              		.file 25 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/exception_ptr.h"
 3324              		.file 26 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cstdarg"
 3325              		.file 27 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cstdio"
 3326              		.file 28 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cstring"
 3327              		.file 29 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cwchar"
 3328              		.file 30 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/clocale"
 3329              		.file 31 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h"
 3330              		.file 32 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_iterator.h"
 3331              		.file 33 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/array"
 3332              		.file 34 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/predefined_ops.h
 3333              		.file 35 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/sys/_types.h"
 3334              		.file 36 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/sys/reent.h"
 3335              		.file 37 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/sys/lock.h"
 3336              		.file 38 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/math.h"
 3337              		.file 39 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/stdlib.h"
 3338              		.file 40 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/math.h"
 3339              		.file 41 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/stdlib.h"
 3340              		.file 42 "lib/libdaisy/src/daisy_core.h"
 3341              		.file 43 "lib/libdaisy/src/per/tim.h"
 3342              		.file 44 "lib/libdaisy/src/sys/system.h"
 3343              		.file 45 "lib/libdaisy/src/per/sai.h"
 3344              		.file 46 "lib/libdaisy/src/hid/audio.h"
 3345              		.file 47 "lib/libdaisy/src/util/wav_format.h"
 3346              		.file 48 "lib/libdaisy/src/daisy_seed.h"
 3347              		.file 49 "lib/libdaisy/src/per/gpio.h"
 3348              		.file 50 "/Library/DaisyToolchain/0.2.0/arm/lib/gcc/arm-none-eabi/10.3.1/include/stdarg.h"
 3349              		.file 51 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/stdio.h"
ARM GAS  /var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccGMqppg.s 			page 97


 3350              		.file 52 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/string.h"
 3351              		.file 53 "lib/DaisySP/Source/Control/adenv.h"
 3352              		.file 54 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/wchar.h"
 3353              		.file 55 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/locale.h"
 3354              		.file 56 "eurorack/stmlib/stmlib.h"
 3355              		.file 57 "eurorack/stmlib/dsp/filter.h"
 3356              		.file 58 "eurorack/stmlib/dsp/limiter.h"
 3357              		.file 59 "eurorack/stmlib/utils/buffer_allocator.h"
 3358              		.file 60 "eurorack/stmlib/dsp/hysteresis_quantizer.h"
 3359              		.file 61 "eurorack/plaits/dsp/dsp.h"
 3360              		.file 62 "eurorack/plaits/dsp/engine/engine.h"
 3361              		.file 63 "eurorack/plaits/dsp/engine/additive_engine.h"
 3362              		.file 64 "eurorack/plaits/dsp/oscillator/oscillator.h"
 3363              		.file 65 "eurorack/plaits/dsp/engine/chord_engine.h"
 3364              		.file 66 "eurorack/plaits/dsp/physical_modelling/resonator.h"
 3365              		.file 67 "eurorack/plaits/dsp/engine/particle_engine.h"
 3366              		.file 68 "eurorack/plaits/dsp/physical_modelling/string.h"
 3367              		.file 69 "eurorack/plaits/dsp/engine/string_engine.h"
 3368              		.file 70 "eurorack/plaits/dsp/engine/swarm_engine.h"
 3369              		.file 71 "eurorack/plaits/dsp/oscillator/variable_saw_oscillator.h"
 3370              		.file 72 "eurorack/plaits/dsp/envelope.h"
 3371              		.file 73 "eurorack/plaits/dsp/fx/low_pass_gate.h"
 3372              		.file 74 "eurorack/plaits/dsp/voice.h"
 3373              		.file 75 "eurorack/plaits/dsp/physical_modelling/delay_line.h"
 3374              		.file 76 "mpr121_daisy.h"
 3375              		.file 77 "Amathia.h"
 3376              		.file 78 "lib/libdaisy/src/dev/sr_595.h"
 3377              		.file 79 "<built-in>"
ARM GAS  /var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccGMqppg.s 			page 98


DEFINED SYMBOLS
                            *ABS*:0000000000000000 AudioProcessor.cpp
/var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccGMqppg.s:19     .text._ZN13VoiceEnvelope13SetAttackTimeEf:0000000000000000 $t
/var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccGMqppg.s:25     .text._ZN13VoiceEnvelope13SetAttackTimeEf:0000000000000000 _ZN13VoiceEnvelope13SetAttackTimeEf
/var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccGMqppg.s:142    .text._ZN13VoiceEnvelope13SetAttackTimeEf:00000000000000a4 $d
/var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccGMqppg.s:154    .text._ZN13VoiceEnvelope14SetReleaseTimeEf:0000000000000000 $t
/var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccGMqppg.s:160    .text._ZN13VoiceEnvelope14SetReleaseTimeEf:0000000000000000 _ZN13VoiceEnvelope14SetReleaseTimeEf
/var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccGMqppg.s:222    .text._ZN13VoiceEnvelope7ProcessEv:0000000000000000 $t
/var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccGMqppg.s:228    .text._ZN13VoiceEnvelope7ProcessEv:0000000000000000 _ZN13VoiceEnvelope7ProcessEv
/var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccGMqppg.s:249    .text._ZN13VoiceEnvelope7ProcessEv:0000000000000012 $d
/var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccGMqppg.s:479    .text._Z13ProcessVoicesv:0000000000000000 $t
/var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccGMqppg.s:485    .text._Z13ProcessVoicesv:0000000000000000 _Z13ProcessVoicesv
/var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccGMqppg.s:615    .text._Z13ProcessVoicesv:0000000000000080 $d
/var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccGMqppg.s:625    .text._Z12ProcessVoiceif:0000000000000000 $t
/var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccGMqppg.s:631    .text._Z12ProcessVoiceif:0000000000000000 _Z12ProcessVoiceif
/var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccGMqppg.s:651    .text._Z12ProcessVoiceif:000000000000000c $d
/var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccGMqppg.s:656    .text._Z15ProcessControlsv:0000000000000000 $t
/var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccGMqppg.s:662    .text._Z15ProcessControlsv:0000000000000000 _Z15ProcessControlsv
/var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccGMqppg.s:742    .text._Z15ProcessControlsv:0000000000000050 $d
/var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccGMqppg.s:758    .text._Z14ReadKnobValuesv:0000000000000000 $t
/var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccGMqppg.s:764    .text._Z14ReadKnobValuesv:0000000000000000 _Z14ReadKnobValuesv
/var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccGMqppg.s:942    .text._Z14ReadKnobValuesv:000000000000005c $d
/var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccGMqppg.s:968    .text._Z16ResetVoiceStatesv:0000000000000000 $t
/var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccGMqppg.s:974    .text._Z16ResetVoiceStatesv:0000000000000000 _Z16ResetVoiceStatesv
/var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccGMqppg.s:1056   .text._Z16ResetVoiceStatesv:0000000000000030 $d
/var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccGMqppg.s:1068   .text._Z23DetermineEngineSettingsv:0000000000000000 $t
/var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccGMqppg.s:1074   .text._Z23DetermineEngineSettingsv:0000000000000000 _Z23DetermineEngineSettingsv
/var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccGMqppg.s:1169   .text._Z23DetermineEngineSettingsv:0000000000000050 $d
/var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccGMqppg.s:1180   .text._Z16HandleTouchInputibi:0000000000000000 $t
/var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccGMqppg.s:1186   .text._Z16HandleTouchInputibi:0000000000000000 _Z16HandleTouchInputibi
/var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccGMqppg.s:1592   .text._Z16HandleTouchInputibi:0000000000000164 $d
/var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccGMqppg.s:1609   .text._Z22ConfigureDelaySettingsv:0000000000000000 $t
/var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccGMqppg.s:1615   .text._Z22ConfigureDelaySettingsv:0000000000000000 _Z22ConfigureDelaySettingsv
/var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccGMqppg.s:1755   .text._Z22ConfigureDelaySettingsv:0000000000000068 $d
/var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccGMqppg.s:1767   .text._Z22PrepareVoiceParametersibi:0000000000000000 $t
/var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccGMqppg.s:1773   .text._Z22PrepareVoiceParametersibi:0000000000000000 _Z22PrepareVoiceParametersibi
/var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccGMqppg.s:1992   .text._Z22PrepareVoiceParametersibi:00000000000000f8 $d
/var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccGMqppg.s:2007   .text._Z21ProcessVoiceEnvelopesb:0000000000000000 $t
/var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccGMqppg.s:2013   .text._Z21ProcessVoiceEnvelopesb:0000000000000000 _Z21ProcessVoiceEnvelopesb
/var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccGMqppg.s:2195   .text._Z21ProcessVoiceEnvelopesb:00000000000000c8 $d
/var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccGMqppg.s:2206   .text._Z25UpdatePerformanceMonitorsjPf:0000000000000000 $t
/var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccGMqppg.s:2212   .text._Z25UpdatePerformanceMonitorsjPf:0000000000000000 _Z25UpdatePerformanceMonitorsjPf
/var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccGMqppg.s:2277   .text._Z25UpdatePerformanceMonitorsjPf:0000000000000040 $d
/var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccGMqppg.s:2286   .text._ZN10infrasonic9EchoDelayILj48000EE7ProcessEf:0000000000000000 $t
/var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccGMqppg.s:2292   .text._ZN10infrasonic9EchoDelayILj48000EE7ProcessEf:0000000000000000 _ZN10infrasonic9EchoDelayILj48000EE7ProcessEf
/var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccGMqppg.s:2644   .text._Z18ProcessAudioOutputPfjf:0000000000000000 $t
/var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccGMqppg.s:2650   .text._Z18ProcessAudioOutputPfjf:0000000000000000 _Z18ProcessAudioOutputPfjf
/var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccGMqppg.s:2794   .text._Z18ProcessAudioOutputPfjf:0000000000000094 $d
/var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccGMqppg.s:2803   .text._Z13AudioCallbackPKfPfj:0000000000000000 $t
/var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccGMqppg.s:2809   .text._Z13AudioCallbackPKfPfj:0000000000000000 _Z13AudioCallbackPKfPfj
/var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccGMqppg.s:3149   .text._Z13AudioCallbackPKfPfj:0000000000000154 $d
/var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccGMqppg.s:3202   .bss.cpu_meter:0000000000000000 cpu_meter
/var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccGMqppg.s:3265   .bss.mix_buffer_aux:0000000000000000 mix_buffer_aux
/var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccGMqppg.s:3272   .bss.mix_buffer_out:0000000000000000 mix_buffer_out
/var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccGMqppg.s:3292   .bss.release_time:0000000000000000 release_time
/var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccGMqppg.s:3195   .bss.attack_time:0000000000000000 attack_time
/var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccGMqppg.s:3251   .bss.env_release_val:0000000000000000 env_release_val
ARM GAS  /var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccGMqppg.s 			page 99


/var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccGMqppg.s:3244   .bss.env_attack_val:0000000000000000 env_attack_val
/var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccGMqppg.s:3230   .bss.delay_mix_val:0000000000000000 delay_mix_val
/var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccGMqppg.s:3223   .bss.delay_lag_val:0000000000000000 delay_lag_val
/var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccGMqppg.s:3237   .bss.delay_time_val:0000000000000000 delay_time_val
/var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccGMqppg.s:3216   .bss.delay_feedback_val:0000000000000000 delay_feedback_val
/var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccGMqppg.s:3279   .bss.morph_knob_val:0000000000000000 morph_knob_val
/var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccGMqppg.s:3209   .bss.decay_knob_val:0000000000000000 decay_knob_val
/var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccGMqppg.s:3299   .bss.timbre_knob_val:0000000000000000 timbre_knob_val
/var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccGMqppg.s:3258   .bss.harm_knob_val:0000000000000000 harm_knob_val
/var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccGMqppg.s:3286   .bss.pitch_val:0000000000000000 pitch_val
/var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccGMqppg.s:3178   .bss._ZZ13AudioCallbackPKfPfjE17button_press_time:0000000000000000 $d
/var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccGMqppg.s:3182   .bss._ZZ13AudioCallbackPKfPfjE17button_press_time:0000000000000000 _ZZ13AudioCallbackPKfPfjE17button_press_time
/var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccGMqppg.s:3185   .bss._ZZ25UpdatePerformanceMonitorsjPfE15display_counter:0000000000000000 $d
/var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccGMqppg.s:3189   .bss._ZZ25UpdatePerformanceMonitorsjPfE15display_counter:0000000000000000 _ZZ25UpdatePerformanceMonitorsjPfE15display_counter
/var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccGMqppg.s:3192   .bss.attack_time:0000000000000000 $d
/var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccGMqppg.s:3198   .bss.cpu_meter:0000000000000000 $d
/var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccGMqppg.s:3205   .bss.decay_knob_val:0000000000000000 $d
/var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccGMqppg.s:3212   .bss.delay_feedback_val:0000000000000000 $d
/var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccGMqppg.s:3219   .bss.delay_lag_val:0000000000000000 $d
/var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccGMqppg.s:3226   .bss.delay_mix_val:0000000000000000 $d
/var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccGMqppg.s:3233   .bss.delay_time_val:0000000000000000 $d
/var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccGMqppg.s:3240   .bss.env_attack_val:0000000000000000 $d
/var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccGMqppg.s:3247   .bss.env_release_val:0000000000000000 $d
/var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccGMqppg.s:3254   .bss.harm_knob_val:0000000000000000 $d
/var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccGMqppg.s:3261   .bss.mix_buffer_aux:0000000000000000 $d
/var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccGMqppg.s:3268   .bss.mix_buffer_out:0000000000000000 $d
/var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccGMqppg.s:3275   .bss.morph_knob_val:0000000000000000 $d
/var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccGMqppg.s:3282   .bss.pitch_val:0000000000000000 $d
/var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccGMqppg.s:3289   .bss.release_time:0000000000000000 $d
/var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccGMqppg.s:3295   .bss.timbre_knob_val:0000000000000000 $d
/var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccGMqppg.s:3302   .data._ZZ23DetermineEngineSettingsvE21previous_engine_index:0000000000000000 $d
/var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccGMqppg.s:3306   .data._ZZ23DetermineEngineSettingsvE21previous_engine_index:0000000000000000 _ZZ23DetermineEngineSettingsvE21previous_engine_index
/var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccGMqppg.s:254    .text._ZN13VoiceEnvelope7ProcessEv:0000000000000017 $d
/var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccGMqppg.s:254    .text._ZN13VoiceEnvelope7ProcessEv:0000000000000018 $t

UNDEFINED SYMBOLS
voice_envelopes
voice_values
voice_active
_ZN5daisy6Switch8DebounceEv
_ZN5daisy13AnalogControl7ProcessEv
button
pitch_knob
harmonics_knob
timbre_knob
decay_knob
morph_knob
delay_feedback_knob
delay_time_knob
delay_lag_knob
delay_mix_knob
env_attack_knob
env_release_knob
modulations
MAX_ENGINE_INDEX
_Z18FindAvailableVoicei
_Z14AssignMonoNotef
ARM GAS  /var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccGMqppg.s 			page 100


_Z9FindVoicefi
current_touch_state
last_touch_state
kTouchMidiNotes
voice_note
delay
_ZN6plaits5Voice6RenderERKNS_5PatchERKNS_11ModulationsEPNS0_5FrameEj
memset
patches
voices
output_buffers
smoothed_output_level
update_display
_ZN5daisy6System7GetTickEv
_ZN5daisy6System6GetNowEv
touch_cv_value
